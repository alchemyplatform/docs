- name: getBlock
  summary: Returns identity and transaction information about a confirmed block in the ledger.
  params:
    - name: slot
      required: true
      description: Slot number as a u64 integer.
      schema:
        type: integer
    - name: Configuration
      required: false
      description: Optional configuration object containing additional settings.
      schema:
        $ref: "#/components/schemas/GetBlockConfig"
  result:
    name: Block information
    description: Returns block information or null if the block is not confirmed.
    schema:
      $ref: "#/components/schemas/BlockInfo"

- name: getBlocks
  summary: Returns a list of confirmed blocks between two slots.
  params:
    - name: start_slot
      required: true
      description: The starting slot.
      schema:
        type: integer
    - name: end_slot
      required: false
      description: The ending slot.
      schema:
        type: integer
    - name: Configuration
      required: false
      description: Optional configuration object.
      schema:
        $ref: "#/components/schemas/GetBlocksConfig"
  result:
    name: List of confirmed blocks
    description: Returns an array of u64 integers listing confirmed blocks.
    schema:
      $ref: "#/components/schemas/SlotList"

- name: getBlocksWithLimit
  summary: Returns a list of confirmed blocks starting at the given slot.
  params:
    - name: start_slot
      required: true
      description: The starting slot.
      schema:
        type: integer
    - name: limit
      required: true
      description: The limit for the number of blocks to return.
      schema:
        type: integer
    - name: Configuration
      required: false
      description: Optional configuration object.
      schema:
        $ref: "#/components/schemas/GetBlocksConfig"
  result:
    name: List of confirmed blocks
    description: Returns an array of u64 integers listing confirmed blocks starting at the start_slot.
    schema:
      $ref: "#/components/schemas/SlotList"

- name: getBlockCommitment
  summary: Returns the commitment for a particular block.
  params:
    - name: block
      required: true
      description: Block number, identified by Slot.
      schema:
        type: integer
  result:
    name: Block commitment
    description: Returns the commitment and total active stake for the block.
    schema:
      $ref: "#/components/schemas/GetBlockCommitmentResult"

- name: getBlockProduction
  summary: Returns recent block production information from the current or previous epoch.
  params:
    - name: Configuration
      required: false
      description: Optional configuration object containing additional settings.
      schema:
        $ref: "#/components/schemas/GetBlockProductionConfig"
  result:
    name: Block production information
    description: Returns block production information for the specified range.
    schema:
      $ref: "#/components/schemas/BlockProductionInfo"

- name: getBlockTime
  summary: Returns the estimated production time of a block.
  params:
    - name: block
      required: true
      description: Block number, identified by Slot.
      schema:
        $ref: "#/components/schemas/GetBlockTimeParams"
  result:
    name: Estimated production time
    description: The estimated production time of the block as a Unix timestamp.
    schema:
      $ref: "#/components/schemas/EstimatedProductionTime"

- name: getFirstAvailableBlock
  summary: Returns the slot of the lowest confirmed block that has not been purged from the ledger.
  params: []
  result:
    name: Slot
    description: The slot number of the lowest confirmed block that is still available in the ledger.
    schema:
      $ref: "#/components/schemas/FirstAvailableBlockSlot"

- name: getGenesisHash
  summary: Returns the genesis hash.
  params: []
  result:
    name: Genesis hash
    description: The genesis hash as a base-58 encoded string.
    schema:
      $ref: "#/components/schemas/GenesisHash"

- name: getHighestSnapshotSlot
  summary: Returns the highest slot information that the node has snapshots for.
  params: []
  result:
    name: Snapshot slot information
    description: Returns a JSON object with the highest full snapshot slot.
    schema:
      $ref: "#/components/schemas/HighestSnapshotSlot"

- name: getMaxRetransmitSlot
  summary: Get the max slot seen from the retransmit stage.
  params: []
  result:
    name: Slot number
    description: The maximum slot number seen from the retransmit stage.
    schema:
      $ref: "#/components/schemas/MaxSlotResult"

- name: getMaxShredInsertSlot
  summary: Get the max slot seen from after shred insert.
  params: []
  result:
    name: Slot number
    description: The maximum slot number seen after shred insert.
    schema:
      $ref: "#/components/schemas/MaxSlotResult"

- name: getBlockHeight
  summary: Returns the current block height of the node.
  params:
    - name: Configuration
      required: false
      description: Optional configuration object containing additional request parameters.
      schema:
        $ref: "#/components/schemas/GetBlockHeightConfig"
  result:
    name: Block height
    description: The current block height, as a u64 integer.
    schema:
      $ref: "#/components/schemas/BlockHeight"

- name: getLatestBlockhash
  summary: Returns the latest blockhash.
  params:
    - name: Configuration
      required: false
      description: A configuration object with optional fields for specifying commitment and minimum context slot.
      schema:
        $ref: "#/components/schemas/GetLatestBlockhashConfig"
  result:
    name: Latest Blockhash
    description: RpcResponse object with blockhash information.
    schema:
      $ref: "#/components/schemas/LatestBlockhash"

- name: isBlockhashValid
  summary: Returns whether a blockhash is still valid or not.
  params:
    - name: blockhash
      required: true
      description: The blockhash of the block to evaluate.
      schema:
        type: string
    - name: Configuration
      required: false
      description: Optional configuration object.
      schema:
        $ref: "#/components/schemas/IsBlockhashValidParams"
  result:
    name: Validity
    description: Indicates if the blockhash is still valid.
    schema:
      $ref: "#/components/schemas/IsBlockhashValidResult"
