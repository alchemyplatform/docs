{
	"x-generated-warning": "⚠️ This file is auto-generated. Do not edit manually",
	"x-fern-parameters": [
		{
			"name": "apiKey",
			"in": "path",
			"schema": {
				"type": "string",
				"default": "docs-demo",
				"description": "For higher throughput, [create your own API key](https://alchemy.com/?a=docs-demo)"
			},
			"required": true
		}
	],
	"$schema": "https://meta.open-rpc.org/",
	"openrpc": "1.2.4",
	"info": {
		"title": "Alchemy BSC JSON-RPC Specification",
		"description": "A specification of the standard JSON-RPC methods for BSC.",
		"version": "0.0.0"
	},
	"servers": [
		{
			"url": "https://bnb-mainnet.g.alchemy.com/v2",
			"name": "BSC Mainnet"
		},
		{
			"url": "https://bnb-testnet.g.alchemy.com/v2",
			"name": "BSC Testnet"
		}
	],
	"methods": [
		{
			"name": "eth_blockNumber",
			"description": "Returns the number of the most recent block.",
			"params": [],
			"result": {
				"name": "Block number",
				"description": "The block number of the most recently mined block as a hexadecimal string.",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_blockNumber example",
					"params": [],
					"result": {
						"name": "Block number",
						"value": "0x2377"
					}
				}
			]
		},
		{
			"name": "eth_call",
			"description": "Executes a new message call immediately without creating a transaction on the blockchain.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"description": "The transaction call object containing the details of the message call.",
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"additionalProperties": false,
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9a-fA-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"oneOf": [
									{
										"title": "Contract Creation (null)",
										"type": "null"
									},
									{
										"title": "Address",
										"type": "string",
										"pattern": "^0x[0-9a-fA-F]{40}$"
									}
								]
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9a-fA-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"maxFeePerBlobGas": {
								"title": "max fee per blob gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
							},
							"accessList": {
								"title": "accessList",
								"description": "EIP-2930 access list",
								"type": "array",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										}
									}
								}
							},
							"blobVersionedHashes": {
								"title": "blobVersionedHashes",
								"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								}
							},
							"blobs": {
								"title": "blobs",
								"description": "Raw blob data.",
								"type": "array",
								"items": {
									"title": "hex encoded bytes",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"description": "The block number, tag, or hash at which to execute the call. Defaults to `'latest'` if not provided.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Return data",
				"description": "The return value of the executed contract function, encoded as a hexadecimal string.",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			},
			"examples": [
				{
					"name": "eth_call example",
					"params": [
						{
							"name": "Transaction",
							"value": {
								"to": "0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",
								"value": "0x1"
							}
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Return data",
						"value": "0x"
					}
				}
			]
		},
		{
			"name": "eth_chainId",
			"description": "Returns the chain ID of the current network as a hexadecimal string.",
			"params": [],
			"result": {
				"name": "Chain ID",
				"description": "The chain ID of the current network in hexadecimal format.",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_chainId example",
					"params": [],
					"result": {
						"name": "Chain ID",
						"value": "0x1"
					}
				}
			]
		},
		{
			"name": "eth_estimateGas",
			"description": "Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"description": "The transaction object for which to estimate gas usage.",
					"schema": {
						"type": "object",
						"title": "Transaction object generic to all types",
						"additionalProperties": false,
						"properties": {
							"type": {
								"title": "type",
								"type": "string",
								"pattern": "^0x([0-9a-fA-F]?){1,2}$"
							},
							"nonce": {
								"title": "nonce",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"to": {
								"title": "to address",
								"oneOf": [
									{
										"title": "Contract Creation (null)",
										"type": "null"
									},
									{
										"title": "Address",
										"type": "string",
										"pattern": "^0x[0-9a-fA-F]{40}$"
									}
								]
							},
							"from": {
								"title": "from address",
								"type": "string",
								"pattern": "^0x[0-9a-fA-F]{40}$"
							},
							"gas": {
								"title": "gas limit",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"value": {
								"title": "value",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"input": {
								"title": "input data",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasPrice": {
								"title": "gas price",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The gas price willing to be paid by the sender in wei"
							},
							"maxPriorityFeePerGas": {
								"title": "max priority fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Maximum fee per gas the sender is willing to pay to miners in wei"
							},
							"maxFeePerGas": {
								"title": "max fee per gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei"
							},
							"maxFeePerBlobGas": {
								"title": "max fee per blob gas",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei"
							},
							"accessList": {
								"title": "accessList",
								"description": "EIP-2930 access list",
								"type": "array",
								"items": {
									"title": "Access list entry",
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"storageKeys": {
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										}
									}
								}
							},
							"blobVersionedHashes": {
								"title": "blobVersionedHashes",
								"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								}
							},
							"blobs": {
								"title": "blobs",
								"description": "Raw blob data.",
								"type": "array",
								"items": {
									"title": "hex encoded bytes",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								}
							},
							"chainId": {
								"title": "chainId",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
								"description": "Chain ID that this transaction is valid on."
							}
						}
					}
				},
				{
					"name": "Block",
					"required": false,
					"description": "The block number or tag at which to estimate gas usage. Defaults to `'latest'` if not provided.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Gas used",
				"description": "The estimated amount of gas required for the transaction, as a hexadecimal string.",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_estimateGas example",
					"params": [
						{
							"name": "Transaction",
							"value": {
								"from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
								"to": "0x44aa93095d6749a706051658b970b941c72c1d53",
								"value": "0x1"
							}
						}
					],
					"result": {
						"name": "Gas used",
						"value": "0x5208"
					}
				}
			]
		},
		{
			"name": "eth_gasPrice",
			"description": "Returns the current price per gas in wei.",
			"params": [],
			"result": {
				"name": "Gas price",
				"description": "The current gas price in wei, as a hexadecimal string.",
				"schema": {
					"title": "Gas price",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_gasPrice example",
					"params": [],
					"result": {
						"name": "Gas price",
						"value": "0x3e8"
					}
				}
			]
		},
		{
			"name": "eth_getBalance",
			"description": "Returns the balance of the account of a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"description": "The address of the account to query the balance for.",
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9a-fA-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": true,
					"description": "The block number, tag, or hash at which to retrieve the balance. Can be a block number, 'latest', 'earliest', 'pending', or a block hash.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Balance",
				"description": "The balance of the account in wei, encoded as a hexadecimal string.",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_getBalance example",
					"params": [
						{
							"name": "Address",
							"value": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Balance",
						"value": "0x1cfe56f3795885980000"
					}
				}
			]
		},
		{
			"name": "eth_getBlockByHash",
			"description": "Returns information about a block by its hash.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "The hash of the block to retrieve.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"description": "If true, returns full transaction objects; if false, returns only transaction hashes.",
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"description": "The block object containing various properties of the block.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Block object",
							"type": "object",
							"required": [
								"hash",
								"parentHash",
								"sha3Uncles",
								"miner",
								"stateRoot",
								"transactionsRoot",
								"receiptsRoot",
								"logsBloom",
								"number",
								"gasLimit",
								"gasUsed",
								"timestamp",
								"extraData",
								"mixHash",
								"nonce",
								"size",
								"transactions",
								"uncles"
							],
							"additionalProperties": false,
							"properties": {
								"hash": {
									"title": "Hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"parentHash": {
									"title": "Parent block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"sha3Uncles": {
									"title": "Ommers hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"miner": {
									"title": "Coinbase",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"stateRoot": {
									"title": "State root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionsRoot": {
									"title": "Transactions root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"receiptsRoot": {
									"title": "Receipts root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"logsBloom": {
									"title": "Bloom filter",
									"type": "string",
									"pattern": "^0x[0-9a-f]{512}$"
								},
								"difficulty": {
									"title": "Difficulty",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"number": {
									"title": "Number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasLimit": {
									"title": "Gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasUsed": {
									"title": "Gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"timestamp": {
									"title": "Timestamp",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"extraData": {
									"title": "Extra data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"mixHash": {
									"title": "Mix hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"nonce": {
									"title": "Nonce",
									"type": "string",
									"pattern": "^0x[0-9a-f]{16}$"
								},
								"baseFeePerGas": {
									"title": "Base fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"withdrawalsRoot": {
									"title": "Withdrawals root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blobGasUsed": {
									"title": "Blob gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"excessBlobGas": {
									"title": "Excess blob gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"parentBeaconBlockRoot": {
									"title": "Parent Beacon Block Root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"size": {
									"title": "Block size",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"transactions": {
									"anyOf": [
										{
											"title": "Transaction hashes",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										{
											"title": "Full transactions",
											"type": "array",
											"items": {
												"type": "object",
												"title": "Transaction information",
												"required": [
													"blockHash",
													"blockNumber",
													"from",
													"hash",
													"transactionIndex"
												],
												"unevaluatedProperties": false,
												"oneOf": [
													{
														"title": "Signed 4844 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"blobVersionedHashes",
															"chainId",
															"gas",
															"input",
															"maxFeePerBlobGas",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"to",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x([0-9a-fA-F]?){1,2}$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"type": "string",
																"pattern": "^0x[0-9a-fA-F]{40}$"
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerBlobGas": {
																"title": "max fee per blob gas",
																"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"blobVersionedHashes": {
																"title": "blobVersionedHashes",
																"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
																"type": "array",
																"items": {
																	"title": "32 byte hex value",
																	"type": "string",
																	"pattern": "^0x[0-9a-f]{64}$"
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 1559 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x2$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 2930 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x1$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed Legacy Transaction",
														"type": "object",
														"required": [
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"v",
															"value"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x0$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													}
												],
												"properties": {
													"blockHash": {
														"title": "block hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockNumber": {
														"title": "block number",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"from": {
														"title": "from address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"hash": {
														"title": "transaction hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"transactionIndex": {
														"title": "transaction index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										}
									]
								},
								"withdrawals": {
									"title": "Withdrawals",
									"type": "array",
									"items": {
										"type": "object",
										"title": "Validator withdrawal",
										"required": [
											"index",
											"validatorIndex",
											"address",
											"amount"
										],
										"additionalProperties": false,
										"properties": {
											"index": {
												"title": "index of withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"validatorIndex": {
												"title": "index of validator that generated withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"address": {
												"title": "recipient address for withdrawal value",
												"type": "string",
												"pattern": "^0x[0-9a-fA-F]{40}$"
											},
											"amount": {
												"title": "value contained in withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
											}
										}
									}
								},
								"uncles": {
									"title": "Uncles",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									}
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getBlockByHash example",
					"params": [
						{
							"name": "Block hash",
							"value": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c"
						},
						{
							"name": "Hydrated transactions",
							"value": false
						}
					],
					"result": {
						"name": "Block information",
						"value": {
							"number": "0x68b3",
							"hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
							"mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
							"parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
							"nonce": "0x378da40ff335b070",
							"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
							"logsBloom": "0x
							"transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
							"stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
							"receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
							"miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
							"difficulty": "0x66e619a",
							"totalDifficulty": "0x1e875d746ae",
							"extraData": "0xd583010502846765746885676f312e37856c696e7578",
							"size": "0x334",
							"gasLimit": "0x47e7c4",
							"gasUsed": "0x37993",
							"timestamp": "0x5835c54d",
							"uncles": [],
							"transactions": [
								"0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
								"0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
							],
							"baseFeePerGas": "0x7",
							"withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
							"withdrawals": [
								{
									"index": "0x0",
									"validatorIndex": "0x9d8c0",
									"address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
									"amount": "0x11a33e3760"
								}
							],
							"blobGasUsed": "0x0",
							"excessBlobGas": "0x0",
							"parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
						}
					}
				}
			]
		},
		{
			"name": "eth_getBlockByNumber",
			"description": "Returns information about a block by its number.",
			"params": [
				{
					"name": "Block number or tag",
					"required": true,
					"description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Hydrated transactions",
					"required": true,
					"description": "If true, returns full transaction objects; if false, returns only transaction hashes.",
					"schema": {
						"title": "hydrated",
						"type": "boolean"
					}
				}
			],
			"result": {
				"name": "Block information",
				"description": "The block object containing various properties of the block.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Block object",
							"type": "object",
							"required": [
								"hash",
								"parentHash",
								"sha3Uncles",
								"miner",
								"stateRoot",
								"transactionsRoot",
								"receiptsRoot",
								"logsBloom",
								"number",
								"gasLimit",
								"gasUsed",
								"timestamp",
								"extraData",
								"mixHash",
								"nonce",
								"size",
								"transactions",
								"uncles"
							],
							"additionalProperties": false,
							"properties": {
								"hash": {
									"title": "Hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"parentHash": {
									"title": "Parent block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"sha3Uncles": {
									"title": "Ommers hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"miner": {
									"title": "Coinbase",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"stateRoot": {
									"title": "State root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionsRoot": {
									"title": "Transactions root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"receiptsRoot": {
									"title": "Receipts root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"logsBloom": {
									"title": "Bloom filter",
									"type": "string",
									"pattern": "^0x[0-9a-f]{512}$"
								},
								"difficulty": {
									"title": "Difficulty",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"number": {
									"title": "Number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasLimit": {
									"title": "Gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasUsed": {
									"title": "Gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"timestamp": {
									"title": "Timestamp",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"extraData": {
									"title": "Extra data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"mixHash": {
									"title": "Mix hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"nonce": {
									"title": "Nonce",
									"type": "string",
									"pattern": "^0x[0-9a-f]{16}$"
								},
								"baseFeePerGas": {
									"title": "Base fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"withdrawalsRoot": {
									"title": "Withdrawals root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blobGasUsed": {
									"title": "Blob gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"excessBlobGas": {
									"title": "Excess blob gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"parentBeaconBlockRoot": {
									"title": "Parent Beacon Block Root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"size": {
									"title": "Block size",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"transactions": {
									"anyOf": [
										{
											"title": "Transaction hashes",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										{
											"title": "Full transactions",
											"type": "array",
											"items": {
												"type": "object",
												"title": "Transaction information",
												"required": [
													"blockHash",
													"blockNumber",
													"from",
													"hash",
													"transactionIndex"
												],
												"unevaluatedProperties": false,
												"oneOf": [
													{
														"title": "Signed 4844 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"blobVersionedHashes",
															"chainId",
															"gas",
															"input",
															"maxFeePerBlobGas",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"to",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x([0-9a-fA-F]?){1,2}$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"type": "string",
																"pattern": "^0x[0-9a-fA-F]{40}$"
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerBlobGas": {
																"title": "max fee per blob gas",
																"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"blobVersionedHashes": {
																"title": "blobVersionedHashes",
																"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
																"type": "array",
																"items": {
																	"title": "32 byte hex value",
																	"type": "string",
																	"pattern": "^0x[0-9a-f]{64}$"
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 1559 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x2$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 2930 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x1$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed Legacy Transaction",
														"type": "object",
														"required": [
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"v",
															"value"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x0$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													}
												],
												"properties": {
													"blockHash": {
														"title": "block hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockNumber": {
														"title": "block number",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"from": {
														"title": "from address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"hash": {
														"title": "transaction hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"transactionIndex": {
														"title": "transaction index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										}
									]
								},
								"withdrawals": {
									"title": "Withdrawals",
									"type": "array",
									"items": {
										"type": "object",
										"title": "Validator withdrawal",
										"required": [
											"index",
											"validatorIndex",
											"address",
											"amount"
										],
										"additionalProperties": false,
										"properties": {
											"index": {
												"title": "index of withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"validatorIndex": {
												"title": "index of validator that generated withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"address": {
												"title": "recipient address for withdrawal value",
												"type": "string",
												"pattern": "^0x[0-9a-fA-F]{40}$"
											},
											"amount": {
												"title": "value contained in withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
											}
										}
									}
								},
								"uncles": {
									"title": "Uncles",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									}
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getBlockByNumber example",
					"params": [
						{
							"name": "Block number or tag",
							"value": "0x68b3"
						},
						{
							"name": "Hydrated transactions",
							"value": false
						}
					],
					"result": {
						"name": "Block information",
						"value": {
							"number": "0x68b3",
							"hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
							"mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
							"parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
							"nonce": "0x378da40ff335b070",
							"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
							"logsBloom": "0x
							"transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
							"stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
							"receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
							"miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
							"difficulty": "0x66e619a",
							"totalDifficulty": "0x1e875d746ae",
							"extraData": "0xd583010502846765746885676f312e37856c696e7578",
							"size": "0x334",
							"gasLimit": "0x47e7c4",
							"gasUsed": "0x37993",
							"timestamp": "0x5835c54d",
							"uncles": [],
							"transactions": [
								"0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
								"0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
							],
							"baseFeePerGas": "0x7",
							"withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
							"withdrawals": [
								{
									"index": "0x0",
									"validatorIndex": "0x9d8c0",
									"address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
									"amount": "0x11a33e3760"
								}
							],
							"blobGasUsed": "0x0",
							"excessBlobGas": "0x0",
							"parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
						}
					}
				}
			]
		},
		{
			"name": "eth_getBlockTransactionCountByHash",
			"description": "Returns the number of transactions in a block from a block matching the given block hash.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "The hash of the block.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"description": "The number of transactions in the block as a hexadecimal string.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Transaction count",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getBlockTransactionCountByHash example",
					"params": [
						{
							"name": "Block hash",
							"value": "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"
						}
					],
					"result": {
						"name": "Transaction count",
						"value": "0x8"
					}
				}
			]
		},
		{
			"name": "eth_getBlockTransactionCountByNumber",
			"description": "Returns the number of transactions in a block matching the given block number.",
			"params": [
				{
					"name": "Block number or tag",
					"required": true,
					"description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"description": "The number of transactions in the block as a hexadecimal string.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Transaction count",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getBlockTransactionCountByNumber example",
					"params": [
						{
							"name": "Block number or tag",
							"value": "0xe8"
						}
					],
					"result": {
						"name": "Transaction count",
						"value": "0x8"
					}
				}
			]
		},
		{
			"name": "eth_getCode",
			"description": "Returns the code at a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"description": "The address of the contract to get code from.",
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9a-fA-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": true,
					"description": "The block number, tag, or hash at which to retrieve the code.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Bytecode",
				"description": "The code from the specified address, as a hexadecimal string.",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			},
			"examples": [
				{
					"name": "eth_getCode example",
					"params": [
						{
							"name": "Address",
							"value": "0xa50a51c09a5c451c52bb714527e1974b686d8e77"
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Bytecode",
						"value": "0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"
					}
				}
			]
		},
		{
			"name": "eth_getLogs",
			"description": "Returns an array of all logs matching the specified filter.\n\n<Note>Requests to `eth_getLogs` are limited to a maximum 500-block range for users on the Free Tier. For access to larger block ranges (up to 10,000 blocks), please upgrade to a paid plan (PAYG or Enterprise). </Note>\n",
			"params": [
				{
					"name": "Filter",
					"required": true,
					"description": "The filter options object to specify the criteria for logs retrieval.",
					"schema": {
						"title": "filter",
						"type": "object",
						"additionalProperties": false,
						"properties": {
							"fromBlock": {
								"title": "from block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"toBlock": {
								"title": "to block",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"address": {
								"title": "Address(es)",
								"oneOf": [
									{
										"title": "Any Address",
										"type": "null"
									},
									{
										"title": "Address",
										"type": "string",
										"pattern": "^0x[0-9a-fA-F]{40}$"
									},
									{
										"title": "Addresses",
										"type": "array",
										"items": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										}
									}
								]
							},
							"topics": {
								"title": "Topics",
								"oneOf": [
									{
										"title": "Any Topic Match",
										"type": "null"
									},
									{
										"title": "Specified Filter Topics",
										"type": "array",
										"items": {
											"title": "Filter Topic List Entry",
											"oneOf": [
												{
													"title": "Single Topic Match",
													"type": "string",
													"pattern": "^0x[0-9a-f]{64}$"
												},
												{
													"title": "Multiple Topic Match",
													"type": "array",
													"items": {
														"title": "32 hex encoded bytes",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													}
												}
											]
										}
									}
								]
							}
						}
					}
				}
			],
			"result": {
				"name": "Log objects",
				"description": "An array of log objects matching the filter criteria.",
				"schema": {
					"title": "Filter results",
					"oneOf": [
						{
							"title": "new block or transaction hashes",
							"type": "array",
							"items": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						},
						{
							"title": "new logs",
							"type": "array",
							"items": {
								"title": "log",
								"type": "object",
								"required": [
									"transactionHash"
								],
								"additionalProperties": false,
								"properties": {
									"removed": {
										"title": "removed",
										"type": "boolean"
									},
									"logIndex": {
										"title": "log index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionIndex": {
										"title": "transaction index",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"transactionHash": {
										"title": "transaction hash",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									},
									"blockHash": {
										"title": "block hash",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									},
									"blockNumber": {
										"title": "block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									"address": {
										"title": "address",
										"type": "string",
										"pattern": "^0x[0-9a-fA-F]{40}$"
									},
									"data": {
										"title": "data",
										"type": "string",
										"pattern": "^0x[0-9a-f]*$"
									},
									"topics": {
										"title": "topics",
										"type": "array",
										"items": {
											"title": "32 hex encoded bytes",
											"type": "string",
											"pattern": "^0x[0-9a-f]{64}$"
										}
									}
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getLogs example",
					"params": [
						{
							"name": "Filter",
							"value": {
								"fromBlock": "0x137d3c2",
								"toBlock": "0x137d3c3",
								"address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
								"topics": []
							}
						}
					],
					"result": {
						"name": "Log objects",
						"value": [
							{
								"logIndex": "0x0",
								"removed": false,
								"blockNumber": "0x233",
								"blockHash": "0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",
								"transactionHash": "0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",
								"transactionIndex": "0x0",
								"address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
								"data": "0x0000000000000000000000000000000000000000000000000000000000000004",
								"topics": [
									"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
								]
							},
							{
								"logIndex": "0x0",
								"removed": false,
								"blockNumber": "0x238",
								"blockHash": "0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",
								"transactionHash": "0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",
								"transactionIndex": "0x0",
								"address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
								"data": "0x0000000000000000000000000000000000000000000000000000000000000007",
								"topics": [
									"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
								]
							}
						]
					}
				}
			]
		},
		{
			"name": "eth_getProof",
			"description": "Returns the Merkle proof for a given account and optionally some storage keys.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"description": "The address of the account to generate the proof for.",
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9a-fA-F]{40}$"
					}
				},
				{
					"name": "StorageKeys",
					"required": true,
					"description": "An array of storage keys (slots) to generate proofs for.",
					"schema": {
						"title": "Storage keys",
						"type": "array",
						"items": {
							"title": "32 hex encoded bytes",
							"type": "string",
							"pattern": "^0x[0-9a-f]{0,64}$"
						}
					}
				},
				{
					"name": "Block",
					"required": true,
					"description": "The block number, tag, or hash at which to generate the proof.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Account proof",
				"description": "An object containing the account proof and storage proofs.",
				"schema": {
					"title": "Account proof",
					"type": "object",
					"required": [
						"address",
						"accountProof",
						"balance",
						"codeHash",
						"nonce",
						"storageHash",
						"storageProof"
					],
					"additionalProperties": false,
					"properties": {
						"address": {
							"title": "address",
							"type": "string",
							"pattern": "^0x[0-9a-fA-F]{40}$"
						},
						"accountProof": {
							"title": "accountProof",
							"type": "array",
							"items": {
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							}
						},
						"balance": {
							"title": "balance",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
						},
						"codeHash": {
							"title": "codeHash",
							"type": "string",
							"pattern": "^0x[0-9a-f]{64}$"
						},
						"nonce": {
							"title": "nonce",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
						},
						"storageHash": {
							"title": "storageHash",
							"type": "string",
							"pattern": "^0x[0-9a-f]{64}$"
						},
						"storageProof": {
							"title": "Storage proofs",
							"type": "array",
							"items": {
								"title": "Storage proof",
								"type": "object",
								"required": [
									"key",
									"value",
									"proof"
								],
								"additionalProperties": false,
								"properties": {
									"key": {
										"title": "key",
										"type": "string",
										"pattern": "^0x[0-9a-f]{0,64}$"
									},
									"value": {
										"title": "value",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
									},
									"proof": {
										"title": "proof",
										"type": "array",
										"items": {
											"title": "hex encoded bytes",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										}
									}
								}
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "eth_getProof example",
					"params": [
						{
							"name": "Address",
							"value": "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8"
						},
						{
							"name": "StorageKeys",
							"value": [
								"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
								"0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"
							]
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Account proof",
						"value": {
							"accountProof": [
								"0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280"
							],
							"balance": "0x0",
							"codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
							"nonce": "0x0",
							"storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
							"storageProof": [
								{
									"key": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
									"proof": [
										"0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280"
									],
									"value": "0x1"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "eth_getStorageAt",
			"description": "Returns the value from a storage position at a given address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"description": "The address of the contract to read storage from.",
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9a-fA-F]{40}$"
					}
				},
				{
					"name": "Storage slot",
					"required": true,
					"description": "The index position of the storage slot to retrieve, as a hexadecimal string.",
					"schema": {
						"title": "hex encoded 256 bit unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
					}
				},
				{
					"name": "Block",
					"required": true,
					"description": "The block number, tag, or hash at which to retrieve the storage value.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Value",
				"description": "The value stored at the given storage slot, encoded as a hexadecimal string.",
				"schema": {
					"title": "hex encoded bytes",
					"type": "string",
					"pattern": "^0x[0-9a-f]*$"
				}
			},
			"examples": [
				{
					"name": "eth_getStorageAt example",
					"params": [
						{
							"name": "Address",
							"value": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"
						},
						{
							"name": "Storage slot",
							"value": "0x0"
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Value",
						"value": "0x0000000000000000000000000000000000000000000000000000000000000000"
					}
				}
			]
		},
		{
			"name": "eth_getTransactionByBlockHashAndIndex",
			"description": "Returns information about a transaction by block hash and transaction index position.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "The hash of the block containing the transaction.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				},
				{
					"name": "Transaction index",
					"required": true,
					"description": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"description": "The transaction object containing various properties of the transaction.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"type": "object",
							"title": "Transaction information",
							"required": [
								"blockHash",
								"blockNumber",
								"from",
								"hash",
								"transactionIndex"
							],
							"unevaluatedProperties": false,
							"oneOf": [
								{
									"title": "Signed 4844 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"blobVersionedHashes",
										"chainId",
										"gas",
										"input",
										"maxFeePerBlobGas",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"to",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x([0-9a-fA-F]?){1,2}$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerBlobGas": {
											"title": "max fee per blob gas",
											"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"blobVersionedHashes": {
											"title": "blobVersionedHashes",
											"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 1559 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x2$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 2930 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x1$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed Legacy Transaction",
									"type": "object",
									"required": [
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"v",
										"value"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x0$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								}
							],
							"properties": {
								"blockHash": {
									"title": "block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blockNumber": {
									"title": "block number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"from": {
									"title": "from address",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"hash": {
									"title": "transaction hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionIndex": {
									"title": "transaction index",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getTransactionByBlockHashAndIndex example",
					"params": [
						{
							"name": "Block hash",
							"value": "0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7"
						},
						{
							"name": "Transaction index",
							"value": "0x2"
						}
					],
					"result": {
						"name": "Transaction information",
						"value": {
							"blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
							"blockNumber": "0x422",
							"chainId": "0x7e2",
							"from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
							"gas": "0x5208",
							"gasPrice": "0x3b9aca00",
							"hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
							"input": "0x",
							"nonce": "0x1",
							"to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
							"transactionIndex": "0x2",
							"value": "0x4e1003b28d9280000",
							"v": "0x1c",
							"r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
							"s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
						}
					}
				}
			]
		},
		{
			"name": "eth_getTransactionByBlockNumberAndIndex",
			"description": "Returns information about a transaction by block number and transaction index position.",
			"params": [
				{
					"name": "Block",
					"required": true,
					"description": "The block number or tag ('latest', 'earliest', 'pending') containing the transaction.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Transaction index",
					"required": true,
					"description": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"description": "The transaction object containing various properties of the transaction.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"type": "object",
							"title": "Transaction information",
							"required": [
								"blockHash",
								"blockNumber",
								"from",
								"hash",
								"transactionIndex"
							],
							"unevaluatedProperties": false,
							"oneOf": [
								{
									"title": "Signed 4844 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"blobVersionedHashes",
										"chainId",
										"gas",
										"input",
										"maxFeePerBlobGas",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"to",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x([0-9a-fA-F]?){1,2}$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerBlobGas": {
											"title": "max fee per blob gas",
											"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"blobVersionedHashes": {
											"title": "blobVersionedHashes",
											"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 1559 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x2$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 2930 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x1$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed Legacy Transaction",
									"type": "object",
									"required": [
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"v",
										"value"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x0$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								}
							],
							"properties": {
								"blockHash": {
									"title": "block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blockNumber": {
									"title": "block number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"from": {
									"title": "from address",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"hash": {
									"title": "transaction hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionIndex": {
									"title": "transaction index",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getTransactionByBlockNumberAndIndex example",
					"params": [
						{
							"name": "Block",
							"value": "0x1442e"
						},
						{
							"name": "Transaction index",
							"value": "0x2"
						}
					],
					"result": {
						"name": "Transaction information",
						"value": {
							"blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
							"blockNumber": "0x1442e",
							"chainId": "0x7e2",
							"from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
							"gas": "0x5208",
							"gasPrice": "0x3b9aca00",
							"hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
							"input": "0x",
							"nonce": "0x1",
							"to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
							"transactionIndex": "0x2",
							"value": "0x4e1003b28d9280000",
							"v": "0x1c",
							"r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
							"s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
						}
					}
				}
			]
		},
		{
			"name": "eth_getTransactionByHash",
			"description": "Returns information about a transaction requested by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"required": true,
					"description": "The hash of the transaction to retrieve.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				}
			],
			"result": {
				"name": "Transaction information",
				"description": "The transaction object containing various properties of the transaction.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"type": "object",
							"title": "Transaction information",
							"required": [
								"blockHash",
								"blockNumber",
								"from",
								"hash",
								"transactionIndex"
							],
							"unevaluatedProperties": false,
							"oneOf": [
								{
									"title": "Signed 4844 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"blobVersionedHashes",
										"chainId",
										"gas",
										"input",
										"maxFeePerBlobGas",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"to",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x([0-9a-fA-F]?){1,2}$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerBlobGas": {
											"title": "max fee per blob gas",
											"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"blobVersionedHashes": {
											"title": "blobVersionedHashes",
											"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 1559 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"maxFeePerGas",
										"maxPriorityFeePerGas",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x2$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"maxPriorityFeePerGas": {
											"title": "max priority fee per gas",
											"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"maxFeePerGas": {
											"title": "max fee per gas",
											"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed 2930 Transaction",
									"type": "object",
									"required": [
										"accessList",
										"chainId",
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"value",
										"yParity"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x1$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"accessList": {
											"title": "accessList",
											"description": "EIP-2930 access list",
											"type": "array",
											"items": {
												"title": "Access list entry",
												"type": "object",
												"additionalProperties": false,
												"properties": {
													"address": {
														"title": "hex encoded address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"storageKeys": {
														"type": "array",
														"items": {
															"title": "32 byte hex value",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"yParity": {
											"title": "yParity",
											"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Signed Legacy Transaction",
									"type": "object",
									"required": [
										"gas",
										"gasPrice",
										"input",
										"nonce",
										"r",
										"s",
										"type",
										"v",
										"value"
									],
									"properties": {
										"type": {
											"title": "type",
											"type": "string",
											"pattern": "^0x0$"
										},
										"nonce": {
											"title": "nonce",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"to": {
											"title": "to address",
											"oneOf": [
												{
													"title": "Contract Creation (null)",
													"type": "null"
												},
												{
													"title": "Address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$"
												}
											]
										},
										"gas": {
											"title": "gas limit",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"value": {
											"title": "value",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"input": {
											"title": "input data",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"gasPrice": {
											"title": "gas price",
											"description": "The gas price willing to be paid by the sender in wei",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"chainId": {
											"title": "chainId",
											"description": "Chain ID that this transaction is valid on.",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"v": {
											"title": "v",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"r": {
											"title": "r",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"s": {
											"title": "s",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								}
							],
							"properties": {
								"blockHash": {
									"title": "block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blockNumber": {
									"title": "block number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"from": {
									"title": "from address",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"hash": {
									"title": "transaction hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionIndex": {
									"title": "transaction index",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getTransactionByHash example",
					"params": [
						{
							"name": "Transaction hash",
							"value": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"
						}
					],
					"result": {
						"name": "Transaction information",
						"value": {
							"blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
							"blockNumber": "0x422",
							"chainId": "0x7e2",
							"from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
							"gas": "0x5208",
							"gasPrice": "0x3b9aca00",
							"hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
							"input": "0x",
							"nonce": "0x1",
							"to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
							"transactionIndex": "0x0",
							"value": "0x4e1003b28d9280000",
							"v": "0x1c",
							"r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
							"s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
						}
					}
				}
			]
		},
		{
			"name": "eth_getTransactionCount",
			"description": "Returns the number of transactions sent from an address.",
			"params": [
				{
					"name": "Address",
					"required": true,
					"description": "The address of the account to get the transaction count for.",
					"schema": {
						"title": "hex encoded address",
						"type": "string",
						"pattern": "^0x[0-9a-fA-F]{40}$"
					}
				},
				{
					"name": "Block",
					"required": true,
					"description": "The block number, tag, or hash at which to retrieve the transaction count.",
					"schema": {
						"title": "Block number, tag, or block hash",
						"anyOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							},
							{
								"title": "Block hash",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						]
					}
				}
			],
			"result": {
				"name": "Transaction count",
				"description": "The number of transactions sent from the address, as a hexadecimal string.",
				"schema": {
					"title": "hex encoded unsigned integer",
					"type": "string",
					"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
				}
			},
			"examples": [
				{
					"name": "eth_getTransactionCount example",
					"params": [
						{
							"name": "Address",
							"value": "0xc94770007dda54cF92009BFF0dE90c06F603a09f"
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Transaction count",
						"value": "0x1"
					}
				}
			]
		},
		{
			"name": "eth_getTransactionReceipt",
			"description": "Returns the receipt of a transaction by transaction hash.",
			"params": [
				{
					"name": "Transaction hash",
					"required": true,
					"description": "The hash of the transaction for which to get the receipt.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				}
			],
			"result": {
				"name": "Receipt information",
				"description": "The transaction receipt object containing various properties of the transaction receipt.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"type": "object",
							"title": "Receipt information",
							"required": [
								"blockHash",
								"blockNumber",
								"from",
								"cumulativeGasUsed",
								"gasUsed",
								"logs",
								"logsBloom",
								"transactionHash",
								"transactionIndex",
								"effectiveGasPrice"
							],
							"additionalProperties": false,
							"properties": {
								"type": {
									"title": "type",
									"type": "string",
									"pattern": "^0x([0-9a-fA-F]?){1,2}$"
								},
								"transactionHash": {
									"title": "transaction hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionIndex": {
									"title": "transaction index",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"blockHash": {
									"title": "block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blockNumber": {
									"title": "block number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"from": {
									"title": "from",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"to": {
									"title": "to",
									"description": "Address of the receiver or null in a contract creation transaction.",
									"oneOf": [
										{
											"title": "Contract Creation (null)",
											"type": "null"
										},
										{
											"title": "Recipient Address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										}
									]
								},
								"cumulativeGasUsed": {
									"title": "cumulative gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The sum of gas used by this transaction and all preceding transactions in the same block."
								},
								"gasUsed": {
									"title": "gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The amount of gas used for this specific transaction alone."
								},
								"blobGasUsed": {
									"title": "blob gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844."
								},
								"contractAddress": {
									"title": "contract address",
									"description": "The contract address created, if the transaction was a contract creation, otherwise null.",
									"oneOf": [
										{
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										{
											"title": "Null",
											"type": "null"
										}
									]
								},
								"logs": {
									"title": "logs",
									"type": "array",
									"items": {
										"title": "log",
										"type": "object",
										"required": [
											"transactionHash"
										],
										"additionalProperties": false,
										"properties": {
											"removed": {
												"title": "removed",
												"type": "boolean"
											},
											"logIndex": {
												"title": "log index",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
											},
											"transactionIndex": {
												"title": "transaction index",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
											},
											"transactionHash": {
												"title": "transaction hash",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											},
											"blockHash": {
												"title": "block hash",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											},
											"blockNumber": {
												"title": "block number",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
											},
											"address": {
												"title": "address",
												"type": "string",
												"pattern": "^0x[0-9a-fA-F]{40}$"
											},
											"data": {
												"title": "data",
												"type": "string",
												"pattern": "^0x[0-9a-f]*$"
											},
											"topics": {
												"title": "topics",
												"type": "array",
												"items": {
													"title": "32 hex encoded bytes",
													"type": "string",
													"pattern": "^0x[0-9a-f]{64}$"
												}
											}
										}
									}
								},
								"logsBloom": {
									"title": "logs bloom",
									"type": "string",
									"pattern": "^0x[0-9a-f]{512}$"
								},
								"root": {
									"title": "state root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$",
									"description": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade."
								},
								"status": {
									"title": "status",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade."
								},
								"effectiveGasPrice": {
									"title": "effective gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas)."
								},
								"blobGasPrice": {
									"title": "blob gas price",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
									"description": "The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844."
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getTransactionReceipt example",
					"params": [
						{
							"name": "Transaction hash",
							"value": "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"
						}
					],
					"result": {
						"name": "Receipt information",
						"value": {
							"blockHash": "0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",
							"blockNumber": "0x50",
							"contractAddress": null,
							"cumulativeGasUsed": "0x5208",
							"from": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
							"gasUsed": "0x5208",
							"effectiveGasPrice": "0x1",
							"logs": [],
							"logsBloom": "0x
							"status": "0x1",
							"to": "0xf17f52151ebef6c7334fad080c5704d77216b732",
							"transactionHash": "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f",
							"transactionIndex": "0x0",
							"type": "0x0"
						}
					}
				}
			]
		},
		{
			"name": "eth_getUncleByBlockHashAndIndex",
			"description": "Returns information about an uncle of a block by hash and uncle index.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "The hash of the block containing the uncle.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				},
				{
					"name": "Uncle index",
					"required": true,
					"description": "The index position of the uncle in the block's uncles array.",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Uncle block information",
				"description": "The uncle block object, or null if not found.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Block object",
							"type": "object",
							"required": [
								"hash",
								"parentHash",
								"sha3Uncles",
								"miner",
								"stateRoot",
								"transactionsRoot",
								"receiptsRoot",
								"logsBloom",
								"number",
								"gasLimit",
								"gasUsed",
								"timestamp",
								"extraData",
								"mixHash",
								"nonce",
								"size",
								"transactions",
								"uncles"
							],
							"additionalProperties": false,
							"properties": {
								"hash": {
									"title": "Hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"parentHash": {
									"title": "Parent block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"sha3Uncles": {
									"title": "Ommers hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"miner": {
									"title": "Coinbase",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"stateRoot": {
									"title": "State root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionsRoot": {
									"title": "Transactions root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"receiptsRoot": {
									"title": "Receipts root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"logsBloom": {
									"title": "Bloom filter",
									"type": "string",
									"pattern": "^0x[0-9a-f]{512}$"
								},
								"difficulty": {
									"title": "Difficulty",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"number": {
									"title": "Number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasLimit": {
									"title": "Gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasUsed": {
									"title": "Gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"timestamp": {
									"title": "Timestamp",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"extraData": {
									"title": "Extra data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"mixHash": {
									"title": "Mix hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"nonce": {
									"title": "Nonce",
									"type": "string",
									"pattern": "^0x[0-9a-f]{16}$"
								},
								"baseFeePerGas": {
									"title": "Base fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"withdrawalsRoot": {
									"title": "Withdrawals root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blobGasUsed": {
									"title": "Blob gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"excessBlobGas": {
									"title": "Excess blob gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"parentBeaconBlockRoot": {
									"title": "Parent Beacon Block Root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"size": {
									"title": "Block size",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"transactions": {
									"anyOf": [
										{
											"title": "Transaction hashes",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										{
											"title": "Full transactions",
											"type": "array",
											"items": {
												"type": "object",
												"title": "Transaction information",
												"required": [
													"blockHash",
													"blockNumber",
													"from",
													"hash",
													"transactionIndex"
												],
												"unevaluatedProperties": false,
												"oneOf": [
													{
														"title": "Signed 4844 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"blobVersionedHashes",
															"chainId",
															"gas",
															"input",
															"maxFeePerBlobGas",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"to",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x([0-9a-fA-F]?){1,2}$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"type": "string",
																"pattern": "^0x[0-9a-fA-F]{40}$"
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerBlobGas": {
																"title": "max fee per blob gas",
																"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"blobVersionedHashes": {
																"title": "blobVersionedHashes",
																"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
																"type": "array",
																"items": {
																	"title": "32 byte hex value",
																	"type": "string",
																	"pattern": "^0x[0-9a-f]{64}$"
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 1559 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x2$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 2930 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x1$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed Legacy Transaction",
														"type": "object",
														"required": [
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"v",
															"value"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x0$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													}
												],
												"properties": {
													"blockHash": {
														"title": "block hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockNumber": {
														"title": "block number",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"from": {
														"title": "from address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"hash": {
														"title": "transaction hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"transactionIndex": {
														"title": "transaction index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										}
									]
								},
								"withdrawals": {
									"title": "Withdrawals",
									"type": "array",
									"items": {
										"type": "object",
										"title": "Validator withdrawal",
										"required": [
											"index",
											"validatorIndex",
											"address",
											"amount"
										],
										"additionalProperties": false,
										"properties": {
											"index": {
												"title": "index of withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"validatorIndex": {
												"title": "index of validator that generated withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"address": {
												"title": "recipient address for withdrawal value",
												"type": "string",
												"pattern": "^0x[0-9a-fA-F]{40}$"
											},
											"amount": {
												"title": "value contained in withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
											}
										}
									}
								},
								"uncles": {
									"title": "Uncles",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									}
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getUncleByBlockHashAndIndex example",
					"params": [
						{
							"name": "Block hash",
							"value": "0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"
						},
						{
							"name": "Uncle index",
							"value": "0x0"
						}
					],
					"result": {
						"name": "Uncle block information",
						"value": {
							"number": "0x1b4",
							"hash": "0x5e7b81b43b5f84edbb2c3ebd92e9b1b7b6db0c6420c1a0e59b1eb542f1fdd3b2",
							"parentHash": "0x9fc6f13f4be42b93e9f7243d2e72607fbea6edb5e2f8a66e2b5b4c6f5e8c50c6",
							"nonce": "0x0000000000000000",
							"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
							"logsBloom": "0x00...0",
							"transactionsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
							"stateRoot": "0xd7f8974fb5ac78d7c5fc5e38a69b1a65b6cdefbf207f53ca3ed49f0610f2342f",
							"receiptsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
							"miner": "0x0000000000000000000000000000000000000000",
							"difficulty": "0x27f07",
							"totalDifficulty": "0x27f07",
							"extraData": "0x",
							"size": "0x1f8",
							"gasLimit": "0x47e7c4",
							"gasUsed": "0x0",
							"timestamp": "0x55ba467c",
							"transactions": [],
							"uncles": []
						}
					}
				}
			]
		},
		{
			"name": "eth_getUncleByBlockNumberAndIndex",
			"description": "Returns information about an uncle of a block by number and uncle index.",
			"params": [
				{
					"name": "Block number or tag",
					"required": true,
					"description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				},
				{
					"name": "Uncle index",
					"required": true,
					"description": "The index position of the uncle in the block's uncles array.",
					"schema": {
						"title": "hex encoded unsigned integer",
						"type": "string",
						"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
					}
				}
			],
			"result": {
				"name": "Uncle block information",
				"description": "The uncle block object, or null if not found.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Block object",
							"type": "object",
							"required": [
								"hash",
								"parentHash",
								"sha3Uncles",
								"miner",
								"stateRoot",
								"transactionsRoot",
								"receiptsRoot",
								"logsBloom",
								"number",
								"gasLimit",
								"gasUsed",
								"timestamp",
								"extraData",
								"mixHash",
								"nonce",
								"size",
								"transactions",
								"uncles"
							],
							"additionalProperties": false,
							"properties": {
								"hash": {
									"title": "Hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"parentHash": {
									"title": "Parent block hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"sha3Uncles": {
									"title": "Ommers hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"miner": {
									"title": "Coinbase",
									"type": "string",
									"pattern": "^0x[0-9a-fA-F]{40}$"
								},
								"stateRoot": {
									"title": "State root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"transactionsRoot": {
									"title": "Transactions root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"receiptsRoot": {
									"title": "Receipts root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"logsBloom": {
									"title": "Bloom filter",
									"type": "string",
									"pattern": "^0x[0-9a-f]{512}$"
								},
								"difficulty": {
									"title": "Difficulty",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"number": {
									"title": "Number",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasLimit": {
									"title": "Gas limit",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"gasUsed": {
									"title": "Gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"timestamp": {
									"title": "Timestamp",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"extraData": {
									"title": "Extra data",
									"type": "string",
									"pattern": "^0x[0-9a-f]*$"
								},
								"mixHash": {
									"title": "Mix hash",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"nonce": {
									"title": "Nonce",
									"type": "string",
									"pattern": "^0x[0-9a-f]{16}$"
								},
								"baseFeePerGas": {
									"title": "Base fee per gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"withdrawalsRoot": {
									"title": "Withdrawals root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"blobGasUsed": {
									"title": "Blob gas used",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"excessBlobGas": {
									"title": "Excess blob gas",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"parentBeaconBlockRoot": {
									"title": "Parent Beacon Block Root",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								},
								"size": {
									"title": "Block size",
									"type": "string",
									"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
								},
								"transactions": {
									"anyOf": [
										{
											"title": "Transaction hashes",
											"type": "array",
											"items": {
												"title": "32 byte hex value",
												"type": "string",
												"pattern": "^0x[0-9a-f]{64}$"
											}
										},
										{
											"title": "Full transactions",
											"type": "array",
											"items": {
												"type": "object",
												"title": "Transaction information",
												"required": [
													"blockHash",
													"blockNumber",
													"from",
													"hash",
													"transactionIndex"
												],
												"unevaluatedProperties": false,
												"oneOf": [
													{
														"title": "Signed 4844 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"blobVersionedHashes",
															"chainId",
															"gas",
															"input",
															"maxFeePerBlobGas",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"to",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x([0-9a-fA-F]?){1,2}$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"type": "string",
																"pattern": "^0x[0-9a-fA-F]{40}$"
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerBlobGas": {
																"title": "max fee per blob gas",
																"description": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"blobVersionedHashes": {
																"title": "blobVersionedHashes",
																"description": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
																"type": "array",
																"items": {
																	"title": "32 byte hex value",
																	"type": "string",
																	"pattern": "^0x[0-9a-f]{64}$"
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 1559 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"maxFeePerGas",
															"maxPriorityFeePerGas",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x2$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"maxPriorityFeePerGas": {
																"title": "max priority fee per gas",
																"description": "Maximum fee per gas the sender is willing to pay to miners in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"maxFeePerGas": {
																"title": "max fee per gas",
																"description": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed 2930 Transaction",
														"type": "object",
														"required": [
															"accessList",
															"chainId",
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"value",
															"yParity"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x1$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"accessList": {
																"title": "accessList",
																"description": "EIP-2930 access list",
																"type": "array",
																"items": {
																	"title": "Access list entry",
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"address": {
																			"title": "hex encoded address",
																			"type": "string",
																			"pattern": "^0x[0-9a-fA-F]{40}$"
																		},
																		"storageKeys": {
																			"type": "array",
																			"items": {
																				"title": "32 byte hex value",
																				"type": "string",
																				"pattern": "^0x[0-9a-f]{64}$"
																			}
																		}
																	}
																}
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"yParity": {
																"title": "yParity",
																"description": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"description": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													},
													{
														"title": "Signed Legacy Transaction",
														"type": "object",
														"required": [
															"gas",
															"gasPrice",
															"input",
															"nonce",
															"r",
															"s",
															"type",
															"v",
															"value"
														],
														"properties": {
															"type": {
																"title": "type",
																"type": "string",
																"pattern": "^0x0$"
															},
															"nonce": {
																"title": "nonce",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"to": {
																"title": "to address",
																"oneOf": [
																	{
																		"title": "Contract Creation (null)",
																		"type": "null"
																	},
																	{
																		"title": "Address",
																		"type": "string",
																		"pattern": "^0x[0-9a-fA-F]{40}$"
																	}
																]
															},
															"gas": {
																"title": "gas limit",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"value": {
																"title": "value",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"input": {
																"title": "input data",
																"type": "string",
																"pattern": "^0x[0-9a-f]*$"
															},
															"gasPrice": {
																"title": "gas price",
																"description": "The gas price willing to be paid by the sender in wei",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"chainId": {
																"title": "chainId",
																"description": "Chain ID that this transaction is valid on.",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"v": {
																"title": "v",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"r": {
																"title": "r",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															},
															"s": {
																"title": "s",
																"type": "string",
																"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
															}
														}
													}
												],
												"properties": {
													"blockHash": {
														"title": "block hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockNumber": {
														"title": "block number",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"from": {
														"title": "from address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"hash": {
														"title": "transaction hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"transactionIndex": {
														"title": "transaction index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													}
												}
											}
										}
									]
								},
								"withdrawals": {
									"title": "Withdrawals",
									"type": "array",
									"items": {
										"type": "object",
										"title": "Validator withdrawal",
										"required": [
											"index",
											"validatorIndex",
											"address",
											"amount"
										],
										"additionalProperties": false,
										"properties": {
											"index": {
												"title": "index of withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"validatorIndex": {
												"title": "index of validator that generated withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
											},
											"address": {
												"title": "recipient address for withdrawal value",
												"type": "string",
												"pattern": "^0x[0-9a-fA-F]{40}$"
											},
											"amount": {
												"title": "value contained in withdrawal",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
											}
										}
									}
								},
								"uncles": {
									"title": "Uncles",
									"type": "array",
									"items": {
										"title": "32 byte hex value",
										"type": "string",
										"pattern": "^0x[0-9a-f]{64}$"
									}
								}
							}
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getUncleByBlockNumberAndIndex example",
					"params": [
						{
							"name": "Block number or tag",
							"value": "0x1b4"
						},
						{
							"name": "Uncle index",
							"value": "0x0"
						}
					],
					"result": {
						"name": "Uncle block information",
						"value": {
							"number": "0x1b4",
							"hash": "0x5e7b81b43b5f84edbb2c3ebd92e9b1b7b6db0c6420c1a0e59b1eb542f1fdd3b2",
							"parentHash": "0x9fc6f13f4be42b93e9f7243d2e72607fbea6edb5e2f8a66e2b5b4c6f5e8c50c6",
							"nonce": "0x0000000000000000",
							"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
							"logsBloom": "0x00...0",
							"transactionsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
							"stateRoot": "0xd7f8974fb5ac78d7c5fc5e38a69b1a65b6cdefbf207f53ca3ed49f0610f2342f",
							"receiptsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
							"miner": "0x0000000000000000000000000000000000000000",
							"difficulty": "0x27f07",
							"totalDifficulty": "0x27f07",
							"extraData": "0x",
							"size": "0x1f8",
							"gasLimit": "0x47e7c4",
							"gasUsed": "0x0",
							"timestamp": "0x55ba467c",
							"transactions": [],
							"uncles": []
						}
					}
				}
			]
		},
		{
			"name": "eth_getUncleCountByBlockHash",
			"description": "Returns the number of uncles in a block matching the given block hash.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "The hash of the block.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				}
			],
			"result": {
				"name": "Uncle count",
				"description": "The number of uncle blocks as a hexadecimal string.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Uncle count",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getUncleCountByBlockHash example",
					"params": [
						{
							"name": "Block hash",
							"value": "0xb3b20624f8f0f86eb50dd04688409e5cea4bd02d700bf6e79e9384d47d6a5a35"
						}
					],
					"result": {
						"name": "Uncle count",
						"value": "0x1"
					}
				}
			]
		},
		{
			"name": "eth_getUncleCountByBlockNumber",
			"description": "Returns the number of uncles in a block matching the given block number.",
			"params": [
				{
					"name": "Block number or tag",
					"required": true,
					"description": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
					"schema": {
						"title": "Block number or tag",
						"oneOf": [
							{
								"title": "Block number",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							{
								"title": "Block tag",
								"type": "string",
								"enum": [
									"earliest",
									"finalized",
									"safe",
									"latest",
									"pending"
								],
								"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
							}
						]
					}
				}
			],
			"result": {
				"name": "Uncle count",
				"description": "The number of uncle blocks as a hexadecimal string.",
				"schema": {
					"oneOf": [
						{
							"title": "Not Found (null)",
							"type": "null"
						},
						{
							"title": "Uncle count",
							"type": "string",
							"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_getUncleCountByBlockNumber example",
					"params": [
						{
							"name": "Block number or tag",
							"value": "0xe8"
						}
					],
					"result": {
						"name": "Uncle count",
						"value": "0x1"
					}
				}
			]
		},
		{
			"name": "eth_sendRawTransaction",
			"summary": "Submits a raw transaction to the network.",
			"description": "Submits a raw transaction (serialized and signed) for broadcasting to the network. The transaction data should be encoded as a hexadecimal string starting with `0x`. You can create and sign a transaction externally using libraries like [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.org/). \n\n**Note:** For [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) transactions, the raw form must be in the network format, which includes blobs, KZG commitments, and KZG proofs.\n",
			"params": [
				{
					"name": "Transaction",
					"required": true,
					"description": "The raw transaction data to submit, encoded as a hexadecimal string.",
					"schema": {
						"title": "hex encoded bytes",
						"type": "string",
						"pattern": "^0x[0-9a-f]*$"
					}
				}
			],
			"result": {
				"name": "Transaction hash",
				"description": "The hash of the submitted transaction, as a hexadecimal string.",
				"schema": {
					"title": "32 byte hex value",
					"type": "string",
					"pattern": "^0x[0-9a-f]{64}$"
				}
			},
			"examples": [
				{
					"name": "eth_sendRawTransaction example",
					"params": [
						{
							"name": "Transaction",
							"value": "0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"
						}
					],
					"result": {
						"name": "Transaction hash",
						"value": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
					}
				}
			]
		},
		{
			"name": "eth_simulateV1",
			"description": "Enables simulation of complex transactions and state changes without modifying the blockchain.",
			"params": [
				{
					"name": "Simulation object",
					"required": true,
					"description": "The object containing all simulation details such as calls, overrides, etc.",
					"schema": {
						"type": "object",
						"description": "One item in the eth_simulateV1 params array.",
						"properties": {
							"object": {
								"description": "The main simulation data (overrides, calls, etc.).",
								"type": "object",
								"properties": {
									"blockOverrides": {
										"type": "object",
										"description": "Overrides for block-level parameters.",
										"properties": {
											"baseFeePerGas": {
												"title": "hex encoded unsigned integer",
												"type": "string",
												"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
												"description": "The base fee per gas for the block, encoded as hex."
											}
										}
									},
									"stateOverrides": {
										"type": "object",
										"description": "An object to override account states, keyed by address.",
										"additionalProperties": {
											"type": "object",
											"properties": {
												"balance": {
													"title": "hex encoded unsigned integer",
													"type": "string",
													"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
													"description": "The new balance to set for the account, encoded as hex."
												}
											}
										}
									},
									"calls": {
										"type": "array",
										"description": "An array of transaction call objects.",
										"items": {
											"type": "object",
											"description": "A transaction call object used during simulation.",
											"properties": {
												"from": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$",
													"description": "The sender of the transaction."
												},
												"to": {
													"title": "hex encoded address",
													"type": "string",
													"pattern": "^0x[0-9a-fA-F]{40}$",
													"description": "The recipient of the transaction."
												},
												"maxFeePerGas": {
													"title": "hex encoded unsigned integer",
													"type": "string",
													"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
													"description": "The maximum fee per gas the sender is willing to pay."
												},
												"value": {
													"title": "hex encoded unsigned integer",
													"type": "string",
													"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$",
													"description": "The value sent with the transaction, hex-encoded."
												}
											}
										}
									},
									"validation": {
										"type": "boolean",
										"description": "Whether to perform validation checks."
									},
									"traceTransfers": {
										"type": "boolean",
										"description": "Whether to trace value transfers."
									}
								}
							},
							"quantity": {
								"title": "Block number or tag",
								"oneOf": [
									{
										"title": "Block number",
										"type": "string",
										"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
									},
									{
										"title": "Block tag",
										"type": "string",
										"enum": [
											"earliest",
											"finalized",
											"safe",
											"latest",
											"pending"
										],
										"description": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
									}
								],
								"description": "The block number or tag on which to execute the simulation."
							}
						}
					}
				}
			],
			"result": {
				"name": "Simulation result",
				"description": "The result of the simulation.",
				"schema": {
					"type": "array",
					"description": "The top-level array returned by eth_simulateV1, containing one or more simulated blocks.",
					"items": {
						"type": "object",
						"description": "A simulated “block-like” object containing the results of the calls plus standard block fields.",
						"properties": {
							"baseFeePerGas": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"blobGasUsed": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"calls": {
								"type": "array",
								"items": {
									"type": "object",
									"description": "The result of a single call within the block simulation.",
									"properties": {
										"returnData": {
											"title": "hex encoded bytes",
											"type": "string",
											"pattern": "^0x[0-9a-f]*$"
										},
										"logs": {
											"type": "array",
											"items": {
												"title": "log",
												"type": "object",
												"required": [
													"transactionHash"
												],
												"additionalProperties": false,
												"properties": {
													"removed": {
														"title": "removed",
														"type": "boolean"
													},
													"logIndex": {
														"title": "log index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"transactionIndex": {
														"title": "transaction index",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"transactionHash": {
														"title": "transaction hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockHash": {
														"title": "block hash",
														"type": "string",
														"pattern": "^0x[0-9a-f]{64}$"
													},
													"blockNumber": {
														"title": "block number",
														"type": "string",
														"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
													},
													"address": {
														"title": "address",
														"type": "string",
														"pattern": "^0x[0-9a-fA-F]{40}$"
													},
													"data": {
														"title": "data",
														"type": "string",
														"pattern": "^0x[0-9a-f]*$"
													},
													"topics": {
														"title": "topics",
														"type": "array",
														"items": {
															"title": "32 hex encoded bytes",
															"type": "string",
															"pattern": "^0x[0-9a-f]{64}$"
														}
													}
												}
											}
										},
										"gasUsed": {
											"title": "hex encoded unsigned integer",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"status": {
											"title": "hex encoded unsigned integer",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								}
							},
							"difficulty": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"excessBlobGas": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"extraData": {
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"gasLimit": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"gasUsed": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"hash": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"logsBloom": {
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							"miner": {
								"title": "hex encoded address",
								"type": "string",
								"pattern": "^0x[0-9a-fA-F]{40}$"
							},
							"mixHash": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"nonce": {
								"title": "8 hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]{16}$"
							},
							"number": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"parentBeaconBlockRoot": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"parentHash": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"receiptsRoot": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"sha3Uncles": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"size": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"stateRoot": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"timestamp": {
								"title": "hex encoded unsigned integer",
								"type": "string",
								"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
							},
							"transactions": {
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								}
							},
							"transactionsRoot": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							"uncles": {
								"type": "array",
								"items": {
									"title": "32 byte hex value",
									"type": "string",
									"pattern": "^0x[0-9a-f]{64}$"
								}
							},
							"withdrawals": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"index": {
											"title": "hex encoded unsigned integer",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"validatorIndex": {
											"title": "hex encoded unsigned integer",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"address": {
											"title": "hex encoded address",
											"type": "string",
											"pattern": "^0x[0-9a-fA-F]{40}$"
										},
										"amount": {
											"title": "hex encoded unsigned integer",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								}
							},
							"withdrawalsRoot": {
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "eth_simulateV1 example",
					"params": [
						{
							"name": "Simulation object",
							"value": {
								"blockStateCalls": [
									{
										"blockOverrides": {
											"baseFeePerGas": "0x9"
										},
										"stateOverrides": {
											"0xc000000000000000000000000000000000000000": {
												"balance": "0x4a817c800"
											}
										},
										"calls": [
											{
												"from": "0xc000000000000000000000000000000000000000",
												"to": "0xc000000000000000000000000000000000000001",
												"maxFeePerGas": "0xf",
												"value": "0x1"
											},
											{
												"from": "0xc000000000000000000000000000000000000000",
												"to": "0xc000000000000000000000000000000000000002",
												"maxFeePerGas": "0xf",
												"value": "0x1"
											}
										]
									}
								],
								"validation": true,
								"traceTransfers": true
							}
						},
						{
							"name": "Block",
							"value": "latest"
						}
					],
					"result": {
						"name": "Simulation result",
						"value": [
							{
								"baseFeePerGas": "0x9",
								"blobGasUsed": "0x0",
								"calls": [
									{
										"returnData": "0x",
										"logs": [
											{
												"address": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
												"topics": [
													"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
													"0x000000000000000000000000c000000000000000000000000000000000000000",
													"0x000000000000000000000000c000000000000000000000000000000000000001"
												],
												"data": "0x0000000000000000000000000000000000000000000000000000000000000001",
												"blockNumber": "0x1530a5e",
												"transactionHash": "0x40e61ffc135d1d280646e8951141828e0fad81fd330b1c1a75454163f8c8ca34",
												"transactionIndex": "0x0",
												"blockHash": "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b",
												"logIndex": "0x0",
												"removed": false
											}
										],
										"gasUsed": "0x5208",
										"status": "0x1"
									},
									{
										"returnData": "0x",
										"logs": [
											{
												"address": "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
												"topics": [
													"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
													"0x000000000000000000000000c000000000000000000000000000000000000000",
													"0x000000000000000000000000c000000000000000000000000000000000000002"
												],
												"data": "0x0000000000000000000000000000000000000000000000000000000000000001",
												"blockNumber": "0x1530a5e",
												"transactionHash": "0x204d575c2f68b43a32423bc05491e8dafa71913e3e6d223aa5128cbd23562ecd",
												"transactionIndex": "0x1",
												"blockHash": "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b",
												"logIndex": "0x1",
												"removed": false
											}
										],
										"gasUsed": "0x5208",
										"status": "0x1"
									}
								],
								"difficulty": "0x0",
								"excessBlobGas": "0x3b80000",
								"extraData": "0x",
								"gasLimit": "0x22550dd",
								"gasUsed": "0xa410",
								"hash": "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b",
								"logsBloom": "0x
								"miner": "0x1f9090aae28b8a3dceadf281b0f12828e676c326",
								"mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
								"nonce": "0x0000000000000000",
								"number": "0x1530a5e",
								"parentBeaconBlockRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
								"parentHash": "0x513a0aa73024f294cdbcb0312af0c920850035f0552d7349ebb30717de30b1cc",
								"receiptsRoot": "0x75308898d571eafb5cd8cde8278bf5b3d13c5f6ec074926de3bb895b519264e1",
								"sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
								"size": "0x29c",
								"stateRoot": "0x65ea44c8bd5f9edbf269b6446b460b3e7378abb25c78fd5d70f0e2ef59296b25",
								"timestamp": "0x67f43327",
								"transactions": [
									"0x40e61ffc135d1d280646e8951141828e0fad81fd330b1c1a75454163f8c8ca34",
									"0x204d575c2f68b43a32423bc05491e8dafa71913e3e6d223aa5128cbd23562ecd"
								],
								"transactionsRoot": "0xd6902f31ae9d2169b77cd88611c6afd691ea5a7e604e44c71f663fda0c5d1c28",
								"uncles": [],
								"withdrawals": [],
								"withdrawalsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"
							}
						]
					}
				}
			]
		},
		{
			"name": "eth_syncing",
			"description": "Returns an object with data about the sync status or `false` if not syncing.",
			"params": [],
			"result": {
				"name": "Syncing status",
				"description": "An object with synchronization status data when syncing, or `false` when not syncing.",
				"schema": {
					"oneOf": [
						{
							"type": "boolean"
						},
						{
							"title": "Syncing status",
							"oneOf": [
								{
									"title": "Syncing progress",
									"type": "object",
									"additionalProperties": false,
									"properties": {
										"startingBlock": {
											"title": "Starting block",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"currentBlock": {
											"title": "Current block",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										},
										"highestBlock": {
											"title": "Highest block",
											"type": "string",
											"pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
										}
									}
								},
								{
									"title": "Not syncing",
									"description": "Should always return false if not syncing.",
									"type": "boolean"
								}
							]
						}
					]
				}
			},
			"examples": [
				{
					"name": "eth_syncing example (syncing)",
					"params": [],
					"result": {
						"name": "Syncing status",
						"value": {
							"startingBlock": "0x0",
							"currentBlock": "0x1518",
							"highestBlock": "0x9567a3"
						}
					}
				},
				{
					"name": "eth_syncing example (not syncing)",
					"params": [],
					"result": {
						"name": "Syncing status",
						"value": false
					}
				}
			]
		},
		{
			"name": "net_listening",
			"description": "Returns `true` if the client is actively listening for network connections.",
			"params": [],
			"result": {
				"name": "Listening",
				"description": "Boolean value indicating if the client is listening for network connections.",
				"schema": {
					"type": "boolean"
				}
			},
			"examples": [
				{
					"name": "net_listening example",
					"params": [],
					"result": {
						"name": "Listening",
						"value": true
					}
				}
			]
		},
		{
			"name": "net_version",
			"description": "Returns the network ID that the client is connected to.",
			"params": [],
			"result": {
				"name": "Network ID",
				"description": "The network ID as a string. Common IDs are `\"1\"` for mainnet, `\"3\"` for Ropsten, etc.",
				"schema": {
					"title": "Network ID",
					"type": "string"
				}
			},
			"examples": [
				{
					"name": "net_version example",
					"params": [],
					"result": {
						"name": "Network ID",
						"value": "1"
					}
				}
			]
		},
		{
			"name": "web3_clientVersion",
			"description": "Returns the current client version.",
			"params": [],
			"result": {
				"name": "Client Version",
				"description": "A string identifying the client software name, version, and platform.",
				"schema": {
					"title": "Client Version",
					"type": "string"
				}
			},
			"examples": [
				{
					"name": "web3_clientVersion example",
					"params": [],
					"result": {
						"name": "Client Version",
						"value": "Geth/v1.10.8-stable-26675454/linux-amd64/go1.16.6"
					}
				}
			]
		},
		{
			"name": "web3_sha3",
			"description": "Returns Keccak-256 (not the standardized SHA3-256) hash of the given data.",
			"params": [
				{
					"name": "Data",
					"required": true,
					"description": "The data to hash, encoded as a hexadecimal string.",
					"schema": {
						"title": "hex encoded bytes",
						"type": "string",
						"pattern": "^0x[0-9a-f]*$"
					}
				}
			],
			"result": {
				"name": "Hash",
				"description": "The Keccak-256 hash of the input data, as a hexadecimal string.",
				"schema": {
					"title": "32 byte hex value",
					"type": "string",
					"pattern": "^0x[0-9a-f]{64}$"
				}
			},
			"examples": [
				{
					"name": "web3_sha3 example",
					"params": [
						{
							"name": "Data",
							"value": "0x68656c6c6f20776f726c64"
						}
					],
					"result": {
						"name": "Hash",
						"value": "0x47173285a8d734ad4162d1b2ca3c6f0d0fabc60b8d702d31fd8e5c98569c36f9"
					}
				}
			]
		}
	]
}