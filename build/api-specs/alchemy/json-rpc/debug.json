{
	"x-generated-warning": "⚠️ This file is auto-generated. Do not edit manually",
	"$schema": "https://meta.open-rpc.org/",
	"openrpc": "1.2.4",
	"info": {
		"title": "Alchemy Debug API API JSON-RPC Specification",
		"description": "A specification of the standard JSON-RPC methods for Debug API.",
		"version": "0.0.0"
	},
	"servers": [
		{
			"url": "https://eth-mainnet.g.alchemy.com/v2",
			"name": "Mainnet"
		},
		{
			"url": "https://eth-sepolia.g.alchemy.com/v2",
			"name": "Sepolia"
		},
		{
			"url": "https://eth-holesky.g.alchemy.com/v2",
			"name": "Holesky"
		},
		{
			"url": "https://opt-mainnet.g.alchemy.com/v2",
			"name": "Optimism Mainnet"
		},
		{
			"url": "https://opt-sepolia.g.alchemy.com/v2",
			"name": "Optimism Sepolia"
		},
		{
			"url": "https://polygon-mainnet.g.alchemy.com/v2",
			"name": "Polygon Mainnet"
		},
		{
			"url": "https://polygon-amoy.g.alchemy.com/v2",
			"name": "Polygon Amoy"
		},
		{
			"url": "https://polygonzkevm-mainnet.g.alchemy.com/v2",
			"name": "Polygon zkEVM Mainnet"
		},
		{
			"url": "https://polygonzkevm-cardona.g.alchemy.com/v2",
			"name": "Polygon zkEVM Cardona"
		},
		{
			"url": "https://apechain-mainnet.g.alchemy.com/v2",
			"name": "ApeChain Mainnet"
		},
		{
			"url": "https://apechain-curtis.g.alchemy.com/v2",
			"name": "ApeChain Curtis"
		},
		{
			"url": "https://arb-mainnet.g.alchemy.com/v2",
			"name": "Arbitrum Mainnet"
		},
		{
			"url": "https://arb-sepolia.g.alchemy.com/v2",
			"name": "Arbitrum Sepolia"
		},
		{
			"url": "https://astar-mainnet.g.alchemy.com/v2",
			"name": "Astar Mainnet"
		},
		{
			"url": "https://avax-mainnet.g.alchemy.com/v2",
			"name": "Avalanche Mainnet"
		},
		{
			"url": "https://avax-fuji.g.alchemy.com/v2",
			"name": "Avalanche Fuji"
		},
		{
			"url": "https://arbnova-mainnet.g.alchemy.com/v2",
			"name": "Arbitrum Nova Mainnet"
		},
		{
			"url": "https://abstract-mainnet.g.alchemy.com/v2",
			"name": "Abstract Mainnet"
		},
		{
			"url": "https://abstract-testnet.g.alchemy.com/v2",
			"name": "Abstract Testnet"
		},
		{
			"url": "https://base-mainnet.g.alchemy.com/v2",
			"name": "Base Mainnet"
		},
		{
			"url": "https://base-sepolia.g.alchemy.com/v2",
			"name": "Base Sepolia"
		},
		{
			"url": "https://berachain-mainnet.g.alchemy.com/v2",
			"name": "Berachain Mainnet"
		},
		{
			"url": "https://bob-mainnet.g.alchemy.com/v2",
			"name": "BOB Mainnet"
		},
		{
			"url": "https://blast-sepolia.g.alchemy.com/v2",
			"name": "Blast Sepolia"
		},
		{
			"url": "https://bnb-mainnet.g.alchemy.com/v2",
			"name": "BNB Mainnet"
		},
		{
			"url": "https://celo-mainnet.g.alchemy.com/v2",
			"name": "Celo Mainnet"
		},
		{
			"url": "https://crossfi-mainnet.g.alchemy.com/v2",
			"name": "CrossFi Mainnet"
		},
		{
			"url": "https://crossfi-testnet.g.alchemy.com/v2",
			"name": "CrossFi Testnet"
		},
		{
			"url": "https://degen-mainnet.g.alchemy.com/v2",
			"name": "Degen Mainnet"
		},
		{
			"url": "https://fantom-testnet.g.alchemy.com/v2",
			"name": "Fantom Testnet"
		},
		{
			"url": "https://flow-mainnet.g.alchemy.com/v2",
			"name": "Flow Mainnet"
		},
		{
			"url": "https://geist-mainnet.g.alchemy.com/v2",
			"name": "Geist Mainnet"
		},
		{
			"url": "https://geist-polter.g.alchemy.com/v2",
			"name": "Geist Polter"
		},
		{
			"url": "https://gnosis-chiado.g.alchemy.com/v2",
			"name": "Gnosis Chiado"
		},
		{
			"url": "https://k2-testnet.g.alchemy.com/v2",
			"name": "K2 Testnet"
		},
		{
			"url": "https://kinto-mainnet.g.alchemy.com/v2",
			"name": "Kinto Mainnet"
		},
		{
			"url": "https://spotlight-mainnet.g.alchemy.com/v2",
			"name": "Spotlight Mainnet"
		},
		{
			"url": "https://spotlight-sepolia.g.alchemy.com/v2",
			"name": "Spotlight Sepolia"
		},
		{
			"url": "https://xmtp-testnet.g.alchemy.com/v2",
			"name": "XMTP Testnet"
		},
		{
			"url": "https://chiliz-mainnet.g.alchemy.com/v2",
			"name": "Chiliz Mainnet"
		},
		{
			"url": "https://chiliz-spicy.g.alchemy.com/v2",
			"name": "Chiliz Spicy"
		},
		{
			"url": "https://ink-mainnet.g.alchemy.com/v2",
			"name": "Ink Mainnet"
		},
		{
			"url": "https://ink-sepolia.g.alchemy.com/v2",
			"name": "Ink Sepolia"
		},
		{
			"url": "https://metis-mainnet.g.alchemy.com/v2",
			"name": "Metis Mainnet"
		},
		{
			"url": "https://moonbeam-mainnet.g.alchemy.com/v2",
			"name": "Moonbeam Mainnet"
		},
		{
			"url": "https://monad-testnet.g.alchemy.com/v2",
			"name": "Monad Testnet"
		},
		{
			"url": "https://lens-mainnet.g.alchemy.com/v2",
			"name": "Lens Mainnet"
		},
		{
			"url": "https://lens-sepolia.g.alchemy.com/v2",
			"name": "Lens Sepolia"
		},
		{
			"url": "https://linea-mainnet.g.alchemy.com/v2",
			"name": "Linea Mainnet"
		},
		{
			"url": "https://opbnb-mainnet.g.alchemy.com/v2",
			"name": "opBNB Mainnet"
		},
		{
			"url": "https://openloot-sepolia.g.alchemy.com/v2",
			"name": "OpenLoot Sepolia"
		},
		{
			"url": "https://rootstock-mainnet.g.alchemy.com/v2",
			"name": "Rootstock Mainnet"
		},
		{
			"url": "https://rootstock-testnet.g.alchemy.com/v2",
			"name": "Rootstock Testnet"
		},
		{
			"url": "https://ronin-mainnet.g.alchemy.com/v2",
			"name": "Ronin Mainnet"
		},
		{
			"url": "https://ronin-saigon.g.alchemy.com/v2",
			"name": "Ronin Saigon"
		},
		{
			"url": "https://sei-mainnet.g.alchemy.com/v2",
			"name": "Sei Mainnet"
		},
		{
			"url": "https://sei-testnet.g.alchemy.com/v2",
			"name": "Sei Testnet"
		},
		{
			"url": "https://scroll-mainnet.g.alchemy.com/v2",
			"name": "Scroll Mainnet"
		},
		{
			"url": "https://scroll-sepolia.g.alchemy.com/v2",
			"name": "Scroll Sepolia"
		},
		{
			"url": "https://shape-mainnet.g.alchemy.com/v2",
			"name": "Shape Mainnet"
		},
		{
			"url": "https://soneium-mainnet.g.alchemy.com/v2",
			"name": "Soneium Mainnet"
		},
		{
			"url": "https://soneium-minato.g.alchemy.com/v2",
			"name": "Soneium Minato"
		},
		{
			"url": "https://sonic-blaze.g.alchemy.com/v2",
			"name": "Sonic Blaze"
		},
		{
			"url": "https://superseed-mainnet.g.alchemy.com/v2",
			"name": "Superseed Mainnet"
		},
		{
			"url": "https://tea-sepolia.g.alchemy.com/v2",
			"name": "Tea Sepolia"
		},
		{
			"url": "https://unichain-mainnet.g.alchemy.com/v2",
			"name": "Unichain Mainnet"
		},
		{
			"url": "https://unichain-sepolia.g.alchemy.com/v2",
			"name": "Unichain Sepolia"
		},
		{
			"url": "https://worldchain-mainnet.g.alchemy.com/v2",
			"name": "Worldchain Mainnet"
		},
		{
			"url": "https://worldchain-sepolia.g.alchemy.com/v2",
			"name": "Worldchain Sepolia"
		},
		{
			"url": "https://zetachain-mainnet.g.alchemy.com/v2",
			"name": "ZetaChain Mainnet"
		},
		{
			"url": "https://zetachain-testnet.g.alchemy.com/v2",
			"name": "ZetaChain Testnet"
		},
		{
			"url": "https://zksync-mainnet.g.alchemy.com/v2",
			"name": "zkSync Mainnet"
		},
		{
			"url": "https://zksync-sepolia.g.alchemy.com/v2",
			"name": "zkSync Sepolia"
		}
	],
	"methods": [
		{
			"name": "debug_getRawBlock",
			"summary": "Returns an RLP-encoded block.",
			"params": [
				{
					"name": "BlockNumberOrTag",
					"required": true,
					"description": "The block number or tag (e.g., \"latest\", \"earliest\").",
					"schema": {
						"oneOf": [
							{
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							{
								"title": "block tag",
								"type": "string",
								"enum": [
									"latest",
									"earliest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "RLP-encoded block",
				"description": "RLP-encoded block as a hexadecimal string",
				"schema": {
					"type": "string",
					"description": "RLP-encoded block as a hexadecimal string"
				}
			},
			"examples": [
				{
					"name": "debug_getRawBlock example",
					"params": [
						{
							"name": "BlockNumberOrTag",
							"value": "latest"
						}
					],
					"result": {
						"name": "debug_getRawBlock response",
						"value": "0xf90236a09f73691f6dabca4f0a99b05d0a701995506aa311dcaa9ce9833d6f4ca474c162a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794c6e2459991bfe27cca6d86722f35da23a1e4cb97a078103ea8c47231886481d72ec1afae6eeb06c3773ce24a91323d5c9eed69d4cca0008992da2531db404f07b0871dd620a94ba346963e1b1c6dc7b00748e8593a1ea0b6c3890d9604434fc52f722848c84d1770add20cd75bbc28cdedff42940dbb56b90100200800000400000002000e0000000401000000440100000000c0400600000002000801000000040480020840048000000000400000000000000020004220000011002000000000000204000800000010010002000002000000000040a000000000000400020000010885000000000808000000008800001004002010020300005000000010002110410402000000000000000890000008000000000000000000020040000002000000000000810400000040006000004000004080020000000000000022001000000000000840400000000220250000000000080402000420000418000000000000000400040000004080040010200000000000108020020000808332026e8401c9c380833e3c3c846436f93899d883010b05846765746888676f312e32302e32856c696e7578a0112d8f15793e7df7f8dcdb21c891cff78c0d1839cb5b6dcd06116cdbb99536ae88000000000000000008a0cdb97712af6685bb9650d21d609525913293c48adda7c45990926daada335c9b"
					}
				}
			]
		},
		{
			"name": "debug_getRawHeader",
			"summary": "Returns an RLP-encoded header.",
			"params": [
				{
					"name": "BlockNumberOrTag",
					"required": true,
					"description": "The block number or tag (e.g., \"latest\", \"earliest\").",
					"schema": {
						"oneOf": [
							{
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							{
								"title": "block tag",
								"type": "string",
								"enum": [
									"latest",
									"earliest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "RLP-encoded header",
				"description": "RLP-encoded header as a hexadecimal string",
				"schema": {
					"type": "string"
				}
			},
			"examples": [
				{
					"name": "debug_getRawHeader example",
					"params": [
						{
							"name": "BlockNumberOrTag",
							"value": "latest"
						}
					],
					"result": {
						"name": "debug_getRawHeader response",
						"value": "0xf90236a09f73691f6dabca4f0a99b05d0a701995506aa311dcaa9ce9833d6f4ca474c162a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794c6e2459991bfe27cca6d86722f35da23a1e4cb97a078103ea8c47231886481d72ec1afae6eeb06c3773ce24a91323d5c9eed69d4cca0008992da2531db404f07b0871dd620a94ba346963e1b1c6dc7b00748e8593a1ea0b6c3890d9604434fc52f722848c84d1770add20cd75bbc28cdedff42940dbb56b90100200800000400000002000e0000000401000000440100000000c0400600000002000801000000040480020840048000000000400000000000000020004220000011002000000000000204000800000010010002000002000000000040a000000000000400020000010885000000000808000000008800001004002010020300005000000010002110410402000000000000000890000008000000000000000000020040000002000000000000810400000040006000004000004080020000000000000022001000000000000840400000000220250000000000080402000420000418000000000000000400040000004080040010200000000000108020020000808332026e8401c9c380833e3c3c846436f93899d883010b05846765746888676f312e32302e32856c696e7578a0112d8f15793e7df7f8dcdb21c891cff78c0d1839cb5b6dcd06116cdbb99536ae88000000000000000008a0cdb97712af6685bb9650d21d609525913293c48adda7c45990926daada335c9b"
					}
				}
			]
		},
		{
			"name": "debug_getRawReceipts",
			"summary": "Returns an array of EIP-2718 binary-encoded receipts.",
			"params": [
				{
					"name": "BlockNumberOrTag",
					"required": true,
					"description": "The block number or tag (e.g., \"latest\", \"earliest\").",
					"schema": {
						"oneOf": [
							{
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							{
								"title": "block tag",
								"type": "string",
								"enum": [
									"latest",
									"earliest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "RLP-encoded receipts",
				"description": "Array of EIP-2718 binary-encoded receipts as hexadecimal strings.",
				"schema": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"examples": [
				{
					"name": "debug_getRawReceipts example",
					"params": [
						{
							"name": "BlockNumberOrTag",
							"value": "latest"
						}
					],
					"result": {
						"name": "debug_getRawReceipts response",
						"value": [
							"0xf901a60182c70ebf89df89b947753cfad258efbc52a9a1452e42ffbce9be486cbf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000828d0386c1122e565f07dd28c7d1340ed5b3315a000000000000000000000000021849e99c31e3113a489d7eb0fd4d8c0edbe47afa00000000000000000000000000000000000000000000000000000000029b92700",
							"0xf901a70183018e1cb9010000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000002000000000000000000000008000000000000000000000000000000000040000000001000000000000000000000000000000000000000000000000010000000000000000000000000000000008000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000002000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000020000000000000000f89df89b947753cfad258efbc52a9a1452e42ffbce9be486cbf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000828d0386c1122e565f07dd28c7d1340ed5b3315a000000000000000000000000069cda9d6cc6ce05982d0b4fdf9480f2991f39b5aa00000000000000000000000000000000000000000000000000000000029b92700"
						]
					}
				}
			]
		},
		{
			"name": "debug_traceBlockByHash",
			"summary": "Replays the block that is already present in the database.",
			"params": [
				{
					"name": "Block hash",
					"required": true,
					"description": "Block hash for the block to be traced.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				},
				{
					"name": "Tracer",
					"required": false,
					"description": "Tracer object for the call.",
					"schema": {
						"title": "Tracer",
						"type": "object",
						"properties": {
							"tracer": {
								"type": "string",
								"enum": [
									"callTracer",
									"prestateTracer"
								]
							},
							"tracerConfig": {
								"type": "object",
								"properties": {
									"onlyTopCall": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			],
			"result": {
				"name": "Block traces",
				"description": "Array of block traces.",
				"schema": {
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"description": "Array of block traces.",
							"items": {
								"type": "object",
								"description": "Array of block traces.",
								"properties": {
									"type": {
										"type": "string",
										"description": "CALL or CREATE"
									},
									"from": {
										"type": "string",
										"description": "20-byte address of the caller"
									},
									"to": {
										"type": "string",
										"description": "20-byte address of the recipient. Null when its a contract creation transaction."
									},
									"value": {
										"type": "string",
										"description": "Amount of value included in the transfer (in hex)"
									},
									"gas": {
										"type": "string",
										"description": "Amount of gas provided for the call (in hex)"
									},
									"gasUsed": {
										"type": "string",
										"description": "Amount of gas used during the call (in hex)"
									},
									"input": {
										"type": "string",
										"description": "Call data"
									},
									"output": {
										"type": "string",
										"description": "Return data"
									},
									"error": {
										"type": "string",
										"description": "Error message, if any."
									},
									"revertReason": {
										"type": "string",
										"description": "Solidity revert reason, if any."
									},
									"calls": {
										"type": "array",
										"description": "Array of sub-calls made within the transaction.",
										"items": {
											"type": "object",
											"description": "Array of block traces.",
											"properties": {
												"type": {
													"type": "string",
													"description": "CALL or CREATE"
												},
												"from": {
													"type": "string",
													"description": "20-byte address of the caller"
												},
												"to": {
													"type": "string",
													"description": "20-byte address of the recipient. Null when its a contract creation transaction."
												},
												"value": {
													"type": "string",
													"description": "Amount of value included in the transfer (in hex)"
												},
												"gas": {
													"type": "string",
													"description": "Amount of gas provided for the call (in hex)"
												},
												"gasUsed": {
													"type": "string",
													"description": "Amount of gas used during the call (in hex)"
												},
												"input": {
													"type": "string",
													"description": "Call data"
												},
												"output": {
													"type": "string",
													"description": "Return data"
												},
												"error": {
													"type": "string",
													"description": "Error message, if any."
												},
												"revertReason": {
													"type": "string",
													"description": "Solidity revert reason, if any."
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "debug_traceBlockByHash example",
					"params": [
						{
							"name": "Block hash",
							"value": "0x7bd8357213af34d3fe7f725d9b21187a5a58127e39aac5776fd0594e3391ea6e"
						}
					],
					"result": {
						"name": "debug_traceBlockByHash response",
						"value": {
							"type": "CALL",
							"from": "0xe088776deabb472ffd2843e330e79c880a5f979e",
							"to": "0x70526cc7a6d6320b44122ea9d2d07670accc85a1",
							"value": "0xec5162",
							"gas": "0x7df99",
							"gasUsed": "0x34e29",
							"input": "0x00e051479210030000000000000000000000f160594a405d53811d3bc4766596efd80fd545a27000000000000000000000128acb080000000000000000000000000000000000007f150bd6f54c40a34d7c3d5e9f56000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cc54410f805000000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002d6b175474e89094c44da98b954eedeac495271d0fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4010001c4ba12222222228d8ba445958a75a0704d566bf2c80000000000000000000052bbbe2900000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000007f150bd6f54c40a34d7c3d5e9f56000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cc54410f805000000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002d6b175474e89094c44da98b954eedeac495271d0fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4010001c4ba12222222228d8ba445958a75a0704d566bf2c80000000000000000000052bbbe2900000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000007f150bd6f54c40a34d7c3d5e9f56000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009cc54410f805000000000000000000000000000fffd8963efd1fc6a506488495d951d5263988d2500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002d6b175474e89094c44da98b954eedeac495271d0fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc20001f4010001c4ba12222222228d8ba445958a75a0704d566bf2c80000000000000000000052bbbe2900000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000007f150bd6f54c40a34d7c3d5e9f56000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000ff00000000000000000000000000000000008485b36623632ffa5e486008df4d0b6d363defdb00020000000000000000034a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000005f98805a4e8be255a32880fdec7f6728c6568ba000000000000000000000000000000000000000000000003acbfe2488ff5c000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000f19663f2ca0454accad3e094448ea6f7744388045400000000000000000000128acb08000000000000000000000000dfee68a9adb981cd08699891a11cabe10f25ec44000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000003a6d6cd1833904000000000000000000000000000000000000000000000000000000000001000276a400000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000002d5f98805a4e8be255a32880fdec7f6728c6568ba0c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000bb80000"
						}
					}
				}
			]
		},
		{
			"name": "debug_traceBlockByNumber",
			"summary": "Replays the block that is already present in the database.",
			"params": [
				{
					"name": "Block number",
					"required": true,
					"description": "The block number or tag (e.g., \"latest\", \"earliest\").",
					"schema": {
						"oneOf": [
							{
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							{
								"title": "block tag",
								"type": "string",
								"enum": [
									"latest",
									"earliest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "Tracer",
					"required": false,
					"description": "Tracer object for the call.",
					"schema": {
						"title": "Tracer",
						"type": "object",
						"properties": {
							"tracer": {
								"type": "string",
								"enum": [
									"callTracer",
									"prestateTracer"
								]
							},
							"tracerConfig": {
								"type": "object",
								"properties": {
									"onlyTopCall": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			],
			"result": {
				"name": "Block traces",
				"description": "Array of block traces.",
				"schema": {
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"description": "Array of block traces.",
							"items": {
								"type": "object",
								"description": "Array of block traces.",
								"properties": {
									"type": {
										"type": "string",
										"description": "CALL or CREATE"
									},
									"from": {
										"type": "string",
										"description": "20-byte address of the caller"
									},
									"to": {
										"type": "string",
										"description": "20-byte address of the recipient. Null when its a contract creation transaction."
									},
									"value": {
										"type": "string",
										"description": "Amount of value included in the transfer (in hex)"
									},
									"gas": {
										"type": "string",
										"description": "Amount of gas provided for the call (in hex)"
									},
									"gasUsed": {
										"type": "string",
										"description": "Amount of gas used during the call (in hex)"
									},
									"input": {
										"type": "string",
										"description": "Call data"
									},
									"output": {
										"type": "string",
										"description": "Return data"
									},
									"error": {
										"type": "string",
										"description": "Error message, if any."
									},
									"revertReason": {
										"type": "string",
										"description": "Solidity revert reason, if any."
									},
									"calls": {
										"type": "array",
										"description": "Array of sub-calls made within the transaction.",
										"items": {
											"type": "object",
											"description": "Array of block traces.",
											"properties": {
												"type": {
													"type": "string",
													"description": "CALL or CREATE"
												},
												"from": {
													"type": "string",
													"description": "20-byte address of the caller"
												},
												"to": {
													"type": "string",
													"description": "20-byte address of the recipient. Null when its a contract creation transaction."
												},
												"value": {
													"type": "string",
													"description": "Amount of value included in the transfer (in hex)"
												},
												"gas": {
													"type": "string",
													"description": "Amount of gas provided for the call (in hex)"
												},
												"gasUsed": {
													"type": "string",
													"description": "Amount of gas used during the call (in hex)"
												},
												"input": {
													"type": "string",
													"description": "Call data"
												},
												"output": {
													"type": "string",
													"description": "Return data"
												},
												"error": {
													"type": "string",
													"description": "Error message, if any."
												},
												"revertReason": {
													"type": "string",
													"description": "Solidity revert reason, if any."
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "debug_traceBlockByNumber example",
					"params": [
						{
							"name": "Block number",
							"value": "0xccde12"
						}
					],
					"result": {
						"name": "debug_traceBlockByNumber response",
						"value": {
							"type": "CALL",
							"from": "0xe088776deabb472ffd2843e330e79c880a5f979e",
							"to": "0x70526cc7a6d6320b44122ea9d2d07670accc85a1",
							"value": "0x0",
							"gas": "0x7fffffffffffadf7",
							"gasUsed": "0x0",
							"input": "0x",
							"output": "0x"
						}
					}
				}
			]
		},
		{
			"name": "debug_traceCall",
			"summary": "Runs an eth_call within the context of the given block execution using the final state of parent block as the base.",
			"params": [
				{
					"name": "Transaction Object",
					"required": true,
					"description": "The transaction call object.",
					"schema": {
						"title": "Transaction Object",
						"type": "object",
						"properties": {
							"from": {
								"type": "string",
								"pattern": "^0[xX][0-9a-fA-F]{40}$"
							},
							"to": {
								"type": "string",
								"pattern": "^0[xX][0-9a-fA-F]{40}$"
							},
							"gas": {
								"type": "string",
								"pattern": "^0[xX]([1-9a-fA-F][0-9a-fA-F]*|0)$"
							},
							"gasPrice": {
								"type": "string",
								"pattern": "^0[xX]([1-9a-fA-F][0-9a-fA-F]*|0)$"
							},
							"value": {
								"type": "string",
								"pattern": "^0[xX]([1-9a-fA-F][0-9a-fA-F]*|0)$"
							},
							"data": {
								"type": "string",
								"pattern": "^0[xX][0-9a-fA-F]*$"
							}
						}
					}
				},
				{
					"name": "Block identifier",
					"required": true,
					"description": "Block hash, block number (in hex), or block tag.",
					"schema": {
						"oneOf": [
							{
								"title": "32 byte hex value",
								"type": "string",
								"pattern": "^0x[0-9a-f]{64}$"
							},
							{
								"title": "hex encoded bytes",
								"type": "string",
								"pattern": "^0x[0-9a-f]*$"
							},
							{
								"title": "block tag",
								"type": "string",
								"enum": [
									"latest",
									"earliest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "Tracer",
					"required": false,
					"description": "Tracer object for the call.",
					"schema": {
						"title": "Tracer",
						"type": "object",
						"properties": {
							"tracer": {
								"type": "string",
								"enum": [
									"callTracer",
									"prestateTracer"
								]
							},
							"tracerConfig": {
								"type": "object",
								"properties": {
									"onlyTopCall": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			],
			"result": {
				"name": "Call traces",
				"description": "Array of call traces.",
				"schema": {
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"description": "Array of block traces.",
							"items": {
								"type": "object",
								"description": "Array of block traces.",
								"properties": {
									"type": {
										"type": "string",
										"description": "CALL or CREATE"
									},
									"from": {
										"type": "string",
										"description": "20-byte address of the caller"
									},
									"to": {
										"type": "string",
										"description": "20-byte address of the recipient. Null when its a contract creation transaction."
									},
									"value": {
										"type": "string",
										"description": "Amount of value included in the transfer (in hex)"
									},
									"gas": {
										"type": "string",
										"description": "Amount of gas provided for the call (in hex)"
									},
									"gasUsed": {
										"type": "string",
										"description": "Amount of gas used during the call (in hex)"
									},
									"input": {
										"type": "string",
										"description": "Call data"
									},
									"output": {
										"type": "string",
										"description": "Return data"
									},
									"error": {
										"type": "string",
										"description": "Error message, if any."
									},
									"revertReason": {
										"type": "string",
										"description": "Solidity revert reason, if any."
									},
									"calls": {
										"type": "array",
										"description": "Array of sub-calls made within the transaction.",
										"items": {
											"type": "object",
											"description": "Array of block traces.",
											"properties": {
												"type": {
													"type": "string",
													"description": "CALL or CREATE"
												},
												"from": {
													"type": "string",
													"description": "20-byte address of the caller"
												},
												"to": {
													"type": "string",
													"description": "20-byte address of the recipient. Null when its a contract creation transaction."
												},
												"value": {
													"type": "string",
													"description": "Amount of value included in the transfer (in hex)"
												},
												"gas": {
													"type": "string",
													"description": "Amount of gas provided for the call (in hex)"
												},
												"gasUsed": {
													"type": "string",
													"description": "Amount of gas used during the call (in hex)"
												},
												"input": {
													"type": "string",
													"description": "Call data"
												},
												"output": {
													"type": "string",
													"description": "Return data"
												},
												"error": {
													"type": "string",
													"description": "Error message, if any."
												},
												"revertReason": {
													"type": "string",
													"description": "Solidity revert reason, if any."
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "debug_traceCall example",
					"params": [
						{
							"name": "Transaction Object",
							"value": {}
						},
						{
							"name": "Block identifier",
							"value": "latest"
						},
						{
							"name": "Tracer",
							"value": "callTracer"
						}
					],
					"result": {
						"name": "debug_traceCall response",
						"value": [
							{
								"name": "call trace",
								"value": {
									"type": "CALL",
									"from": "0xe088776deabb472ffd2843e330e79c880a5f979e",
									"to": "0x70526cc7a6d6320b44122ea9d2d07670accc85a1",
									"value": "0x0",
									"gas": "0x7fffffffffffadf7",
									"gasUsed": "0x0",
									"input": "0x",
									"output": "0x"
								}
							}
						]
					}
				}
			]
		},
		{
			"name": "debug_traceTransaction",
			"summary": "Attempts to run the transaction in the exact same manner as it was executed on the network.",
			"params": [
				{
					"name": "Transaction hash",
					"required": true,
					"description": "Hash of the transaction to be traced.",
					"schema": {
						"title": "32 byte hex value",
						"type": "string",
						"pattern": "^0x[0-9a-f]{64}$"
					}
				},
				{
					"name": "Options",
					"required": false,
					"description": "Options for the call.",
					"schema": {
						"type": "object",
						"properties": {
							"tracer": {
								"type": "string",
								"enum": [
									"callTracer",
									"prestateTracer"
								]
							},
							"tracerConfig": {
								"type": "object",
								"properties": {
									"onlyTopCall": {
										"type": "boolean"
									}
								}
							},
							"timeout": {
								"type": "string",
								"description": "A duration string that overrides the default timeout."
							}
						}
					}
				}
			],
			"result": {
				"name": "Transaction trace",
				"description": "Trace for the transaction.",
				"schema": {
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"description": "Array of block traces.",
							"items": {
								"type": "object",
								"description": "Array of block traces.",
								"properties": {
									"type": {
										"type": "string",
										"description": "CALL or CREATE"
									},
									"from": {
										"type": "string",
										"description": "20-byte address of the caller"
									},
									"to": {
										"type": "string",
										"description": "20-byte address of the recipient. Null when its a contract creation transaction."
									},
									"value": {
										"type": "string",
										"description": "Amount of value included in the transfer (in hex)"
									},
									"gas": {
										"type": "string",
										"description": "Amount of gas provided for the call (in hex)"
									},
									"gasUsed": {
										"type": "string",
										"description": "Amount of gas used during the call (in hex)"
									},
									"input": {
										"type": "string",
										"description": "Call data"
									},
									"output": {
										"type": "string",
										"description": "Return data"
									},
									"error": {
										"type": "string",
										"description": "Error message, if any."
									},
									"revertReason": {
										"type": "string",
										"description": "Solidity revert reason, if any."
									},
									"calls": {
										"type": "array",
										"description": "Array of sub-calls made within the transaction.",
										"items": {
											"type": "object",
											"description": "Array of block traces.",
											"properties": {
												"type": {
													"type": "string",
													"description": "CALL or CREATE"
												},
												"from": {
													"type": "string",
													"description": "20-byte address of the caller"
												},
												"to": {
													"type": "string",
													"description": "20-byte address of the recipient. Null when its a contract creation transaction."
												},
												"value": {
													"type": "string",
													"description": "Amount of value included in the transfer (in hex)"
												},
												"gas": {
													"type": "string",
													"description": "Amount of gas provided for the call (in hex)"
												},
												"gasUsed": {
													"type": "string",
													"description": "Amount of gas used during the call (in hex)"
												},
												"input": {
													"type": "string",
													"description": "Call data"
												},
												"output": {
													"type": "string",
													"description": "Return data"
												},
												"error": {
													"type": "string",
													"description": "Error message, if any."
												},
												"revertReason": {
													"type": "string",
													"description": "Solidity revert reason, if any."
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"examples": [
				{
					"name": "debug_traceTransaction example",
					"params": [
						{
							"name": "Transaction hash",
							"value": "0x8fc90a6c3ee3001cdcbbb685b4fbe67b1fa2bec575b15b0395fea5540d0901ae"
						}
					],
					"result": {
						"name": "debug_traceTransaction response",
						"value": [
							{
								"name": "transaction trace",
								"value": {
									"type": "CALL",
									"from": "0xe088776deabb472ffd2843e330e79c880a5f979e",
									"to": "0x70526cc7a6d6320b44122ea9d2d07670accc85a1",
									"value": "0x0",
									"gas": "0x7fffffffffffadf7",
									"gasUsed": "0x0",
									"input": "0x",
									"output": "0x"
								}
							}
						]
					}
				}
			]
		}
	]
}