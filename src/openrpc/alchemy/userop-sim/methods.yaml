- name: alchemy_simulateUserOperationAssetChanges
  description: |
    Simulates user operations and returns a list of asset changes.

    <Note title="Changes in blockchain's state could lead to different outcomes">
      The results provided by `alchemy_simulateUserOperationAssetChanges` are based on the blockchain's state at the moment of simulation. Changes in the blockchain state, such as updates to contract variables or balances, can occur between the time of simulation and when you actually execute your UserOp.

      This could lead to different outcomes than predicted. For instance, if a userOp's effect is conditional on the current state of a contract, and this state is altered before the transaction is executed, the final result may not match the simulation.

      Please be aware of this potential variance and consider it while using the API.
    </Note>

    <Warning>
      This endpoint requires a dummy signature in the `userOp`. Check our [FAQs](/docs/reference/account-abstraction-faq#signatures) to learn what a dummy signature is and which dummy signature you should use.
    </Warning>
  params:
    - name: UserOperation
      required: true
      description: User operation to simulate. The signature can be a dummy value; it doesn't need to be valid.
      schema:
        oneOf:
          - $ref: "#/components/schemas/UserOperationV06"
          - name: UserOperationV07
            type: object
            properties:
              sender:
                $ref: "#/components/schemas/address"
                description: "Account initiating operation"
              nonce:
                $ref: "#/components/schemas/uint"
                description: "Account nonce or creation salt"
              callData:
                $ref: "#/components/schemas/bytes"
                description: "Data for operation call"
              callGasLimit:
                type: string
                description: "Gas allocated for call"
              verificationGasLimit:
                type: string
                description: "Gas allocated for verification"
              maxFeePerGas:
                type: string
                description: "Max fee per gas (EIP-1559)"
              maxPriorityFeePerGas:
                type: string
                description: "Priority fee per gas (EIP-1559)"
              paymaster:
                $ref: "#/components/schemas/address"
                description: "Paymaster contract address"
              paymasterData:
                $ref: "#/components/schemas/bytes"
                description: "Data for paymaster"
              paymasterVerificationGasLimit:
                type: string
              factory:
                $ref: "#/components/schemas/address"
                description: "The account factory address (needed if and only if the account is not yet on-chain and needs to be created)"
              factoryData:
                $ref: "#/components/schemas/bytes"
                description: "Data for the account factory (only if the account factory exists)"
              preVerificationGas:
                type: string
                description: "The amount of gas to pay for to compensate the bundler for pre-verification execution and calldata"
              paymasterPostOpGasLimit:
                type: string
                description: "The amount of gas to allocate for the paymaster post-op code (only if a paymaster exists)"
              signature:
                type: string
                description: "Data passed into the account along with the nonce during the verification step"
    - name: entryPoint
      required: true
      description: "`EntryPoint` to use for the simulation. This MUST be one of the entry points returned by the `supportedEntryPoints` RPC call."
      schema:
        $ref: "#/components/schemas/address"
    - name: blockNumber
      required: false
      description: Optional block number in context of which the simulation should be executed. If not specified, the current block number is used.
      schema:
        $ref: "#/components/schemas/uint"
  result:
    name: Simulation Result
    description: Object containing simulated asset changes and any potential errors.
    schema:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: "#/components/schemas/AssetChange"
        error:
          type: [object, "null"]
          properties:
            message:
              type: string
            revertReason:
              $ref: "#/components/schemas/RevertMessage"
  examples:
    - name: alchemy_simulateUserOperationAssetChanges example
      params:
        - name: UserOperation
          value:
            sender: "0xceb161d3e0B6d01bc0e87ECC27fF9f2E2eCDCD81"
            nonce: "0x3"
            initCode: "0x"
            callData: "0xb61d27f600000000000000000000000043f6bfbe9dad44cf0a60570c30c307d949be4cd40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000645c833bfd000000000000000000000000613c64104b98b048b93289ed20aefd80912b3cde0000000000000000000000000000000000000000000000000de123e8a84f9901000000000000000000000000c9371ea30dea5ac745b71e191ba8cde2c4e66df500000000000000000000000000000000000000000000000000000000"
            callGasLimit: "0x7A1200"
            verificationGasLimit: "0x927C0"
            preVerificationGas: "0x15F90"
            maxFeePerGas: "0x656703D00"
            maxPriorityFeePerGas: "0x13AB6680"
            signature: "0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"
            paymasterAndData: "0x9db7f05b0eb93eb242b5913596dcfaada756af5c"
        - name: entryPoint
          value: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
        - name: blockNumber
          value: "0x113CF6E"
