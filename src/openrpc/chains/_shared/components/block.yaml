components:
  schemas:
    Block:
      title: Block object
      type: object
      required:
        - hash
        - parentHash
        - sha3Uncles
        - miner
        - stateRoot
        - transactionsRoot
        - receiptsRoot
        - logsBloom
        - number
        - gasLimit
        - gasUsed
        - timestamp
        - extraData
        - mixHash
        - nonce
        - size
        - transactions
        - uncles
      additionalProperties: false
      properties:
        hash:
          title: Hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
        parentHash:
          title: Parent block hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
        sha3Uncles:
          title: Ommers hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
        miner:
          title: Coinbase
          $ref: "./base-types.yaml#/components/schemas/address"
        stateRoot:
          title: State root
          $ref: "./base-types.yaml#/components/schemas/hash32"
        transactionsRoot:
          title: Transactions root
          $ref: "./base-types.yaml#/components/schemas/hash32"
        receiptsRoot:
          title: Receipts root
          $ref: "./base-types.yaml#/components/schemas/hash32"
        logsBloom:
          title: Bloom filter
          $ref: "./base-types.yaml#/components/schemas/bytes256"
        difficulty:
          title: Difficulty
          $ref: "./base-types.yaml#/components/schemas/uint"
        number:
          title: Number
          $ref: "./base-types.yaml#/components/schemas/uint"
        gasLimit:
          title: Gas limit
          $ref: "./base-types.yaml#/components/schemas/uint"
        gasUsed:
          title: Gas used
          $ref: "./base-types.yaml#/components/schemas/uint"
        timestamp:
          title: Timestamp
          $ref: "./base-types.yaml#/components/schemas/uint"
        extraData:
          title: Extra data
          $ref: "./base-types.yaml#/components/schemas/bytes"
        mixHash:
          title: Mix hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
        nonce:
          title: Nonce
          $ref: "./base-types.yaml#/components/schemas/bytes8"
        baseFeePerGas:
          title: Base fee per gas
          $ref: "./base-types.yaml#/components/schemas/uint"
        withdrawalsRoot:
          title: Withdrawals root
          $ref: "./base-types.yaml#/components/schemas/hash32"
        blobGasUsed:
          title: Blob gas used
          $ref: "./base-types.yaml#/components/schemas/uint"
        excessBlobGas:
          title: Excess blob gas
          $ref: "./base-types.yaml#/components/schemas/uint"
        parentBeaconBlockRoot:
          title: Parent Beacon Block Root
          $ref: "./base-types.yaml#/components/schemas/hash32"
        size:
          title: Block size
          $ref: "./base-types.yaml#/components/schemas/uint"
        transactions:
          anyOf:
            - title: Transaction hashes
              type: array
              items:
                $ref: "./base-types.yaml#/components/schemas/hash32"
            - title: Full transactions
              type: array
              items:
                $ref: "./transaction.yaml#/components/schemas/TransactionInfo"
        withdrawals:
          title: Withdrawals
          type: array
          items:
            $ref: "./withdrawal.yaml#/components/schemas/Withdrawal"
        uncles:
          title: Uncles
          type: array
          items:
            $ref: "./base-types.yaml#/components/schemas/hash32"
    BlockTag:
      title: Block tag
      type: string
      enum:
        - earliest
        - finalized
        - safe
        - latest
        - pending
      description: "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
    BlockNumberOrTag:
      title: Block number or tag
      oneOf:
        - title: Block number
          $ref: "./base-types.yaml#/components/schemas/uint"
        - title: Block tag
          $ref: "#/components/schemas/BlockTag"
    BlockNumberOrTagOrHash:
      title: Block number, tag, or block hash
      anyOf:
        - title: Block number
          $ref: "./base-types.yaml#/components/schemas/uint"
        - title: Block tag
          $ref: "#/components/schemas/BlockTag"
        - title: Block hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
    BadBlock:
      title: Bad block
      type: object
      required:
        - block
        - hash
        - rlp
      additionalProperties: false
      properties:
        block:
          title: Block
          $ref: "#/components/schemas/Block"
        hash:
          title: Hash
          $ref: "./base-types.yaml#/components/schemas/hash32"
        rlp:
          title: RLP
          $ref: "./base-types.yaml#/components/schemas/bytes"
