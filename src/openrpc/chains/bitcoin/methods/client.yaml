- name: getblockchaininfo
  summary: Retrieve general information about the blockchain.
  description: >
    Returns an object containing state details related to blockchain processing, network, and storage information.
  params: []
  result:
    name: result
    description: Blockchain status information.
    schema:
      $ref: "#/components/schemas/BTC_BLOCKCHAIN_INFO"

- name: getconnectioncount
  summary: Get the number of connections to other nodes
  description: >
    Returns the number of connections to other nodes (both inbound and outbound).
  params: []
  result:
    name: result
    description: The total number of connections.
    schema:
      type: integer
      example: 8

- name: getmemoryinfo
  summary: Get memory usage information
  description: >
    Returns information about memory usage, either general statistics ("stats") or heap information ("mallocinfo").
  params:
    - name: mode
      required: false
      description: >
        Determines what kind of information is returned:
        - "stats" returns general statistics about memory usage.
        - "mallocinfo" returns an XML string describing low-level heap state.
      schema:
        type: string
        enum:
          - stats
          - mallocinfo
  result:
    name: result
    description: Memory usage details.
    schema:
      type: object
      properties:
        locked:
          type: object
          description: Information about locked memory.
          properties:
            used:
              type: integer
              description: Used memory in KB.
              example: 352
            free:
              type: integer
              description: Free memory in KB.
              example: 65184
            total:
              type: integer
              description: Total memory available in KB.
              example: 65536
            locked:
              type: integer
              description: Locked memory in KB.
              example: 65536
            chunks_used:
              type: integer
              description: Number of used memory chunks.
              example: 1
            chunks_free:
              type: integer
              description: Number of free memory chunks.
              example: 1

- name: validateaddress
  summary: Validate a Bitcoin address
  description: >
    Verifies the validity of a given Bitcoin address and provides additional metadata about it.
  params:
    - name: address
      required: true
      description: The Bitcoin address to validate.
      schema:
        $ref: "#/components/schemas/BTC_ADDRESS"
  result:
    name: result
    description: Validation result and metadata about the address.
    schema:
      type: object
      properties:
        isvalid:
          type: boolean
          description: Whether the address is valid.
          example: true
        address:
          type: string
          description: The validated Bitcoin address.
          example: "bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl"
        scriptPubKey:
          type: string
          description: The hex encoded scriptPubKey generated by the address.
          example: "0014d3620fe180a0beb8fcc9682fe92e5a25f0feccd3"
        isscript:
          type: boolean
          description: Whether the address corresponds to a script.
          example: false
        iswitness:
          type: boolean
          description: Whether the address is a witness address.
          example: true
        witness_version:
          type: integer
          description: The version number of the witness program.
          example: 0
        witness_program:
          type: string
          description: The hex value of the witness program.
          example: "d3620fe180a0beb8fcc9682fe92e5a25f0feccd3"

- name: verifymessage
  summary: Verify a signed message
  description: >
    Verifies a message signature using the corresponding Bitcoin address.
    Returns true if the signature is valid and matches the given address.
  params:
    - name: address
      required: true
      description: The Bitcoin address to use for the signature.
      schema:
        $ref: "#/components/schemas/BTC_ADDRESS"
    - name: signature
      required: true
      description: The base64-encoded signature provided by the signer.
      schema:
        $ref: "#/components/schemas/BTC_SIGNATURE"
    - name: message
      required: true
      description: The message that was signed.
      schema:
        type: string
        example: "This is a test message"
  result:
    name: result
    description: Whether the signature is valid for the message and address.
    schema:
      type: boolean
      example: true
