- name: eth_call
  summary: Executes a new message call immediately without creating a transaction on the blockchain.
  description: >
    Executes a new message call immediately without creating a transaction on the blockchain.

    > ⚠ This endpoint is only available with [Blast](https://www.alchemy.com/docs/reference/introduction-to-blast) access.
  params:
    - name: Transaction
      required: true
      description: The transaction call object containing the details of the message call.
      schema:
        $ref: "#/components/schemas/GenericTransaction"
    - name: Block
      required: false
      description: The block number, tag, or hash at which to execute the call. Defaults to `'latest'` if not provided.
      schema:
        $ref: "#/components/schemas/BlockNumberOrTagOrHash"
  result:
    name: Return data
    description: The return value of the executed contract function, encoded as a hexadecimal string.
    schema:
      $ref: "#/components/schemas/bytes"
  examples:
    - name: eth_call example
      params:
        - name: Transaction
          value:
            to: "0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13"
            value: "0x1"
        - name: Block
          value: "latest"
      result:
        name: Return data
        value: "0x"

- name: eth_simulateV1
  summary: Enables simulation of complex transactions and state changes without modifying the blockchain.
  description: >
    Enables simulation of complex transactions and state changes without modifying the blockchain.

    > ⚠ This endpoint is only available with [Blast](https://www.alchemy.com/docs/reference/introduction-to-blast) access.
  params:
    - name: Simulation object
      required: true
      description: The object containing all simulation details such as calls, overrides, etc.
      schema:
        $ref: "#/components/schemas/SimulateRequest"
  result:
    name: Simulation result
    description: The result of the simulation.
    schema:
      $ref: "#/components/schemas/SimulateResult"
  examples:
    - name: eth_simulateV1 example
      params:
        - name: Simulation object
          value:
            blockStateCalls:
              - blockOverrides:
                  baseFeePerGas: "0x9"
                stateOverrides:
                  "0xc000000000000000000000000000000000000000":
                    balance: "0x4a817c800"
                calls:
                  - from: "0xc000000000000000000000000000000000000000"
                    to: "0xc000000000000000000000000000000000000001"
                    maxFeePerGas: "0xf"
                    value: "0x1"
                  - from: "0xc000000000000000000000000000000000000000"
                    to: "0xc000000000000000000000000000000000000002"
                    maxFeePerGas: "0xf"
                    value: "0x1"
            validation: true
            traceTransfers: true
        - name: Block
          value: "latest"
      result:
        name: Simulation result
        value:
          - baseFeePerGas: "0x9"
            blobGasUsed: "0x0"
            calls:
              - returnData: "0x"
                logs:
                  - address: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                    topics:
                      - "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                      - "0x000000000000000000000000c000000000000000000000000000000000000000"
                      - "0x000000000000000000000000c000000000000000000000000000000000000001"
                    data: "0x0000000000000000000000000000000000000000000000000000000000000001"
                    blockNumber: "0x1530a5e"
                    transactionHash: "0x40e61ffc135d1d280646e8951141828e0fad81fd330b1c1a75454163f8c8ca34"
                    transactionIndex: "0x0"
                    blockHash: "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b"
                    logIndex: "0x0"
                    removed: false
                gasUsed: "0x5208"
                status: "0x1"
              - returnData: "0x"
                logs:
                  - address: "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"
                    topics:
                      - "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                      - "0x000000000000000000000000c000000000000000000000000000000000000000"
                      - "0x000000000000000000000000c000000000000000000000000000000000000002"
                    data: "0x0000000000000000000000000000000000000000000000000000000000000001"
                    blockNumber: "0x1530a5e"
                    transactionHash: "0x204d575c2f68b43a32423bc05491e8dafa71913e3e6d223aa5128cbd23562ecd"
                    transactionIndex: "0x1"
                    blockHash: "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b"
                    logIndex: "0x1"
                    removed: false
                gasUsed: "0x5208"
                status: "0x1"
            difficulty: "0x0"
            excessBlobGas: "0x3b80000"
            extraData: "0x"
            gasLimit: "0x22550dd"
            gasUsed: "0xa410"
            hash: "0x105b451ea332730fe2d316d983b9a406b6d4a022ee6e83e02bcae17a94f8c87b"
            logsBloom: "0x
            miner: "0x1f9090aae28b8a3dceadf281b0f12828e676c326"
            mixHash: "0x0000000000000000000000000000000000000000000000000000000000000000"
            nonce: "0x0000000000000000"
            number: "0x1530a5e"
            parentBeaconBlockRoot: "0x0000000000000000000000000000000000000000000000000000000000000000"
            parentHash: "0x513a0aa73024f294cdbcb0312af0c920850035f0552d7349ebb30717de30b1cc"
            receiptsRoot: "0x75308898d571eafb5cd8cde8278bf5b3d13c5f6ec074926de3bb895b519264e1"
            sha3Uncles: "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
            size: "0x29c"
            stateRoot: "0x65ea44c8bd5f9edbf269b6446b460b3e7378abb25c78fd5d70f0e2ef59296b25"
            timestamp: "0x67f43327"
            transactions:
              - "0x40e61ffc135d1d280646e8951141828e0fad81fd330b1c1a75454163f8c8ca34"
              - "0x204d575c2f68b43a32423bc05491e8dafa71913e3e6d223aa5128cbd23562ecd"
            transactionsRoot: "0xd6902f31ae9d2169b77cd88611c6afd691ea5a7e604e44c71f663fda0c5d1c28"
            uncles: []
            withdrawals: []
            withdrawalsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"

- name: eth_estimateGas
  summary: Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.
  description: >
    Generates and returns an estimate of how much gas is necessary to allow the transaction to complete.

    > ⚠ This endpoint is only available with [Blast](https://www.alchemy.com/docs/reference/introduction-to-blast) access.
  params:
    - name: Transaction
      required: true
      description: The transaction object for which to estimate gas usage.
      schema:
        $ref: "#/components/schemas/GenericTransaction"
    - name: Block
      required: false
      description: The block number or tag at which to estimate gas usage. Defaults to `'latest'` if not provided.
      schema:
        $ref: "#/components/schemas/BlockNumberOrTag"
  result:
    name: Gas used
    description: The estimated amount of gas required for the transaction, as a hexadecimal string.
    schema:
      $ref: "#/components/schemas/uint"
  examples:
    - name: eth_estimateGas example
      params:
        - name: Transaction
          value:
            from: "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73"
            to: "0x44aa93095d6749a706051658b970b941c72c1d53"
            value: "0x1"
      result:
        name: Gas used
        value: "0x5208"

- name: eth_createAccessList
  summary: Generates an access list for a transaction.
  description: >
    Generates an access list for a transaction.

    > ⚠ This endpoint is only available with [Blast](https://www.alchemy.com/docs/reference/introduction-to-blast) access.
  params:
    - name: Transaction
      required: true
      description: The transaction object for which to generate an access list.
      schema:
        $ref: "#/components/schemas/GenericTransaction"
    - name: Block
      required: false
      description: The block number or tag at which to create the access list. Defaults to `'latest'` if not provided.
      schema:
        $ref: "#/components/schemas/BlockNumberOrTag"
  result:
    name: Access list result
    description: An object containing the access list and gas used for the transaction.
    schema:
      title: Access list result
      type: object
      additionalProperties: false
      properties:
        accessList:
          title: Access list
          description: The generated access list for the transaction.
          $ref: "#/components/schemas/AccessList"
        error:
          title: Error
          description: Any error encountered during access list generation.
          type: string
        gasUsed:
          title: Gas used
          description: The estimated gas used for the transaction with the access list, as a hexadecimal string.
          $ref: "#/components/schemas/uint"
  examples:
    - name: eth_createAccessList example
      params:
        - name: Transaction
          value:
            from: "0xaea8f8f781326bfe6a7683c2bd48dd6aa4d3ba63"
            data: "0x608060806080608155"
        - name: Block
          value: "latest"
      result:
        name: Access list result
        value:
          accessList:
            - address: "0xa02457e5dfd32bda5fc7e1f1b008aa5979568150"
              storageKeys:
                - "0x0000000000000000000000000000000000000000000000000000000000000081"
          gasUsed: "0x125f8"

- name: web3_sha3
  summary: Returns Keccak-256 (not the standardized SHA3-256) hash of the given data.
  description: >
    Returns Keccak-256 (not the standardized SHA3-256) hash of the given data.

    > ⚠ This endpoint is only available with [Blast](https://www.alchemy.com/docs/reference/introduction-to-blast) access.
  params:
    - name: Data
      required: true
      description: The data to hash, encoded as a hexadecimal string.
      schema:
        $ref: "#/components/schemas/bytes"
  result:
    name: Hash
    description: The Keccak-256 hash of the input data, as a hexadecimal string.
    schema:
      $ref: "#/components/schemas/hash32"
  examples:
    - name: web3_sha3 example
      params:
        - name: Data
          value: "0x68656c6c6f20776f726c64"
      result:
        name: Hash
        value: "0x47173285a8d734ad4162d1b2ca3c6f0d0fabc60b8d702d31fd8e5c98569c36f9"
