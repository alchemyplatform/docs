Hex:
  type: string
  pattern: "^0[xX][0-9a-fA-F]*$"

# TODO: this does not currently allow for ENS addresses (e.g. vitalik.eth)
Address:
  $ref: "#/Hex"
  minLength: 42
  maxLength: 42
  # Vitalik's ETH address
  default: "0xd8da6bf26964af9d7eed9e03e53415d37aa96045"

FromAddress:
  $ref: "#/Address"
  # TODO: would hex make more sense than 20 bytes here?
  description: "address the transaction is sent from"

ToAddress:
  $ref: "#/Address"
  description: "address the transaction is directed to"
  # USDC contract
  default: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"

Value:
  $ref: "#/Hex"
  description: "amount in wei of ETH to transfer from sender to recipient"
  default: "0x0"

Data:
  $ref: "#/Hex"
  description: ""
  # transfer 1 USDC to address
  default: "0xa9059cbb000000000000000000000000fc43f5f9dd45258b3aff31bdbe6561d97e8b71de00000000000000000000000000000000000000000000000000000000000f4240"

GasLimit:
  $ref: "#/Hex"
  description: "max amount of gas available to the transaction"

GasPrice:
  $ref: "#/Hex"
  description: "(type 0) amount in wei per unit of gas"

MaxPriorityFeePerGas:
  $ref: "#/Hex"
  description: "(type 2) max amount of gas to be included as a tip to the validator"

MaxFeePerGas:
  $ref: "#/Hex"
  description: "(type 2) max amount of gas willing to be paid for the transaction (inclusive of baseFeePerGas and maxPriorityFeePerGas)"

TxObject:
  type: object
  properties:
    from:
      $ref: "#/FromAddress"
    to:
      $ref: "#/ToAddress"
    value:
      $ref: "#/Value"
    data:
      $ref: "#/Data"
    gas:
      $ref: "#/GasLimit"
    gasPrice:
      $ref: "#/GasPrice"
    maxFeePerGas:
      $ref: "#/MaxFeePerGas"
    maxPriorityFeePerGas:
      $ref: "#/MaxPriorityFeePerGas"

  # TODO: what about empty to address when deploying contract?
  required:
    - to

Id:
  type: integer
  default: 1
  # readOnly: true hides field in Readme UI!

JsonRpc:
  type: string
  default: "2.0"

Method:
  # Option 1
  # type: enum
  # # TODO: readme currently shows an empty option - bug needs to be fixed on their end
  # enum:
  #   - alchemy_simulateAssetChanges
  # default: alchemy_simulateAssetChanges
  # readOnly: true

  # Option 2
  type: string
  default: "TODO: override with own method name"

# ================= Account Abstraction =================

UserOperationPartial:
  title: User Operation, either v0.6 or v0.7 ( missing signature, paymasterData, and gas fields )
  oneOf:
    - $ref: "#/UserOperationPartialV0_6"
    - $ref: "#/UserOperationPartialV0_7"

UserOperationPartialV0_6:
  title: User Operation v0.6 ( missing signature, paymasterData, and gas fields )
  type: object
  properties:
    sender:
      $ref: "#/Hex"
      description: The account making the operation
      default: "0xceb161d3e0B6d01bc0e87ECC27fF9f2E2eCDCD81"
    nonce:
      $ref: "#/Hex"
      description: Anti-replay parameter; also used as the salt for first-time account creation
      default: "0x3"
    initCode:
      $ref: "#/Hex"
      description: The initCode of the account (needed if and only if the account is not yet on-chain and needs to be created)
      default: "0x"
    callData:
      $ref: "#/Hex"
      description: |
        Encoded data for executing the primary function call or operation within the user's transaction, such as calling a smart contract function or transferring tokens. This data is passed to the sender's address during the execution of the user operation.
      default: "0xb61d27f600000000000000000000000043f6bfbe9dad44cf0a60570c30c307d949be4cd40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000645c833bfd000000000000000000000000613c64104b98b048b93289ed20aefd80912b3cde0000000000000000000000000000000000000000000000000de123e8a84f9901000000000000000000000000c9371ea30dea5ac745b71e191ba8cde2c4e66df500000000000000000000000000000000000000000000000000000000"

UserOperationPartialV0_7:
  title: User Operation v0.7 ( missing signature, paymasterData, and gas fields )
  type: object
  properties:
    sender:
      $ref: "#/Hex"
      description: The account making the operation
      default: "0xceb161d3e0B6d01bc0e87ECC27fF9f2E2eCDCD81"
    nonce:
      $ref: "#/Hex"
      description: Anti-replay parameter; also used as the salt for first-time account creation
      default: "0x3"
    factory:
      $ref: "#/Hex"
      description: The account factory address (needed if and only if the account is not yet on-chain and needs to be created)
      default: "0x5061010c6114f7565b5061010c6114d6565B5061"
    factoryData:
      $ref: "#/Hex"
      description: Data for the account factory (only if the account factory exists)
      default: "0x"
    callData:
      $ref: "#/Hex"
      description: |
        Encoded data for executing the primary function call or operation within the user's transaction, such as calling a smart contract function or transferring tokens. This data is passed to the sender's address during the execution of the user operation.
      default: "0xb61d27f600000000000000000000000043f6bfbe9dad44cf0a60570c30c307d949be4cd40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000645c833bfd000000000000000000000000613c64104b98b048b93289ed20aefd80912b3cde0000000000000000000000000000000000000000000000000de123e8a84f9901000000000000000000000000c9371ea30dea5ac745b71e191ba8cde2c4e66df500000000000000000000000000000000000000000000000000000000"

UserOperationPartialWithGasFields:
  title: User Operation, either v0.6 or v0.7 ( missing signature and paymasterData )
  oneOf:
    - $ref: "#/UserOperationPartialWithGasFieldsV0_6"
    - $ref: "#/UserOperationPartialWithGasFieldsV0_7"

UserOperationPartialWithGasFieldsV0_6:
  title: User Operation v0.6 ( missing signature and paymasterData )
  type: object
  allOf:
    - $ref: "#/UserOperationPartialV0_6"
    - type: object
      properties:
        callGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate the main execution call
          default: "0x7A1200"
        verificationGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate for the verification step
          default: "0x927C0"
        preVerificationGas:
          $ref: "#/Hex"
          description: The amount of gas to pay for to compensate the bundler for pre-verification execution and calldata
          default: "0x15F90"
        maxFeePerGas:
          $ref: "#/Hex"
          description: The maximum fee per gas to pay for the execution of this operation (similar to EIP-1559 max_fee_per_gas)
          default: "0x656703D00"
        maxPriorityFeePerGas:
          $ref: "#/Hex"
          description: Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas)
          default: "0x13AB6680"

UserOperationPartialWithGasFieldsV0_7:
  title: User Operation v0.7 ( missing signature and paymasterData )
  type: object
  allOf:
    - $ref: "#/UserOperationPartialV0_7"
    - type: object
      properties:
        callGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate the main execution call
          default: "0x7A1200"
        verificationGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate for the verification step
          default: "0x927C0"
        preVerificationGas:
          $ref: "#/Hex"
          description: The amount of gas to pay for to compensate the bundler for pre-verification execution and calldata
          default: "0x15F90"
        maxFeePerGas:
          $ref: "#/Hex"
          description: The maximum fee per gas to pay for the execution of this operation (similar to EIP-1559 max_fee_per_gas)
          default: "0x656703D00"
        maxPriorityFeePerGas:
          $ref: "#/Hex"
          description: Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas)
          default: "0x13AB6680"
        paymasterVerificationGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate for the paymaster validation code (only if a paymaster exists)
          default: "0x927C0"
        paymasterPostOpGasLimit:
          $ref: "#/Hex"
          description: The amount of gas to allocate for the paymaster post-op code (only if a paymaster exists)
          default: "0x927C0"

UserOperation:
  title: User Operation, either v0.6 or v0.7
  oneOf:
    - $ref: "#/UserOperationV0_6"
    - $ref: "#/UserOperationV0_7"

UserOperationV0_6:
  title: User Operation v0.6
  type: object
  allOf:
    - $ref: "#/UserOperationPartialWithGasFieldsV0_6"
    - type: object
      properties:
        signature:
          $ref: "#/Hex"
          description: Data passed into the account along with the nonce during the verification step
          default: "0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"
        paymasterAndData:
          $ref: "#/Hex"
          description: Address of paymaster sponsoring the transaction, followed by extra data to send to the paymaster (empty for self-sponsored transaction)
          default: "0x9db7f05b0eb93eb242b5913596dcfaada756af5c"

UserOperationV0_7:
  title: User Operation v0.7
  type: object
  allOf:
    - $ref: "#/UserOperationPartialWithGasFieldsV0_7"
    - type: object
      properties:
        signature:
          $ref: "#/Hex"
          description: Data passed into the account along with the nonce during the verification step
          default: "0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c"
        paymaster:
          $ref: "#/Hex"
          description: Address of the paymaster contract (or empty, if the account pays for itself)
          default: "0x9db7f05b0eb93eb242b5913596dcfaada756af5c"
        paymasterData:
          $ref: "#/Hex"
          description: Data for the paymaster (only if the paymaster exists)
          default: "0x"

UserOperationReceipt:
  type: object
  description: UserOperationReceipt object representing the outcome of a UserOperation.
  properties:
    userOpHash:
      type: string
      description: The request hash of the UserOperation.
    entryPoint:
      $ref: "#/EntryPoint"
    sender:
      type: string
      format: address
      description: The account initiating the UserOperation.
    nonce:
      type: integer
      format: int256
      description: The nonce used in the UserOperation.
    paymaster:
      type: string
      format: address
      description: The paymaster used for this UserOperation (or empty).
    actualGasCost:
      type: integer
      format: int256
      description: The actual amount paid (by account or paymaster) for this UserOperation.
    actualGasUsed:
      type: integer
      format: int256
      description: The total gas used by this UserOperation (including preVerification, creation, validation, and execution).
    success:
      type: boolean
      description: Indicates whether the execution completed without reverting.
    reason:
      type: string
      description: In case of revert, this is the revert reason.
    logs:
      type: array
      items:
        type: string
      description: The logs generated by this UserOperation (not including logs of other UserOperations in the same bundle).
    receipt:
      $ref: ../evm_responses.yaml#/transaction_receipt
      description: The TransactionReceipt object for the entire bundle, not only for this UserOperation.

EntryPoint:
  $ref: "#/Hex"
  title: Entrypoint Address
  description: The entrypoint address the request should be sent through. This MUST be one of the entry points returned by the `supportedEntryPoints` RPC call.
  default: "0x0000000071727De22E5E9d8BAf0edAc6f37da032"

BlockOverride:
  $ref: "#/Hex"
  title: Block Override
  default: "0x113CF6E"

ChainId:
  type: string
  description: The chain ID of the network the operation will be submitted on.
  pattern: "^0[xX][0-9a-fA-F]+$"
  default: "0x1"
# ============ EVM Models ==============
common_request_fields:
  type: object
  properties:
    id:
      $ref: "#/Id"
    jsonrpc:
      $ref: "#/JsonRpc"
# ============= Token API Methods ===============
alchemy_getTokenMetadata:
  allOf:
    - $ref: "#/common_request_fields"
    - type: object
      properties:
        method:
          $ref: "#/Method"
          default: alchemy_getTokenMetadata
        params:
          type: array
          description: "string, 20 Bytes - Singular address for the token contract."
          minItems: 1
          maxItems: 1
          items:
            type: string
            default: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
