name: PR Validation

on:
  pull_request:
    branches: [main]

jobs:
  rest-api-specs:
    name: REST API Specs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Validate REST API specs
        run: |
          mkdir -p docs/api-specs/alchemy/rest
          for file in src/openapi/*; do
            if [ -f "$file" ]; then
              filename="docs/api-specs/alchemy/rest/$(basename "$file" .yaml).json"
              pnpm exec redocly bundle "$file" --dereferenced --output "$filename" --ext json && \
              pnpm exec redocly lint "$filename" --format json
            fi
          done

  markdown-files:
    name: Markdown Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate markdown files
        run: |
          mkdir -p docs/markdown
          rsync -av src/markdown docs/

  rpc-specs:
    name: RPC Specs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
      - name: Validate RPC specs
        run: pnpm exec ts-node ./scripts/build-rpc.ts
