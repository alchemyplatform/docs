{
	"openrpc": "1.2.4",
	"info": {
		"title": "Alchemy Starknet JSON-RPC Specification",
		"description": "A specification of the standard JSON-RPC methods for Starknet.",
		"version": "0.0.0"
	},
	"methods": [
		{
			"name": "starknet_blockHashAndNumber",
			"summary": "Get the most recent accepted block hash and number",
			"params": [],
			"result": {
				"name": "result",
				"description": "The latest block hash and number",
				"schema": {
					"title": "Starknet block hash and number result",
					"type": "object",
					"required": [
						"block_hash",
						"block_number"
					],
					"properties": {
						"block_hash": {
							"title": "Block hash",
							"description": "The hash identifying a block",
							"type": "string",
							"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
						},
						"block_number": {
							"title": "Block number",
							"description": "The block's number (its height)",
							"type": "integer",
							"minimum": 0
						}
					}
				}
			}
		},
		{
			"name": "starknet_blockNumber",
			"summary": "Get the most recent accepted block number",
			"params": [],
			"result": {
				"name": "result",
				"description": "The latest block number",
				"schema": {
					"title": "Block number",
					"description": "The block's number (its height)",
					"type": "integer",
					"minimum": 0
				}
			}
		},
		{
			"name": "starknet_call",
			"summary": "Call a StarkNet function without creating a StarkNet transaction",
			"description": "Calls a function in a contract and returns the return value. Using this call will not create a transaction; hence, will not change the state\n",
			"params": [
				{
					"name": "request",
					"summary": "The details of the function call",
					"required": true,
					"schema": {
						"title": "Function call",
						"type": "object",
						"description": "Function call information",
						"required": [
							"contract_address",
							"entry_point_selector",
							"calldata"
						],
						"properties": {
							"contract_address": {
								"title": "Contract address",
								"description": "A contract address",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"entry_point_selector": {
								"title": "Entry point selector",
								"description": "A field element. Represented by at most 63 hex digits",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"calldata": {
								"title": "Calldata",
								"type": "array",
								"description": "The parameters passed to the function",
								"items": {
									"title": "Field element",
									"description": "A field element. Represented by at most 63 hex digits",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						}
					}
				},
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag, for the block referencing the state or call the transaction on.\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"summary": "The function's return value",
				"description": "The function's return value, as defined in the Cairo output",
				"schema": {
					"type": "array",
					"title": "Field element",
					"items": {
						"title": "Field element",
						"description": "A field element. Represented by at most 63 hex digits",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			}
		},
		{
			"name": "starknet_chainId",
			"summary": "Return the currently configured StarkNet chain id",
			"params": [],
			"result": {
				"name": "result",
				"description": "The chain id this node is connected to",
				"schema": {
					"title": "Chain id",
					"description": "StarkNet chain id, given in hex representation.",
					"type": "string",
					"pattern": "^0x[a-fA-F0-9]+$"
				}
			}
		},
		{
			"name": "starknet_estimateFee",
			"summary": "Estimate the fee for StarkNet transactions",
			"description": "Estimates the resources required by a given sequence of transactions when applied on a given state. If one of the transactions reverts or fails due to any reason (e.g., validation failure or an internal error), a TRANSACTION_EXECUTION_ERROR is returned. For v0-2 transactions the estimate is given in wei, and for v3 transactions it is given in fri.\n",
			"params": [
				{
					"name": "request",
					"summary": "The transaction to estimate",
					"required": true,
					"schema": {
						"type": "array",
						"description": "A sequence of transactions to estimate, running each transaction on the state resulting from applying all the previous ones\n",
						"title": "Transaction",
						"items": {
							"title": "Broadcasted transaction",
							"description": "A transaction that has been broadcasted to the network",
							"oneOf": [
								{
									"title": "Broadcasted invoke transaction",
									"description": "A transaction that has been broadcasted to the network",
									"oneOf": [
										{
											"title": "Invoke transaction V0",
											"description": "Invokes a specific function in the desired contract (not necessarily an account)",
											"type": "object",
											"required": [
												"type",
												"contract_address",
												"entry_point_selector",
												"calldata",
												"max_fee",
												"version",
												"signature"
											],
											"properties": {
												"type": {
													"title": "Type",
													"type": "string",
													"enum": [
														"INVOKE"
													]
												},
												"max_fee": {
													"title": "Max fee",
													"description": "The maximal fee that can be charged for including the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x0",
														"0x100000000000000000000000000000000"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"contract_address": {
													"title": "Contract address",
													"description": "A contract address",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"entry_point_selector": {
													"title": "Entry point selector",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"calldata": {
													"title": "Calldata",
													"type": "array",
													"description": "The parameters passed to the function",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										{
											"title": "Invoke transaction V1",
											"description": "Initiates a transaction from a given account",
											"type": "object",
											"required": [
												"type",
												"sender_address",
												"calldata",
												"max_fee",
												"version",
												"signature",
												"nonce"
											],
											"properties": {
												"type": {
													"title": "Type",
													"type": "string",
													"enum": [
														"INVOKE"
													]
												},
												"sender_address": {
													"title": "Sender address",
													"description": "A contract address",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"calldata": {
													"title": "Calldata",
													"type": "array",
													"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"max_fee": {
													"title": "Max fee",
													"description": "The maximal fee that can be charged for including the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x1",
														"0x100000000000000000000000000000001"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce": {
													"title": "Nonce",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										},
										{
											"title": "Invoke transaction V3",
											"description": "Initiates a transaction from a given account",
											"type": "object",
											"required": [
												"type",
												"sender_address",
												"calldata",
												"version",
												"signature",
												"nonce",
												"resource_bounds",
												"tip",
												"paymaster_data",
												"account_deployment_data",
												"nonce_data_availability_mode",
												"fee_data_availability_mode"
											],
											"properties": {
												"type": {
													"title": "Type",
													"type": "string",
													"enum": [
														"INVOKE"
													]
												},
												"sender_address": {
													"title": "Sender address",
													"description": "A contract address",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"calldata": {
													"title": "Calldata",
													"type": "array",
													"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x3",
														"0x100000000000000000000000000000003"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce": {
													"title": "Nonce",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"resource_bounds": {
													"type": "object",
													"required": [
														"l1_gas",
														"l2_gas"
													],
													"title": "Resource bounds",
													"description": "Resource bounds for the transaction execution",
													"properties": {
														"l1_gas": {
															"type": "object",
															"required": [
																"max_amount",
																"max_price_per_unit"
															],
															"title": "L1 Gas",
															"description": "The max amount and max price per unit of L1 gas used in this transaction",
															"properties": {
																"max_amount": {
																	"title": "Max amount",
																	"description": "The max amount of the resource that can be used in the transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																},
																"max_price_per_unit": {
																	"title": "Max price per unit",
																	"description": "The max price per unit of this resource for this transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																}
															}
														},
														"l2_gas": {
															"type": "object",
															"required": [
																"max_amount",
																"max_price_per_unit"
															],
															"title": "L2 Gas",
															"description": "The max amount and max price per unit of L2 gas used in this transaction",
															"properties": {
																"max_amount": {
																	"title": "Max amount",
																	"description": "The max amount of the resource that can be used in the transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																},
																"max_price_per_unit": {
																	"title": "Max price per unit",
																	"description": "The max price per unit of this resource for this transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																}
															}
														}
													}
												},
												"tip": {
													"title": "Tip",
													"description": "The tip for the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
												},
												"paymaster_data": {
													"title": "Paymaster data",
													"type": "array",
													"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"account_deployment_data": {
													"title": "Account deployment data",
													"type": "array",
													"description": "Data needed to deploy the account contract from which this transaction will be initiated",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce_data_availability_mode": {
													"title": "Nonce DA mode",
													"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
													"type": "string",
													"enum": [
														"L1",
														"L2"
													]
												},
												"fee_data_availability_mode": {
													"title": "Fee DA mode",
													"description": "The storage domain of the account's balance from which the fee will be charged\n",
													"type": "string",
													"enum": [
														"L1",
														"L2"
													]
												}
											}
										}
									]
								},
								{
									"title": "Broadcasted declare transaction",
									"description": "A transaction that has been broadcasted to the network",
									"oneOf": [
										{
											"title": "Broadcasted declare transaction V1",
											"description": "A transaction that has been broadcasted to the network",
											"type": "object",
											"required": [
												"type",
												"sender_address",
												"max_fee",
												"version",
												"signature",
												"nonce",
												"class_hash"
											],
											"properties": {
												"type": {
													"title": "Declare",
													"type": "string",
													"enum": [
														"DECLARE"
													]
												},
												"sender_address": {
													"title": "Sender address",
													"description": "The address of the account contract sending the declaration transaction\n",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"max_fee": {
													"title": "Max fee",
													"description": "The maximal fee that can be charged for including the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x1",
														"0x100000000000000000000000000000001"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce": {
													"title": "Nonce",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"class_hash": {
													"title": "Class hash",
													"description": "The hash of the declared class",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										},
										{
											"title": "Broadcasted declare transaction V2",
											"description": "A transaction that has been broadcasted to the network",
											"type": "object",
											"required": [
												"type",
												"sender_address",
												"compiled_class_hash",
												"max_fee",
												"version",
												"signature",
												"nonce",
												"class_hash"
											],
											"properties": {
												"type": {
													"title": "Declare",
													"type": "string",
													"enum": [
														"DECLARE"
													]
												},
												"sender_address": {
													"title": "Sender address",
													"description": "The address of the account contract sending the declaration transaction\n",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"compiled_class_hash": {
													"title": "Compiled class hash",
													"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"max_fee": {
													"title": "Max fee",
													"description": "The maximal fee that can be charged for including the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x2",
														"0x100000000000000000000000000000002"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce": {
													"title": "Nonce",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"class_hash": {
													"title": "Class hash",
													"description": "The hash of the declared class",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										},
										{
											"title": "Broadcasted declare transaction V3",
											"description": "A transaction that has been broadcasted to the network",
											"type": "object",
											"required": [
												"type",
												"sender_address",
												"compiled_class_hash",
												"version",
												"signature",
												"nonce",
												"class_hash",
												"resource_bounds",
												"tip",
												"paymaster_data",
												"account_deployment_data",
												"nonce_data_availability_mode",
												"fee_data_availability_mode"
											],
											"properties": {
												"type": {
													"title": "Declare",
													"type": "string",
													"enum": [
														"DECLARE"
													]
												},
												"sender_address": {
													"title": "Sender address",
													"description": "The address of the account contract sending the declaration transaction\n",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"compiled_class_hash": {
													"title": "Compiled class hash",
													"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"version": {
													"title": "Version",
													"description": "Version of the transaction scheme",
													"type": "string",
													"enum": [
														"0x3",
														"0x100000000000000000000000000000003"
													]
												},
												"signature": {
													"title": "Signature",
													"description": "A transaction signature",
													"type": "array",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce": {
													"title": "Nonce",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"class_hash": {
													"title": "Class hash",
													"description": "The hash of the declared class",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												},
												"resource_bounds": {
													"type": "object",
													"required": [
														"l1_gas",
														"l2_gas"
													],
													"title": "Resource bounds",
													"description": "Resource bounds for the transaction execution",
													"properties": {
														"l1_gas": {
															"type": "object",
															"required": [
																"max_amount",
																"max_price_per_unit"
															],
															"title": "L1 Gas",
															"description": "The max amount and max price per unit of L1 gas used in this transaction",
															"properties": {
																"max_amount": {
																	"title": "Max amount",
																	"description": "The max amount of the resource that can be used in the transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																},
																"max_price_per_unit": {
																	"title": "Max price per unit",
																	"description": "The max price per unit of this resource for this transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																}
															}
														},
														"l2_gas": {
															"type": "object",
															"required": [
																"max_amount",
																"max_price_per_unit"
															],
															"title": "L2 Gas",
															"description": "The max amount and max price per unit of L2 gas used in this transaction",
															"properties": {
																"max_amount": {
																	"title": "Max amount",
																	"description": "The max amount of the resource that can be used in the transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																},
																"max_price_per_unit": {
																	"title": "Max price per unit",
																	"description": "The max price per unit of this resource for this transaction",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																}
															}
														}
													}
												},
												"tip": {
													"title": "Tip",
													"description": "The tip for the transaction",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
												},
												"paymaster_data": {
													"title": "Paymaster data",
													"type": "array",
													"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"account_deployment_data": {
													"title": "Account deployment data",
													"type": "array",
													"description": "Data needed to deploy the account contract from which this transaction will be initiated",
													"items": {
														"title": "Field element",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												},
												"nonce_data_availability_mode": {
													"title": "Nonce DA mode",
													"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
													"type": "string",
													"enum": [
														"L1",
														"L2"
													]
												},
												"fee_data_availability_mode": {
													"title": "Fee DA mode",
													"description": "The storage domain of the account's balance from which the fee will be charged\n",
													"type": "string",
													"enum": [
														"L1",
														"L2"
													]
												}
											}
										}
									]
								},
								{
									"title": "Broadcasted deploy account transaction",
									"description": "A transaction that has been broadcasted to the network",
									"type": "object",
									"required": [
										"version",
										"signature",
										"nonce",
										"type",
										"contract_address_salt",
										"constructor_calldata",
										"class_hash",
										"max_fee"
									],
									"properties": {
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x1",
												"0x100000000000000000000000000000001"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"DEPLOY_ACCOUNT"
											]
										},
										"contract_address_salt": {
											"title": "Contract address salt",
											"description": "The salt for the address of the deployed contract",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"constructor_calldata": {
											"title": "Constructor calldata",
											"type": "array",
											"description": "The parameters passed to the constructor",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the deployed contract's class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								}
							]
						}
					}
				},
				{
					"name": "simulation_flags",
					"description": "Describes what parts of the transaction should be executed",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"title": "Simulation flag for estimate fee",
							"description": "Flags that indicate how to simulate a given transaction. By default, the sequencer behavior is replicated locally\n",
							"type": "string",
							"enum": [
								"SKIP_VALIDATE"
							]
						}
					}
				},
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag, for the block referencing the state or call the transaction on.\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The fee estimations",
				"schema": {
					"title": "Estimation",
					"type": "array",
					"description": "A sequence of fee estimations where the i'th estimate corresponds to the i'th transaction\n",
					"items": {
						"title": "Fee estimation",
						"type": "object",
						"required": [
							"gas_consumed",
							"gas_price",
							"data_gas_consumed",
							"data_gas_price",
							"overall_fee",
							"unit"
						],
						"properties": {
							"gas_consumed": {
								"title": "Gas consumed",
								"description": "The Ethereum gas consumption of the transaction",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"gas_price": {
								"title": "Gas price",
								"description": "The gas price (in wei or fri, depending on the tx version) that was used in the cost estimation\n",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"data_gas_consumed": {
								"title": "Data gas consumed",
								"description": "The Ethereum data gas consumption of the transaction",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"data_gas_price": {
								"title": "Data gas price",
								"description": "The data gas price (in wei or fri, depending on the tx version) that was used in the cost estimation\n",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"overall_fee": {
								"title": "Overall fee",
								"description": "The estimated fee for the transaction (in wei or fri, depending on the tx version), equals to gas_consumed * gas_price + data_gas_consumed * data_gas_price\n",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"unit": {
								"title": "Fee unit",
								"type": "string",
								"enum": [
									"WEI",
									"FRI"
								],
								"description": "Units in which the fee is given"
							}
						}
					}
				}
			}
		},
		{
			"name": "starknet_getBlockTransactionCount",
			"summary": "Get the number of transactions in a block given a block id",
			"description": "Returns the number of transactions in the designated block.",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"summary": "The number of transactions in the designated block",
				"description": "The number of transactions in the designated block",
				"schema": {
					"title": "Block transaction count",
					"type": "integer",
					"minimum": 0
				}
			}
		},
		{
			"name": "starknet_getBlockWithTxHashes",
			"summary": "Get block information with transaction hashes given the block id",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The resulting block information with transaction hashes",
				"schema": {
					"title": "Starknet get block hash with tx hashes result",
					"oneOf": [
						{
							"title": "Block with transaction hashes",
							"description": "The block object",
							"type": "object",
							"required": [
								"block_hash",
								"block_number",
								"l1_da_mode",
								"l1_data_gas_price",
								"l1_gas_price",
								"new_root",
								"parent_hash",
								"sequencer_address",
								"starknet_version",
								"status",
								"timestamp",
								"transactions"
							],
							"properties": {
								"status": {
									"title": "Status",
									"description": "The status of the block",
									"type": "string",
									"enum": [
										"PENDING",
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1",
										"REJECTED"
									]
								},
								"block_hash": {
									"title": "Block hash",
									"description": "The hash identifying a block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"parent_hash": {
									"title": "Parent hash",
									"description": "The hash of this block's parent",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"block_number": {
									"title": "Block number",
									"description": "The block number (its height)",
									"type": "integer",
									"minimum": 0
								},
								"new_root": {
									"title": "New root",
									"description": "The new global state root",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"timestamp": {
									"title": "Timestamp",
									"description": "The time in which the block was created, encoded in Unix time",
									"type": "integer",
									"minimum": 0
								},
								"sequencer_address": {
									"title": "Sequencer address",
									"description": "The StarkNet identity of the sequencer submitting this block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"l1_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 gas price",
									"description": "The price of L1 gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_data_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 data gas price",
									"description": "The price of L1 data gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_da_mode": {
									"title": "L1 da mode",
									"type": "string",
									"description": "Specifies whether the data of this block is published via blob data or calldata",
									"enum": [
										"BLOB",
										"CALLDATA"
									]
								},
								"starknet_version": {
									"title": "Starknet version",
									"description": "Semver of the current Starknet protocol",
									"type": "string"
								},
								"transactions": {
									"title": "Transaction hashes",
									"description": "The hashes of the transactions included in this block",
									"type": "array",
									"items": {
										"title": "Transaction hash",
										"description": "The hash of a single transaction",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							}
						},
						{
							"title": "Pending block with transaction hashes",
							"description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
							"type": "object",
							"required": [
								"l1_da_mode",
								"l1_data_gas_price",
								"l1_gas_price",
								"parent_hash",
								"sequencer_address",
								"starknet_version",
								"timestamp",
								"transactions"
							],
							"not": {
								"anyOf": [
									{
										"required": [
											"block_hash",
											"block_number",
											"new_root"
										]
									}
								]
							},
							"properties": {
								"transactions": {
									"title": "Transaction hashes",
									"description": "The hashes of the transactions included in this block",
									"type": "array",
									"items": {
										"title": "Transaction hash",
										"description": "The hash of a single transaction",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"parent_hash": {
									"title": "Parent hash",
									"description": "The hash of this block's parent",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"timestamp": {
									"title": "Timestamp",
									"description": "The time in which the block was created, encoded in Unix time",
									"type": "integer",
									"minimum": 0
								},
								"sequencer_address": {
									"title": "Sequencer address",
									"description": "The StarkNet identity of the sequencer submitting this block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"l1_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 gas price",
									"description": "The price of L1 gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_data_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 data gas price",
									"description": "The price of L1 data gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_da_mode": {
									"title": "L1 da mode",
									"type": "string",
									"description": "Specifies whether the data of this block is published via blob data or calldata",
									"enum": [
										"BLOB",
										"CALLDATA"
									]
								},
								"starknet_version": {
									"title": "Starknet version",
									"description": "Semver of the current Starknet protocol",
									"type": "string"
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "starknet_getBlockWithTxs",
			"summary": "Get block information with full transactions given the block id",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The resulting block information with full transactions",
				"schema": {
					"title": "Starknet get block with txs result",
					"oneOf": [
						{
							"title": "Block with transactions",
							"description": "The block object",
							"type": "object",
							"required": [
								"block_hash",
								"block_number",
								"l1_da_mode",
								"l1_data_gas_price",
								"l1_gas_price",
								"new_root",
								"parent_hash",
								"sequencer_address",
								"starknet_version",
								"status",
								"timestamp",
								"transactions"
							],
							"properties": {
								"status": {
									"title": "Status",
									"description": "The status of the block",
									"type": "string",
									"enum": [
										"PENDING",
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1",
										"REJECTED"
									]
								},
								"block_hash": {
									"title": "Block hash",
									"description": "The hash identifying a block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"parent_hash": {
									"title": "Parent hash",
									"description": "The hash of this block's parent",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"block_number": {
									"title": "Block number",
									"description": "The block number (its height)",
									"type": "integer",
									"minimum": 0
								},
								"new_root": {
									"title": "New root",
									"description": "The new global state root",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"timestamp": {
									"title": "Timestamp",
									"description": "The time in which the block was created, encoded in Unix time",
									"type": "integer",
									"minimum": 0
								},
								"sequencer_address": {
									"title": "Sequencer address",
									"description": "The StarkNet identity of the sequencer submitting this block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"l1_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 gas price",
									"description": "The price of L1 gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_data_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 data gas price",
									"description": "The price of L1 data gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_da_mode": {
									"title": "L1 da mode",
									"type": "string",
									"description": "Specifies whether the data of this block is published via blob data or calldata",
									"enum": [
										"BLOB",
										"CALLDATA"
									]
								},
								"starknet_version": {
									"title": "Starknet version",
									"description": "Semver of the current Starknet protocol",
									"type": "string"
								},
								"transactions": {
									"title": "Transactions",
									"description": "The transactions in this block",
									"type": "array",
									"items": {
										"title": "Transactions in block",
										"type": "object",
										"description": "The transaction schema, as it appears inside a block",
										"oneOf": [
											{
												"title": "Invoke transaction",
												"description": "Initiate a transaction from an account",
												"oneOf": [
													{
														"title": "Invoke transaction V0",
														"description": "Invokes a specific function in the desired contract (not necessarily an account)",
														"type": "object",
														"required": [
															"type",
															"contract_address",
															"entry_point_selector",
															"calldata",
															"max_fee",
															"version",
															"signature"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x0",
																	"0x100000000000000000000000000000000"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"contract_address": {
																"title": "Contract address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"entry_point_selector": {
																"title": "Entry point selector",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The parameters passed to the function",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															}
														}
													},
													{
														"title": "Invoke transaction V1",
														"description": "Initiates a transaction from a given account",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"calldata",
															"max_fee",
															"version",
															"signature",
															"nonce"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x1",
																	"0x100000000000000000000000000000001"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Invoke transaction V3",
														"description": "Initiates a transaction from a given account",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"calldata",
															"version",
															"signature",
															"nonce",
															"resource_bounds",
															"tip",
															"paymaster_data",
															"account_deployment_data",
															"nonce_data_availability_mode",
															"fee_data_availability_mode"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x3",
																	"0x100000000000000000000000000000003"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"resource_bounds": {
																"type": "object",
																"required": [
																	"l1_gas",
																	"l2_gas"
																],
																"title": "Resource bounds",
																"description": "Resource bounds for the transaction execution",
																"properties": {
																	"l1_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L1 Gas",
																		"description": "The max amount and max price per unit of L1 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	},
																	"l2_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L2 Gas",
																		"description": "The max amount and max price per unit of L2 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	}
																}
															},
															"tip": {
																"title": "Tip",
																"description": "The tip for the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
															},
															"paymaster_data": {
																"title": "Paymaster data",
																"type": "array",
																"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"account_deployment_data": {
																"title": "Account deployment data",
																"type": "array",
																"description": "Data needed to deploy the account contract from which this transaction will be initiated",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce_data_availability_mode": {
																"title": "Nonce DA mode",
																"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															},
															"fee_data_availability_mode": {
																"title": "Fee DA mode",
																"description": "The storage domain of the account's balance from which the fee will be charged\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															}
														}
													}
												]
											},
											{
												"title": "L1 Handler Transaction",
												"description": "A call to an l1_handler on an L2 contract induced by a message from L1\n",
												"type": "object",
												"required": [
													"calldata",
													"contract_address",
													"entry_point_selector",
													"nonce",
													"type",
													"version"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"enum": [
															"0x0"
														]
													},
													"type": {
														"title": "Type",
														"type": "string",
														"enum": [
															"L1_HANDLER"
														]
													},
													"nonce": {
														"title": "Nonce",
														"description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent\n",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"contract_address": {
														"title": "Contract address",
														"description": "A contract address",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"entry_point_selector": {
														"title": "Entry point selector",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"calldata": {
														"title": "Calldata",
														"type": "array",
														"description": "The parameters passed to the function",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													}
												}
											},
											{
												"title": "Declare transaction",
												"oneOf": [
													{
														"title": "Declare Contract Transaction V0",
														"description": "Declare Contract Transaction V0",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"max_fee",
															"version",
															"signature",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x0",
																	"0x100000000000000000000000000000000"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Contract Transaction V1",
														"description": "Declare Contract Transaction V1",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"max_fee",
															"version",
															"signature",
															"nonce",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x1",
																	"0x100000000000000000000000000000001"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Transaction V2",
														"description": "Declare Contract Transaction V2",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"compiled_class_hash",
															"max_fee",
															"version",
															"signature",
															"nonce",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"compiled_class_hash": {
																"title": "Compiled class hash",
																"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x2",
																	"0x100000000000000000000000000000002"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Transaction V3",
														"description": "Declare Contract Transaction V3",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"compiled_class_hash",
															"version",
															"signature",
															"nonce",
															"class_hash",
															"resource_bounds",
															"tip",
															"paymaster_data",
															"account_deployment_data",
															"nonce_data_availability_mode",
															"fee_data_availability_mode"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"compiled_class_hash": {
																"title": "Compiled class hash",
																"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x3",
																	"0x100000000000000000000000000000003"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"resource_bounds": {
																"type": "object",
																"required": [
																	"l1_gas",
																	"l2_gas"
																],
																"title": "Resource bounds",
																"description": "Resource bounds for the transaction execution",
																"properties": {
																	"l1_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L1 Gas",
																		"description": "The max amount and max price per unit of L1 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	},
																	"l2_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L2 Gas",
																		"description": "The max amount and max price per unit of L2 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	}
																}
															},
															"tip": {
																"title": "Tip",
																"description": "The tip for the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
															},
															"paymaster_data": {
																"title": "Paymaster data",
																"type": "array",
																"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"account_deployment_data": {
																"title": "Account deployment data",
																"type": "array",
																"description": "Data needed to deploy the account contract from which this transaction will be initiated",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce_data_availability_mode": {
																"title": "Nonce DA mode",
																"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															},
															"fee_data_availability_mode": {
																"title": "Fee DA mode",
																"description": "The storage domain of the account's balance from which the fee will be charged\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															}
														}
													}
												]
											},
											{
												"title": "Deploy Contract Transaction",
												"description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions\n",
												"type": "object",
												"required": [
													"version",
													"type",
													"constructor_calldata",
													"contract_address_salt",
													"class_hash"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"type": {
														"title": "Deploy",
														"type": "string",
														"enum": [
															"DEPLOY"
														]
													},
													"contract_address_salt": {
														"title": "Contract address salt",
														"description": "The salt for the address of the deployed contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"constructor_calldata": {
														"title": "Constructor calldata",
														"type": "array",
														"description": "The parameters passed to the constructor",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the deployed contract's class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											},
											{
												"title": "Deploy Account Transaction",
												"description": "Deploys an account contract",
												"type": "object",
												"required": [
													"version",
													"signature",
													"nonce",
													"type",
													"contract_address_salt",
													"constructor_calldata",
													"class_hash",
													"max_fee"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"enum": [
															"0x1",
															"0x100000000000000000000000000000001"
														]
													},
													"signature": {
														"title": "Signature",
														"description": "A transaction signature",
														"type": "array",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"nonce": {
														"title": "Nonce",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"type": {
														"title": "Type",
														"type": "string",
														"enum": [
															"DEPLOY_ACCOUNT"
														]
													},
													"contract_address_salt": {
														"title": "Contract address salt",
														"description": "The salt for the address of the deployed contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"constructor_calldata": {
														"title": "Constructor calldata",
														"type": "array",
														"description": "The parameters passed to the constructor",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the deployed contract's class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"max_fee": {
														"title": "Max fee",
														"description": "The maximal fee that can be charged for including the transaction",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										],
										"required": [
											"transaction_hash"
										],
										"properties": {
											"transaction_hash": {
												"title": "Transaction hash",
												"description": "The transaction hash, as assigned in StarkNet",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									}
								}
							}
						},
						{
							"title": "Pending block with transactions",
							"description": "The dynamic block being constructed by the sequencer. Note that this object will be deprecated upon decentralization.",
							"type": "object",
							"required": [
								"l1_da_mode",
								"l1_data_gas_price",
								"l1_gas_price",
								"parent_hash",
								"sequencer_address",
								"starknet_version",
								"timestamp",
								"transactions"
							],
							"not": {
								"anyOf": [
									{
										"required": [
											"block_hash",
											"block_number",
											"new_root"
										]
									}
								]
							},
							"properties": {
								"transactions": {
									"title": "Transactions",
									"description": "The transactions in this block",
									"type": "array",
									"items": {
										"title": "Transactions in block",
										"type": "object",
										"description": "The transaction schema, as it appears inside a block",
										"oneOf": [
											{
												"title": "Invoke transaction",
												"description": "Initiate a transaction from an account",
												"oneOf": [
													{
														"title": "Invoke transaction V0",
														"description": "Invokes a specific function in the desired contract (not necessarily an account)",
														"type": "object",
														"required": [
															"type",
															"contract_address",
															"entry_point_selector",
															"calldata",
															"max_fee",
															"version",
															"signature"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x0",
																	"0x100000000000000000000000000000000"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"contract_address": {
																"title": "Contract address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"entry_point_selector": {
																"title": "Entry point selector",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The parameters passed to the function",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															}
														}
													},
													{
														"title": "Invoke transaction V1",
														"description": "Initiates a transaction from a given account",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"calldata",
															"max_fee",
															"version",
															"signature",
															"nonce"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x1",
																	"0x100000000000000000000000000000001"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Invoke transaction V3",
														"description": "Initiates a transaction from a given account",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"calldata",
															"version",
															"signature",
															"nonce",
															"resource_bounds",
															"tip",
															"paymaster_data",
															"account_deployment_data",
															"nonce_data_availability_mode",
															"fee_data_availability_mode"
														],
														"properties": {
															"type": {
																"title": "Type",
																"type": "string",
																"enum": [
																	"INVOKE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "A contract address",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"calldata": {
																"title": "Calldata",
																"type": "array",
																"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x3",
																	"0x100000000000000000000000000000003"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"resource_bounds": {
																"type": "object",
																"required": [
																	"l1_gas",
																	"l2_gas"
																],
																"title": "Resource bounds",
																"description": "Resource bounds for the transaction execution",
																"properties": {
																	"l1_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L1 Gas",
																		"description": "The max amount and max price per unit of L1 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	},
																	"l2_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L2 Gas",
																		"description": "The max amount and max price per unit of L2 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	}
																}
															},
															"tip": {
																"title": "Tip",
																"description": "The tip for the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
															},
															"paymaster_data": {
																"title": "Paymaster data",
																"type": "array",
																"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"account_deployment_data": {
																"title": "Account deployment data",
																"type": "array",
																"description": "Data needed to deploy the account contract from which this transaction will be initiated",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce_data_availability_mode": {
																"title": "Nonce DA mode",
																"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															},
															"fee_data_availability_mode": {
																"title": "Fee DA mode",
																"description": "The storage domain of the account's balance from which the fee will be charged\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															}
														}
													}
												]
											},
											{
												"title": "L1 Handler Transaction",
												"description": "A call to an l1_handler on an L2 contract induced by a message from L1\n",
												"type": "object",
												"required": [
													"calldata",
													"contract_address",
													"entry_point_selector",
													"nonce",
													"type",
													"version"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"enum": [
															"0x0"
														]
													},
													"type": {
														"title": "Type",
														"type": "string",
														"enum": [
															"L1_HANDLER"
														]
													},
													"nonce": {
														"title": "Nonce",
														"description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent\n",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"contract_address": {
														"title": "Contract address",
														"description": "A contract address",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"entry_point_selector": {
														"title": "Entry point selector",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"calldata": {
														"title": "Calldata",
														"type": "array",
														"description": "The parameters passed to the function",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													}
												}
											},
											{
												"title": "Declare transaction",
												"oneOf": [
													{
														"title": "Declare Contract Transaction V0",
														"description": "Declare Contract Transaction V0",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"max_fee",
															"version",
															"signature",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x0",
																	"0x100000000000000000000000000000000"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Contract Transaction V1",
														"description": "Declare Contract Transaction V1",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"max_fee",
															"version",
															"signature",
															"nonce",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x1",
																	"0x100000000000000000000000000000001"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Transaction V2",
														"description": "Declare Contract Transaction V2",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"compiled_class_hash",
															"max_fee",
															"version",
															"signature",
															"nonce",
															"class_hash"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"compiled_class_hash": {
																"title": "Compiled class hash",
																"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"max_fee": {
																"title": "Max fee",
																"description": "The maximal fee that can be charged for including the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x2",
																	"0x100000000000000000000000000000002"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															}
														}
													},
													{
														"title": "Declare Transaction V3",
														"description": "Declare Contract Transaction V3",
														"type": "object",
														"required": [
															"type",
															"sender_address",
															"compiled_class_hash",
															"version",
															"signature",
															"nonce",
															"class_hash",
															"resource_bounds",
															"tip",
															"paymaster_data",
															"account_deployment_data",
															"nonce_data_availability_mode",
															"fee_data_availability_mode"
														],
														"properties": {
															"type": {
																"title": "Declare",
																"type": "string",
																"enum": [
																	"DECLARE"
																]
															},
															"sender_address": {
																"title": "Sender address",
																"description": "The address of the account contract sending the declaration transaction\n",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"compiled_class_hash": {
																"title": "Compiled class hash",
																"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"version": {
																"title": "Version",
																"description": "Version of the transaction scheme",
																"type": "string",
																"enum": [
																	"0x3",
																	"0x100000000000000000000000000000003"
																]
															},
															"signature": {
																"title": "Signature",
																"description": "A transaction signature",
																"type": "array",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce": {
																"title": "Nonce",
																"description": "A field element. Represented by at most 63 hex digits",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"class_hash": {
																"title": "Class hash",
																"description": "The hash of the declared class",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
															},
															"resource_bounds": {
																"type": "object",
																"required": [
																	"l1_gas",
																	"l2_gas"
																],
																"title": "Resource bounds",
																"description": "Resource bounds for the transaction execution",
																"properties": {
																	"l1_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L1 Gas",
																		"description": "The max amount and max price per unit of L1 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	},
																	"l2_gas": {
																		"type": "object",
																		"required": [
																			"max_amount",
																			"max_price_per_unit"
																		],
																		"title": "L2 Gas",
																		"description": "The max amount and max price per unit of L2 gas used in this transaction",
																		"properties": {
																			"max_amount": {
																				"title": "Max amount",
																				"description": "The max amount of the resource that can be used in the transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
																			},
																			"max_price_per_unit": {
																				"title": "Max price per unit",
																				"description": "The max price per unit of this resource for this transaction",
																				"type": "string",
																				"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
																			}
																		}
																	}
																}
															},
															"tip": {
																"title": "Tip",
																"description": "The tip for the transaction",
																"type": "string",
																"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
															},
															"paymaster_data": {
																"title": "Paymaster data",
																"type": "array",
																"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"account_deployment_data": {
																"title": "Account deployment data",
																"type": "array",
																"description": "Data needed to deploy the account contract from which this transaction will be initiated",
																"items": {
																	"title": "Field element",
																	"description": "A field element. Represented by at most 63 hex digits",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															},
															"nonce_data_availability_mode": {
																"title": "Nonce DA mode",
																"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															},
															"fee_data_availability_mode": {
																"title": "Fee DA mode",
																"description": "The storage domain of the account's balance from which the fee will be charged\n",
																"type": "string",
																"enum": [
																	"L1",
																	"L2"
																]
															}
														}
													}
												]
											},
											{
												"title": "Deploy Contract Transaction",
												"description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions\n",
												"type": "object",
												"required": [
													"version",
													"type",
													"constructor_calldata",
													"contract_address_salt",
													"class_hash"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"type": {
														"title": "Deploy",
														"type": "string",
														"enum": [
															"DEPLOY"
														]
													},
													"contract_address_salt": {
														"title": "Contract address salt",
														"description": "The salt for the address of the deployed contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"constructor_calldata": {
														"title": "Constructor calldata",
														"type": "array",
														"description": "The parameters passed to the constructor",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the deployed contract's class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											},
											{
												"title": "Deploy Account Transaction",
												"description": "Deploys an account contract",
												"type": "object",
												"required": [
													"version",
													"signature",
													"nonce",
													"type",
													"contract_address_salt",
													"constructor_calldata",
													"class_hash",
													"max_fee"
												],
												"properties": {
													"version": {
														"title": "Version",
														"description": "Version of the transaction scheme",
														"type": "string",
														"enum": [
															"0x1",
															"0x100000000000000000000000000000001"
														]
													},
													"signature": {
														"title": "Signature",
														"description": "A transaction signature",
														"type": "array",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"nonce": {
														"title": "Nonce",
														"description": "A field element. Represented by at most 63 hex digits",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"type": {
														"title": "Type",
														"type": "string",
														"enum": [
															"DEPLOY_ACCOUNT"
														]
													},
													"contract_address_salt": {
														"title": "Contract address salt",
														"description": "The salt for the address of the deployed contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"constructor_calldata": {
														"title": "Constructor calldata",
														"type": "array",
														"description": "The parameters passed to the constructor",
														"items": {
															"title": "Field element",
															"description": "A field element. Represented by at most 63 hex digits",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
														}
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the deployed contract's class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"max_fee": {
														"title": "Max fee",
														"description": "The maximal fee that can be charged for including the transaction",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										],
										"required": [
											"transaction_hash"
										],
										"properties": {
											"transaction_hash": {
												"title": "Transaction hash",
												"description": "The transaction hash, as assigned in StarkNet",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									}
								},
								"parent_hash": {
									"title": "Parent hash",
									"description": "The hash of this block's parent",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"timestamp": {
									"title": "Timestamp",
									"description": "The time in which the block was created, encoded in Unix time",
									"type": "integer",
									"minimum": 0
								},
								"sequencer_address": {
									"title": "Sequencer address",
									"description": "The StarkNet identity of the sequencer submitting this block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"l1_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 gas price",
									"description": "The price of L1 gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_data_gas_price": {
									"type": "object",
									"required": [
										"price_in_wei",
										"price_in_fri"
									],
									"title": "L1 data gas price",
									"description": "The price of L1 data gas in the block",
									"properties": {
										"price_in_fri": {
											"title": "Price in fri",
											"description": "The price of one unit of the given resource, denominated in fri (10^-18 strk)\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"price_in_wei": {
											"title": "Price in wei",
											"description": "The price of one unit of the given resource, denominated in wei",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								"l1_da_mode": {
									"title": "L1 da mode",
									"type": "string",
									"description": "Specifies whether the data of this block is published via blob data or calldata",
									"enum": [
										"BLOB",
										"CALLDATA"
									]
								},
								"starknet_version": {
									"title": "Starknet version",
									"description": "Semver of the current Starknet protocol",
									"type": "string"
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "starknet_getClass",
			"summary": "Get the contract class definition in the given block associated with the given hash",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "class_hash",
					"description": "The hash of the requested contract class",
					"required": true,
					"schema": {
						"title": "Field element",
						"description": "A field element. Represented by at most 63 hex digits",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The contract class, if found",
				"schema": {
					"title": "Starknet get class result",
					"oneOf": [
						{
							"title": "Deprecated contract class",
							"description": "The definition of a StarkNet contract class",
							"type": "object",
							"required": [
								"program",
								"entry_points_by_type"
							],
							"properties": {
								"program": {
									"title": "Program",
									"type": "string",
									"description": "A base64 representation of the compressed program code",
									"pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
								},
								"entry_points_by_type": {
									"title": "Deprecated entry points by type",
									"type": "object",
									"properties": {
										"CONSTRUCTOR": {
											"title": "Deprecated constructor",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"EXTERNAL": {
											"title": "Deprecated external",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"L1_HANDLER": {
											"title": "Deprecated L1 handler",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										}
									}
								},
								"abi": {
									"title": "Contract ABI",
									"type": "array",
									"items": {
										"title": "Contract ABI entry",
										"oneOf": [
											{
												"title": "Function ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"inputs",
													"outputs"
												],
												"properties": {
													"type": {
														"title": "Function ABI type",
														"type": "string",
														"enum": [
															"function",
															"l1_handler",
															"constructor"
														]
													},
													"name": {
														"title": "Function name",
														"description": "The function name",
														"type": "string"
													},
													"inputs": {
														"title": "Inputs",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"outputs": {
														"title": "Outputs",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"stateMutability": {
														"title": "Function state mutability",
														"type": "string",
														"enum": [
															"view"
														]
													}
												}
											},
											{
												"title": "Event ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"keys",
													"data"
												],
												"properties": {
													"type": {
														"title": "Event ABI type",
														"type": "string",
														"enum": [
															"event"
														]
													},
													"name": {
														"title": "Event name",
														"description": "The event name",
														"type": "string"
													},
													"keys": {
														"title": "Keys",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"data": {
														"title": "Data",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													}
												}
											},
											{
												"title": "Struct ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"size",
													"members"
												],
												"properties": {
													"type": {
														"title": "Struct ABI type",
														"type": "string",
														"enum": [
															"struct"
														]
													},
													"name": {
														"title": "Struct name",
														"description": "The struct name",
														"type": "string"
													},
													"size": {
														"title": "Size",
														"type": "integer",
														"minimum": 1
													},
													"members": {
														"title": "Members",
														"type": "array",
														"items": {
															"title": "Struct member",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																},
																"offset": {
																	"title": "Offset",
																	"description": "Offset of this property within the struct",
																	"type": "integer"
																}
															}
														}
													}
												}
											}
										]
									}
								}
							}
						},
						{
							"title": "Contract class",
							"type": "object",
							"required": [
								"sierra_program",
								"contract_class_version",
								"entry_points_by_type"
							],
							"properties": {
								"sierra_program": {
									"title": "Sierra program",
									"type": "array",
									"description": "The list of Sierra instructions of which the program consists",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"contract_class_version": {
									"title": "Contract class version",
									"type": "string",
									"description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0"
								},
								"entry_points_by_type": {
									"title": "Entry points by type",
									"type": "object",
									"required": [
										"CONSTRUCTOR",
										"EXTERNAL",
										"L1_HANDLER"
									],
									"properties": {
										"CONSTRUCTOR": {
											"title": "Constructor",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										},
										"EXTERNAL": {
											"title": "External",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										},
										"L1_HANDLER": {
											"title": "L1 handler",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										}
									}
								},
								"abi": {
									"title": "ABI",
									"type": "string",
									"description": "The class ABI, as supplied by the user declaring the class"
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "starknet_getClassAt",
			"summary": "Get the contract class definition in the given block at the given address",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "contract_address",
					"description": "The address of the contract whose class definition will be returned",
					"required": true,
					"schema": {
						"title": "Address",
						"description": "A contract address",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The contract class",
				"schema": {
					"title": "Starknet get class at result",
					"oneOf": [
						{
							"title": "Deprecated contract class",
							"description": "The definition of a StarkNet contract class",
							"type": "object",
							"required": [
								"program",
								"entry_points_by_type"
							],
							"properties": {
								"program": {
									"title": "Program",
									"type": "string",
									"description": "A base64 representation of the compressed program code",
									"pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$"
								},
								"entry_points_by_type": {
									"title": "Deprecated entry points by type",
									"type": "object",
									"properties": {
										"CONSTRUCTOR": {
											"title": "Deprecated constructor",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"EXTERNAL": {
											"title": "Deprecated external",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"L1_HANDLER": {
											"title": "Deprecated L1 handler",
											"type": "array",
											"items": {
												"title": "Deprecated Cairo entry point",
												"type": "object",
												"required": [
													"offset",
													"selector"
												],
												"properties": {
													"offset": {
														"title": "Offset",
														"description": "The offset of the entry point in the program",
														"type": "string",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										}
									}
								},
								"abi": {
									"title": "Contract ABI",
									"type": "array",
									"items": {
										"title": "Contract ABI entry",
										"oneOf": [
											{
												"title": "Function ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"inputs",
													"outputs"
												],
												"properties": {
													"type": {
														"title": "Function ABI type",
														"type": "string",
														"enum": [
															"function",
															"l1_handler",
															"constructor"
														]
													},
													"name": {
														"title": "Function name",
														"description": "The function name",
														"type": "string"
													},
													"inputs": {
														"title": "Inputs",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"outputs": {
														"title": "Outputs",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"stateMutability": {
														"title": "Function state mutability",
														"type": "string",
														"enum": [
															"view"
														]
													}
												}
											},
											{
												"title": "Event ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"keys",
													"data"
												],
												"properties": {
													"type": {
														"title": "Event ABI type",
														"type": "string",
														"enum": [
															"event"
														]
													},
													"name": {
														"title": "Event name",
														"description": "The event name",
														"type": "string"
													},
													"keys": {
														"title": "Keys",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													},
													"data": {
														"title": "Data",
														"type": "array",
														"items": {
															"title": "Typed parameter",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																}
															}
														}
													}
												}
											},
											{
												"title": "Struct ABI entry",
												"type": "object",
												"required": [
													"type",
													"name",
													"size",
													"members"
												],
												"properties": {
													"type": {
														"title": "Struct ABI type",
														"type": "string",
														"enum": [
															"struct"
														]
													},
													"name": {
														"title": "Struct name",
														"description": "The struct name",
														"type": "string"
													},
													"size": {
														"title": "Size",
														"type": "integer",
														"minimum": 1
													},
													"members": {
														"title": "Members",
														"type": "array",
														"items": {
															"title": "Struct member",
															"type": "object",
															"required": [
																"name",
																"type"
															],
															"properties": {
																"name": {
																	"title": "Parameter name",
																	"description": "The parameter's name",
																	"type": "string"
																},
																"type": {
																	"title": "Parameter type",
																	"description": "The parameter's type",
																	"type": "string"
																},
																"offset": {
																	"title": "Offset",
																	"description": "Offset of this property within the struct",
																	"type": "integer"
																}
															}
														}
													}
												}
											}
										]
									}
								}
							}
						},
						{
							"title": "Contract class",
							"type": "object",
							"required": [
								"sierra_program",
								"contract_class_version",
								"entry_points_by_type"
							],
							"properties": {
								"sierra_program": {
									"title": "Sierra program",
									"type": "array",
									"description": "The list of Sierra instructions of which the program consists",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"contract_class_version": {
									"title": "Contract class version",
									"type": "string",
									"description": "The version of the contract class object. Currently, the Starknet OS supports version 0.1.0"
								},
								"entry_points_by_type": {
									"title": "Entry points by type",
									"type": "object",
									"required": [
										"CONSTRUCTOR",
										"EXTERNAL",
										"L1_HANDLER"
									],
									"properties": {
										"CONSTRUCTOR": {
											"title": "Constructor",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										},
										"EXTERNAL": {
											"title": "External",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										},
										"L1_HANDLER": {
											"title": "L1 handler",
											"type": "array",
											"items": {
												"title": "Sierra entry point",
												"type": "object",
												"required": [
													"selector",
													"function_idx"
												],
												"properties": {
													"selector": {
														"title": "Selector",
														"description": "A unique identifier of the entry point (function) in the program",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"function_idx": {
														"title": "Function index",
														"description": "The index of the function in the program",
														"type": "integer"
													}
												}
											}
										}
									}
								},
								"abi": {
									"title": "ABI",
									"type": "string",
									"description": "The class ABI, as supplied by the user declaring the class"
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "starknet_getClassHashAt",
			"summary": "Get the contract class hash in the given block for the contract deployed at the given address",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "contract_address",
					"description": "The address of the contract whose class hash will be returned",
					"required": true,
					"schema": {
						"title": "Address",
						"description": "A contract address",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The class hash of the given contract",
				"schema": {
					"title": "Field element",
					"description": "A field element. Represented by at most 63 hex digits",
					"type": "string",
					"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
				}
			}
		},
		{
			"name": "starknet_getEvents",
			"summary": "Returns all events matching the given filter",
			"description": "Returns all event objects matching the conditions in the provided filter",
			"params": [
				{
					"name": "filter",
					"summary": "The conditions used to filter the returned events",
					"required": true,
					"schema": {
						"title": "Events request",
						"description": "An event filter/query",
						"type": "object",
						"required": [
							"chunk_size"
						],
						"properties": {
							"from_block": {
								"title": "From block",
								"description": "Block hash, number or tag",
								"oneOf": [
									{
										"title": "Block hash",
										"type": "object",
										"required": [
											"block_hash"
										],
										"properties": {
											"block_hash": {
												"title": "Block hash",
												"description": "The hash identifying a block",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									},
									{
										"title": "Block number",
										"type": "object",
										"required": [
											"block_number"
										],
										"properties": {
											"block_number": {
												"title": "Block number",
												"description": "The block's number (its height)",
												"type": "integer",
												"minimum": 0
											}
										}
									},
									{
										"title": "Block tag",
										"description": "A tag specifying a dynamic reference to a block",
										"type": "string",
										"enum": [
											"latest",
											"pending"
										]
									}
								]
							},
							"to_block": {
								"title": "To block",
								"description": "Block hash, number or tag",
								"oneOf": [
									{
										"title": "Block hash",
										"type": "object",
										"required": [
											"block_hash"
										],
										"properties": {
											"block_hash": {
												"title": "Block hash",
												"description": "The hash identifying a block",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									},
									{
										"title": "Block number",
										"type": "object",
										"required": [
											"block_number"
										],
										"properties": {
											"block_number": {
												"title": "Block number",
												"description": "The block's number (its height)",
												"type": "integer",
												"minimum": 0
											}
										}
									},
									{
										"title": "Block tag",
										"description": "A tag specifying a dynamic reference to a block",
										"type": "string",
										"enum": [
											"latest",
											"pending"
										]
									}
								]
							},
							"address": {
								"title": "From contract",
								"description": "A contract address",
								"type": "string",
								"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
							},
							"keys": {
								"title": "Keys",
								"description": "The values used to filter the events",
								"type": "array",
								"items": {
									"title": "Keys",
									"description": "Per key (by position), designate the possible values to be matched for events to be returned. An empty array designates 'any' value.\n",
									"type": "array",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							"continuation_token": {
								"title": "Continuation token",
								"description": "The token returned from the previous query. If no token is provided, the first page is returned.\n",
								"type": "string"
							},
							"chunk_size": {
								"title": "Chunk size",
								"type": "integer",
								"minimum": 1
							}
						}
					}
				}
			],
			"result": {
				"name": "events",
				"description": "All the event objects matching the filter",
				"schema": {
					"title": "Events chunk",
					"type": "object",
					"required": [
						"events"
					],
					"properties": {
						"events": {
							"title": "Matching Events",
							"type": "array",
							"items": {
								"title": "Emitted event",
								"description": "Event information decorated with metadata on where it was emitted. An event emitted as a result of transaction execution.\n",
								"type": "object",
								"required": [
									"data",
									"from_address",
									"keys",
									"transaction_hash"
								],
								"properties": {
									"from_address": {
										"title": "From address",
										"description": "A contract address",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									},
									"keys": {
										"title": "Keys",
										"type": "array",
										"items": {
											"title": "Field element",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									},
									"data": {
										"title": "Data",
										"type": "array",
										"items": {
											"title": "Field element",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									},
									"block_hash": {
										"title": "Block hash",
										"description": "The hash of the block in which the event was emitted",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									},
									"block_number": {
										"title": "Block number",
										"description": "The number of the block in which the event was emitted",
										"type": "integer",
										"minimum": 0
									},
									"transaction_hash": {
										"title": "Transaction hash",
										"description": "The transaction that emitted the event",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							}
						},
						"continuation_token": {
							"title": "Continuation token",
							"description": "Use this token in a subsequent query to obtain the next page. Should not appear if there are no more pages.\n",
							"type": "string"
						}
					}
				}
			}
		},
		{
			"name": "starknet_getNonce",
			"summary": "Get the nonce associated with the given address in the given block",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "contract_address",
					"description": "The address of the contract whose nonce we're seeking",
					"required": true,
					"schema": {
						"title": "Address",
						"description": "A contract address",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The contract's nonce at the requested state",
				"schema": {
					"title": "Field element",
					"description": "A field element. Represented by at most 63 hex digits",
					"type": "string",
					"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
				}
			}
		},
		{
			"name": "starknet_getStateUpdate",
			"summary": "Get the information about the result of executing the requested block",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"description": "The information about the state update of the requested block",
				"schema": {
					"title": "Starknet get state update result",
					"oneOf": [
						{
							"title": "State update",
							"type": "object",
							"required": [
								"state_diff",
								"block_hash",
								"old_root",
								"new_root"
							],
							"properties": {
								"block_hash": {
									"title": "Block hash",
									"description": "The hash identifying a block",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"old_root": {
									"title": "Old root",
									"description": "The previous global state root",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"new_root": {
									"title": "New root",
									"description": "The new global state root",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"state_diff": {
									"description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
									"type": "object",
									"required": [
										"storage_diffs",
										"deprecated_declared_classes",
										"declared_classes",
										"replaced_classes",
										"deployed_contracts",
										"nonces"
									],
									"title": "State diff",
									"properties": {
										"storage_diffs": {
											"title": "Storage diffs",
											"type": "array",
											"items": {
												"title": "Contract storage diff item",
												"type": "object",
												"required": [
													"address",
													"storage_entries"
												],
												"properties": {
													"address": {
														"title": "Address",
														"description": "The contract address for which the storage changed",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"storage_entries": {
														"title": "Storage entries",
														"description": "The changes in the storage of the contract",
														"type": "array",
														"items": {
															"title": "Storage diff item",
															"type": "object",
															"properties": {
																"key": {
																	"title": "Key",
																	"description": "The key of the changed value",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																},
																"value": {
																	"title": "Value",
																	"description": "The new value applied to the given address",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															}
														}
													}
												}
											}
										},
										"deprecated_declared_classes": {
											"title": "Deprecated declared classes",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"declared_classes": {
											"title": "Declared classes",
											"type": "array",
											"items": {
												"title": "New classes",
												"type": "object",
												"description": "The declared class hash and compiled class hash",
												"properties": {
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the declared class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"compiled_class_hash": {
														"title": "Compiled class hash",
														"description": "The Cairo assembly hash corresponding to the declared class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"deployed_contracts": {
											"title": "Deployed contracts",
											"type": "array",
											"items": {
												"title": "Deployed contract item",
												"type": "object",
												"required": [
													"address",
													"class_hash"
												],
												"properties": {
													"address": {
														"title": "Address",
														"description": "The address of the contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the contract code",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"replaced_classes": {
											"title": "Replaced classes",
											"type": "array",
											"items": {
												"title": "Replaced class",
												"type": "object",
												"description": "The list of contracts whose class was replaced",
												"properties": {
													"contract_address": {
														"title": "Contract address",
														"description": "The address of the contract whose class was replaced",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The new class hash",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"nonces": {
											"title": "Nonces",
											"type": "array",
											"items": {
												"title": "Nonce update",
												"type": "object",
												"description": "The updated nonce per contract address",
												"properties": {
													"contract_address": {
														"title": "Contract address",
														"description": "The address of the contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"nonce": {
														"title": "Nonce",
														"description": "The nonce for the given address at the end of the block",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										}
									}
								}
							}
						},
						{
							"title": "Pending state update",
							"description": "Pending state update",
							"type": "object",
							"required": [
								"old_root",
								"state_diff"
							],
							"additionalProperties": false,
							"properties": {
								"old_root": {
									"title": "Old root",
									"description": "The previous global state root",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"state_diff": {
									"description": "The change in state applied in this block, given as a mapping of addresses to the new values and/or new contracts",
									"type": "object",
									"required": [
										"storage_diffs",
										"deprecated_declared_classes",
										"declared_classes",
										"replaced_classes",
										"deployed_contracts",
										"nonces"
									],
									"title": "State diff",
									"properties": {
										"storage_diffs": {
											"title": "Storage diffs",
											"type": "array",
											"items": {
												"title": "Contract storage diff item",
												"type": "object",
												"required": [
													"address",
													"storage_entries"
												],
												"properties": {
													"address": {
														"title": "Address",
														"description": "The contract address for which the storage changed",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"storage_entries": {
														"title": "Storage entries",
														"description": "The changes in the storage of the contract",
														"type": "array",
														"items": {
															"title": "Storage diff item",
															"type": "object",
															"properties": {
																"key": {
																	"title": "Key",
																	"description": "The key of the changed value",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																},
																"value": {
																	"title": "Value",
																	"description": "The new value applied to the given address",
																	"type": "string",
																	"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
																}
															}
														}
													}
												}
											}
										},
										"deprecated_declared_classes": {
											"title": "Deprecated declared classes",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"declared_classes": {
											"title": "Declared classes",
											"type": "array",
											"items": {
												"title": "New classes",
												"type": "object",
												"description": "The declared class hash and compiled class hash",
												"properties": {
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the declared class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"compiled_class_hash": {
														"title": "Compiled class hash",
														"description": "The Cairo assembly hash corresponding to the declared class",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"deployed_contracts": {
											"title": "Deployed contracts",
											"type": "array",
											"items": {
												"title": "Deployed contract item",
												"type": "object",
												"required": [
													"address",
													"class_hash"
												],
												"properties": {
													"address": {
														"title": "Address",
														"description": "The address of the contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The hash of the contract code",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"replaced_classes": {
											"title": "Replaced classes",
											"type": "array",
											"items": {
												"title": "Replaced class",
												"type": "object",
												"description": "The list of contracts whose class was replaced",
												"properties": {
													"contract_address": {
														"title": "Contract address",
														"description": "The address of the contract whose class was replaced",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"class_hash": {
														"title": "Class hash",
														"description": "The new class hash",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										},
										"nonces": {
											"title": "Nonces",
											"type": "array",
											"items": {
												"title": "Nonce update",
												"type": "object",
												"description": "The updated nonce per contract address",
												"properties": {
													"contract_address": {
														"title": "Contract address",
														"description": "The address of the contract",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													},
													"nonce": {
														"title": "Nonce",
														"description": "The nonce for the given address at the end of the block",
														"type": "string",
														"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
													}
												}
											}
										}
									}
								}
							}
						}
					]
				}
			}
		},
		{
			"name": "starknet_getStorageAt",
			"summary": "Get the value of the storage at the given address and key",
			"params": [
				{
					"name": "contract_address",
					"summary": "The address of the contract to read from",
					"description": "The address of the contract to read from",
					"required": true,
					"schema": {
						"title": "Address",
						"description": "A contract address",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				},
				{
					"name": "key",
					"summary": "The key to the storage value for the given contract",
					"description": "The key to the storage value for the given contract",
					"required": true,
					"schema": {
						"title": "Storage key",
						"description": "A storage key. Represented as up to 62 hex digits, 3 bits, and 5 leading zeroes.\n",
						"type": "string",
						"pattern": "^0x(0|[0-7]{1}[a-fA-F0-9]{0,62})$"
					}
				},
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				}
			],
			"result": {
				"name": "result",
				"summary": "The value at the given key for the given contract.",
				"description": "The value at the given key for the given contract. 0 if no value is found",
				"schema": {
					"title": "Field element",
					"description": "A field element. Represented by at most 63 hex digits",
					"type": "string",
					"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
				}
			}
		},
		{
			"name": "starknet_getTransactionByBlockIdAndIndex",
			"summary": "Get the details of a transaction by a given block id and index",
			"description": "Get the details of the transaction given by the identified block and index in that block. If no transaction is found, null is returned.\n",
			"params": [
				{
					"name": "block_id",
					"description": "The hash of the requested block, or number (height) of the requested block, or a block tag\n",
					"required": true,
					"schema": {
						"title": "Block id",
						"description": "Block hash, number or tag",
						"oneOf": [
							{
								"title": "Block hash",
								"type": "object",
								"required": [
									"block_hash"
								],
								"properties": {
									"block_hash": {
										"title": "Block hash",
										"description": "The hash identifying a block",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							},
							{
								"title": "Block number",
								"type": "object",
								"required": [
									"block_number"
								],
								"properties": {
									"block_number": {
										"title": "Block number",
										"description": "The block's number (its height)",
										"type": "integer",
										"minimum": 0
									}
								}
							},
							{
								"title": "Block tag",
								"description": "A tag specifying a dynamic reference to a block",
								"type": "string",
								"enum": [
									"latest",
									"pending"
								]
							}
						]
					}
				},
				{
					"name": "index",
					"summary": "The index in the block to search for the transaction",
					"required": true,
					"schema": {
						"title": "Index",
						"type": "integer",
						"minimum": 0
					}
				}
			],
			"result": {
				"name": "transactionResult",
				"schema": {
					"title": "Transaction",
					"description": "The transaction schema, as it appears inside a block",
					"oneOf": [
						{
							"title": "Invoke transaction",
							"description": "Initiate a transaction from an account",
							"oneOf": [
								{
									"title": "Invoke transaction V0",
									"description": "Invokes a specific function in the desired contract (not necessarily an account)",
									"type": "object",
									"required": [
										"type",
										"contract_address",
										"entry_point_selector",
										"calldata",
										"max_fee",
										"version",
										"signature"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x0",
												"0x100000000000000000000000000000000"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"contract_address": {
											"title": "Contract address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"entry_point_selector": {
											"title": "Entry point selector",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The parameters passed to the function",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									}
								},
								{
									"title": "Invoke transaction V1",
									"description": "Initiates a transaction from a given account",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"calldata",
										"max_fee",
										"version",
										"signature",
										"nonce"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x1",
												"0x100000000000000000000000000000001"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Invoke transaction V3",
									"description": "Initiates a transaction from a given account",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"calldata",
										"version",
										"signature",
										"nonce",
										"resource_bounds",
										"tip",
										"paymaster_data",
										"account_deployment_data",
										"nonce_data_availability_mode",
										"fee_data_availability_mode"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x3",
												"0x100000000000000000000000000000003"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"resource_bounds": {
											"type": "object",
											"required": [
												"l1_gas",
												"l2_gas"
											],
											"title": "Resource bounds",
											"description": "Resource bounds for the transaction execution",
											"properties": {
												"l1_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L1 Gas",
													"description": "The max amount and max price per unit of L1 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												},
												"l2_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L2 Gas",
													"description": "The max amount and max price per unit of L2 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												}
											}
										},
										"tip": {
											"title": "Tip",
											"description": "The tip for the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
										},
										"paymaster_data": {
											"title": "Paymaster data",
											"type": "array",
											"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"account_deployment_data": {
											"title": "Account deployment data",
											"type": "array",
											"description": "Data needed to deploy the account contract from which this transaction will be initiated",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce_data_availability_mode": {
											"title": "Nonce DA mode",
											"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										},
										"fee_data_availability_mode": {
											"title": "Fee DA mode",
											"description": "The storage domain of the account's balance from which the fee will be charged\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										}
									}
								}
							]
						},
						{
							"title": "L1 Handler Transaction",
							"description": "A call to an l1_handler on an L2 contract induced by a message from L1\n",
							"type": "object",
							"required": [
								"calldata",
								"contract_address",
								"entry_point_selector",
								"nonce",
								"type",
								"version"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"enum": [
										"0x0"
									]
								},
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"L1_HANDLER"
									]
								},
								"nonce": {
									"title": "Nonce",
									"description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent\n",
									"type": "string",
									"pattern": "^0x[a-fA-F0-9]+$"
								},
								"contract_address": {
									"title": "Contract address",
									"description": "A contract address",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"entry_point_selector": {
									"title": "Entry point selector",
									"description": "A field element. Represented by at most 63 hex digits",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"calldata": {
									"title": "Calldata",
									"type": "array",
									"description": "The parameters passed to the function",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							}
						},
						{
							"title": "Declare transaction",
							"oneOf": [
								{
									"title": "Declare Contract Transaction V0",
									"description": "Declare Contract Transaction V0",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"max_fee",
										"version",
										"signature",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x0",
												"0x100000000000000000000000000000000"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Contract Transaction V1",
									"description": "Declare Contract Transaction V1",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"max_fee",
										"version",
										"signature",
										"nonce",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x1",
												"0x100000000000000000000000000000001"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Transaction V2",
									"description": "Declare Contract Transaction V2",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"compiled_class_hash",
										"max_fee",
										"version",
										"signature",
										"nonce",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"compiled_class_hash": {
											"title": "Compiled class hash",
											"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x2",
												"0x100000000000000000000000000000002"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Transaction V3",
									"description": "Declare Contract Transaction V3",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"compiled_class_hash",
										"version",
										"signature",
										"nonce",
										"class_hash",
										"resource_bounds",
										"tip",
										"paymaster_data",
										"account_deployment_data",
										"nonce_data_availability_mode",
										"fee_data_availability_mode"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"compiled_class_hash": {
											"title": "Compiled class hash",
											"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x3",
												"0x100000000000000000000000000000003"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"resource_bounds": {
											"type": "object",
											"required": [
												"l1_gas",
												"l2_gas"
											],
											"title": "Resource bounds",
											"description": "Resource bounds for the transaction execution",
											"properties": {
												"l1_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L1 Gas",
													"description": "The max amount and max price per unit of L1 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												},
												"l2_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L2 Gas",
													"description": "The max amount and max price per unit of L2 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												}
											}
										},
										"tip": {
											"title": "Tip",
											"description": "The tip for the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
										},
										"paymaster_data": {
											"title": "Paymaster data",
											"type": "array",
											"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"account_deployment_data": {
											"title": "Account deployment data",
											"type": "array",
											"description": "Data needed to deploy the account contract from which this transaction will be initiated",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce_data_availability_mode": {
											"title": "Nonce DA mode",
											"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										},
										"fee_data_availability_mode": {
											"title": "Fee DA mode",
											"description": "The storage domain of the account's balance from which the fee will be charged\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										}
									}
								}
							]
						},
						{
							"title": "Deploy Contract Transaction",
							"description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions\n",
							"type": "object",
							"required": [
								"version",
								"type",
								"constructor_calldata",
								"contract_address_salt",
								"class_hash"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"type": {
									"title": "Deploy",
									"type": "string",
									"enum": [
										"DEPLOY"
									]
								},
								"contract_address_salt": {
									"title": "Contract address salt",
									"description": "The salt for the address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"constructor_calldata": {
									"title": "Constructor calldata",
									"type": "array",
									"description": "The parameters passed to the constructor",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"class_hash": {
									"title": "Class hash",
									"description": "The hash of the deployed contract's class",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						},
						{
							"title": "Deploy Account Transaction",
							"description": "Deploys an account contract",
							"type": "object",
							"required": [
								"version",
								"signature",
								"nonce",
								"type",
								"contract_address_salt",
								"constructor_calldata",
								"class_hash",
								"max_fee"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"enum": [
										"0x1",
										"0x100000000000000000000000000000001"
									]
								},
								"signature": {
									"title": "Signature",
									"description": "A transaction signature",
									"type": "array",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"nonce": {
									"title": "Nonce",
									"description": "A field element. Represented by at most 63 hex digits",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"DEPLOY_ACCOUNT"
									]
								},
								"contract_address_salt": {
									"title": "Contract address salt",
									"description": "The salt for the address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"constructor_calldata": {
									"title": "Constructor calldata",
									"type": "array",
									"description": "The parameters passed to the constructor",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"class_hash": {
									"title": "Class hash",
									"description": "The hash of the deployed contract's class",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"max_fee": {
									"title": "Max fee",
									"description": "The maximal fee that can be charged for including the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						}
					],
					"type": "object",
					"required": [
						"transaction_hash"
					],
					"properties": {
						"transaction_hash": {
							"title": "transaction hash",
							"description": "The transaction hash, as assigned in StarkNet",
							"type": "string",
							"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
						}
					}
				}
			}
		},
		{
			"name": "starknet_getTransactionByHash",
			"summary": "Get the details and status of a submitted transaction",
			"paramStructure": "by-name",
			"params": [
				{
					"name": "transaction_hash",
					"summary": "The hash of the requested transaction",
					"required": true,
					"schema": {
						"title": "Transaction hash",
						"description": "The transaction hash, as assigned in StarkNet",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"schema": {
					"title": "Transaction",
					"description": "The transaction schema, as it appears inside a block",
					"oneOf": [
						{
							"title": "Invoke transaction",
							"description": "Initiate a transaction from an account",
							"oneOf": [
								{
									"title": "Invoke transaction V0",
									"description": "Invokes a specific function in the desired contract (not necessarily an account)",
									"type": "object",
									"required": [
										"type",
										"contract_address",
										"entry_point_selector",
										"calldata",
										"max_fee",
										"version",
										"signature"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x0",
												"0x100000000000000000000000000000000"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"contract_address": {
											"title": "Contract address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"entry_point_selector": {
											"title": "Entry point selector",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The parameters passed to the function",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										}
									}
								},
								{
									"title": "Invoke transaction V1",
									"description": "Initiates a transaction from a given account",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"calldata",
										"max_fee",
										"version",
										"signature",
										"nonce"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x1",
												"0x100000000000000000000000000000001"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Invoke transaction V3",
									"description": "Initiates a transaction from a given account",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"calldata",
										"version",
										"signature",
										"nonce",
										"resource_bounds",
										"tip",
										"paymaster_data",
										"account_deployment_data",
										"nonce_data_availability_mode",
										"fee_data_availability_mode"
									],
									"properties": {
										"type": {
											"title": "Type",
											"type": "string",
											"enum": [
												"INVOKE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "A contract address",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"calldata": {
											"title": "Calldata",
											"type": "array",
											"description": "The data expected by the account's `execute` function (in most use cases, this includes the called contract address and a function selector)\n",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x3",
												"0x100000000000000000000000000000003"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"resource_bounds": {
											"type": "object",
											"required": [
												"l1_gas",
												"l2_gas"
											],
											"title": "Resource bounds",
											"description": "Resource bounds for the transaction execution",
											"properties": {
												"l1_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L1 Gas",
													"description": "The max amount and max price per unit of L1 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												},
												"l2_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L2 Gas",
													"description": "The max amount and max price per unit of L2 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												}
											}
										},
										"tip": {
											"title": "Tip",
											"description": "The tip for the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
										},
										"paymaster_data": {
											"title": "Paymaster data",
											"type": "array",
											"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"account_deployment_data": {
											"title": "Account deployment data",
											"type": "array",
											"description": "Data needed to deploy the account contract from which this transaction will be initiated",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce_data_availability_mode": {
											"title": "Nonce DA mode",
											"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										},
										"fee_data_availability_mode": {
											"title": "Fee DA mode",
											"description": "The storage domain of the account's balance from which the fee will be charged\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										}
									}
								}
							]
						},
						{
							"title": "L1 Handler Transaction",
							"description": "A call to an l1_handler on an L2 contract induced by a message from L1\n",
							"type": "object",
							"required": [
								"calldata",
								"contract_address",
								"entry_point_selector",
								"nonce",
								"type",
								"version"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"enum": [
										"0x0"
									]
								},
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"L1_HANDLER"
									]
								},
								"nonce": {
									"title": "Nonce",
									"description": "The L1->L2 message nonce field of the SN Core L1 contract at the time the transaction was sent\n",
									"type": "string",
									"pattern": "^0x[a-fA-F0-9]+$"
								},
								"contract_address": {
									"title": "Contract address",
									"description": "A contract address",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"entry_point_selector": {
									"title": "Entry point selector",
									"description": "A field element. Represented by at most 63 hex digits",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"calldata": {
									"title": "Calldata",
									"type": "array",
									"description": "The parameters passed to the function",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								}
							}
						},
						{
							"title": "Declare transaction",
							"oneOf": [
								{
									"title": "Declare Contract Transaction V0",
									"description": "Declare Contract Transaction V0",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"max_fee",
										"version",
										"signature",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x0",
												"0x100000000000000000000000000000000"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Contract Transaction V1",
									"description": "Declare Contract Transaction V1",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"max_fee",
										"version",
										"signature",
										"nonce",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x1",
												"0x100000000000000000000000000000001"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Transaction V2",
									"description": "Declare Contract Transaction V2",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"compiled_class_hash",
										"max_fee",
										"version",
										"signature",
										"nonce",
										"class_hash"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"compiled_class_hash": {
											"title": "Compiled class hash",
											"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"max_fee": {
											"title": "Max fee",
											"description": "The maximal fee that can be charged for including the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x2",
												"0x100000000000000000000000000000002"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										}
									}
								},
								{
									"title": "Declare Transaction V3",
									"description": "Declare Contract Transaction V3",
									"type": "object",
									"required": [
										"type",
										"sender_address",
										"compiled_class_hash",
										"version",
										"signature",
										"nonce",
										"class_hash",
										"resource_bounds",
										"tip",
										"paymaster_data",
										"account_deployment_data",
										"nonce_data_availability_mode",
										"fee_data_availability_mode"
									],
									"properties": {
										"type": {
											"title": "Declare",
											"type": "string",
											"enum": [
												"DECLARE"
											]
										},
										"sender_address": {
											"title": "Sender address",
											"description": "The address of the account contract sending the declaration transaction\n",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"compiled_class_hash": {
											"title": "Compiled class hash",
											"description": "The hash of the Cairo assembly resulting from the Sierra compilation",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"version": {
											"title": "Version",
											"description": "Version of the transaction scheme",
											"type": "string",
											"enum": [
												"0x3",
												"0x100000000000000000000000000000003"
											]
										},
										"signature": {
											"title": "Signature",
											"description": "A transaction signature",
											"type": "array",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce": {
											"title": "Nonce",
											"description": "A field element. Represented by at most 63 hex digits",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"class_hash": {
											"title": "Class hash",
											"description": "The hash of the declared class",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"resource_bounds": {
											"type": "object",
											"required": [
												"l1_gas",
												"l2_gas"
											],
											"title": "Resource bounds",
											"description": "Resource bounds for the transaction execution",
											"properties": {
												"l1_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L1 Gas",
													"description": "The max amount and max price per unit of L1 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												},
												"l2_gas": {
													"type": "object",
													"required": [
														"max_amount",
														"max_price_per_unit"
													],
													"title": "L2 Gas",
													"description": "The max amount and max price per unit of L2 gas used in this transaction",
													"properties": {
														"max_amount": {
															"title": "Max amount",
															"description": "The max amount of the resource that can be used in the transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
														},
														"max_price_per_unit": {
															"title": "Max price per unit",
															"description": "The max price per unit of this resource for this transaction",
															"type": "string",
															"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,31})$"
														}
													}
												}
											}
										},
										"tip": {
											"title": "Tip",
											"description": "The tip for the transaction",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,15})$"
										},
										"paymaster_data": {
											"title": "Paymaster data",
											"type": "array",
											"description": "Data needed to allow the paymaster to pay for the transaction in native tokens",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"account_deployment_data": {
											"title": "Account deployment data",
											"type": "array",
											"description": "Data needed to deploy the account contract from which this transaction will be initiated",
											"items": {
												"title": "Field element",
												"description": "A field element. Represented by at most 63 hex digits",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											}
										},
										"nonce_data_availability_mode": {
											"title": "Nonce DA mode",
											"description": "The storage domain of the account's nonce (an account has a nonce per DA mode)\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										},
										"fee_data_availability_mode": {
											"title": "Fee DA mode",
											"description": "The storage domain of the account's balance from which the fee will be charged\n",
											"type": "string",
											"enum": [
												"L1",
												"L2"
											]
										}
									}
								}
							]
						},
						{
							"title": "Deploy Contract Transaction",
							"description": "The structure of a deploy transaction. Note that this transaction type is deprecated and will no longer be supported in future versions\n",
							"type": "object",
							"required": [
								"version",
								"type",
								"constructor_calldata",
								"contract_address_salt",
								"class_hash"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"type": {
									"title": "Deploy",
									"type": "string",
									"enum": [
										"DEPLOY"
									]
								},
								"contract_address_salt": {
									"title": "Contract address salt",
									"description": "The salt for the address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"constructor_calldata": {
									"title": "Constructor calldata",
									"type": "array",
									"description": "The parameters passed to the constructor",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"class_hash": {
									"title": "Class hash",
									"description": "The hash of the deployed contract's class",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						},
						{
							"title": "Deploy Account Transaction",
							"description": "Deploys an account contract",
							"type": "object",
							"required": [
								"version",
								"signature",
								"nonce",
								"type",
								"contract_address_salt",
								"constructor_calldata",
								"class_hash",
								"max_fee"
							],
							"properties": {
								"version": {
									"title": "Version",
									"description": "Version of the transaction scheme",
									"type": "string",
									"enum": [
										"0x1",
										"0x100000000000000000000000000000001"
									]
								},
								"signature": {
									"title": "Signature",
									"description": "A transaction signature",
									"type": "array",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"nonce": {
									"title": "Nonce",
									"description": "A field element. Represented by at most 63 hex digits",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"DEPLOY_ACCOUNT"
									]
								},
								"contract_address_salt": {
									"title": "Contract address salt",
									"description": "The salt for the address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"constructor_calldata": {
									"title": "Constructor calldata",
									"type": "array",
									"description": "The parameters passed to the constructor",
									"items": {
										"title": "Field element",
										"description": "A field element. Represented by at most 63 hex digits",
										"type": "string",
										"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
									}
								},
								"class_hash": {
									"title": "Class hash",
									"description": "The hash of the deployed contract's class",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"max_fee": {
									"title": "Max fee",
									"description": "The maximal fee that can be charged for including the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						}
					],
					"type": "object",
					"required": [
						"transaction_hash"
					],
					"properties": {
						"transaction_hash": {
							"title": "transaction hash",
							"description": "The transaction hash, as assigned in StarkNet",
							"type": "string",
							"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
						}
					}
				}
			}
		},
		{
			"name": "starknet_getTransactionReceipt",
			"summary": "Get the transaction receipt by the transaction hash",
			"paramStructure": "by-name",
			"params": [
				{
					"name": "transaction_hash",
					"summary": "The hash of the requested transaction",
					"required": true,
					"schema": {
						"title": "Transaction hash",
						"description": "The transaction hash, as assigned in StarkNet",
						"type": "string",
						"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
					}
				}
			],
			"result": {
				"name": "result",
				"schema": {
					"title": "Transaction receipt with block info",
					"oneOf": [
						{
							"title": "Invoke Transaction Receipt",
							"type": "object",
							"required": [
								"actual_fee",
								"events",
								"execution_resources",
								"finality_status",
								"messages_sent",
								"transaction_hash",
								"type"
							],
							"description": "Common properties for a transaction receipt",
							"oneOf": [
								{
									"title": "Successful Common receipt properties",
									"description": "Common properties for a transaction receipt that was executed successfully",
									"type": "object",
									"required": [
										"execution_status"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"SUCCEEDED"
											],
											"description": "The execution status of the transaction"
										}
									}
								},
								{
									"title": "Reverted Common receipt properties",
									"description": "Common properties for a transaction receipt that was reverted",
									"type": "object",
									"required": [
										"execution_status",
										"revert_reason"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"REVERTED"
											],
											"description": "The execution status of the transaction"
										},
										"revert_reason": {
											"title": "Revert reason",
											"description": "The revert reason for the failed execution",
											"type": "string"
										}
									}
								}
							],
							"properties": {
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"INVOKE"
									]
								},
								"transaction_hash": {
									"title": "Transaction hash",
									"description": "The hash identifying the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"actual_fee": {
									"title": "Actual fee",
									"description": "The fee that was charged by the sequencer",
									"type": "object",
									"required": [
										"amount",
										"unit"
									],
									"properties": {
										"amount": {
											"title": "Amount",
											"description": "Amount paid",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"unit": {
											"title": "Fee unit",
											"type": "string",
											"enum": [
												"WEI",
												"FRI"
											],
											"description": "Units in which the fee is given"
										}
									}
								},
								"finality_status": {
									"title": "Finality status",
									"description": "Finality status of the transaction",
									"type": "string",
									"enum": [
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1"
									]
								},
								"messages_sent": {
									"title": "Messages sent",
									"type": "array",
									"items": {
										"title": "Message to L1",
										"type": "object",
										"required": [
											"from_address",
											"to_address",
											"payload"
										],
										"properties": {
											"from_address": {
												"title": "Field element",
												"description": "The address of the L2 contract sending the message",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"to_address": {
												"title": "To address",
												"description": "The target L1 address the message is sent to",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"payload": {
												"title": "Payload",
												"description": "The payload of the message",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"events": {
									"title": "Events",
									"description": "The events emitted as part of this transaction",
									"type": "array",
									"items": {
										"title": "Event",
										"description": "A StarkNet event",
										"type": "object",
										"required": [
											"data",
											"from_address",
											"keys"
										],
										"properties": {
											"from_address": {
												"title": "From address",
												"description": "A contract address",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"keys": {
												"title": "Keys",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											},
											"data": {
												"title": "Data",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"execution_resources": {
									"type": "object",
									"title": "Execution resources",
									"description": "The resources consumed by the transaction",
									"required": [
										"data_availability",
										"steps"
									],
									"properties": {
										"steps": {
											"title": "Steps",
											"description": "The number of Cairo steps used",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"memory_holes": {
											"title": "Memory holes",
											"description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"range_check_builtin_applications": {
											"title": "Range check applications",
											"description": "The number of RANGE_CHECK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"pedersen_builtin_applications": {
											"title": "Pedersen applications",
											"description": "The number of Pedersen builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"poseidon_builtin_applications": {
											"title": "Poseidon applications",
											"description": "The number of Poseidon builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ec_op_builtin_applications": {
											"title": "EC_OP applications",
											"description": "The number of EC_OP builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ecdsa_builtin_applications": {
											"title": "ECDSA applications",
											"description": "The number of ECDSA builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"bitwise_builtin_applications": {
											"title": "BITWISE applications",
											"description": "The number of BITWISE builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"keccak_builtin_applications": {
											"title": "Keccak applications",
											"description": "The number of KECCAK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"segment_arena_builtin": {
											"title": "Segment arena",
											"description": "The number of accesses to the segment arena",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"data_availability": {
											"type": "object",
											"required": [
												"l1_gas",
												"l1_data_gas"
											],
											"properties": {
												"l1_gas": {
													"title": "L1 Gas",
													"description": "The gas consumed by this transaction's data, 0 if it uses data gas for DA\n",
													"type": "integer"
												},
												"l1_data_gas": {
													"title": "L1 Data Gas",
													"description": "The data gas consumed by this transaction's data, 0 if it uses gas for DA\n",
													"type": "integer"
												}
											}
										}
									}
								}
							}
						},
						{
							"title": "L1 Handler Transaction Receipt",
							"description": "Receipt for L1 handler transaction",
							"type": "object",
							"required": [
								"actual_fee",
								"events",
								"execution_resources",
								"finality_status",
								"message_hash",
								"messages_sent",
								"transaction_hash",
								"type"
							],
							"oneOf": [
								{
									"title": "Successful Common receipt properties",
									"description": "Common properties for a transaction receipt that was executed successfully",
									"type": "object",
									"required": [
										"execution_status"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"SUCCEEDED"
											],
											"description": "The execution status of the transaction"
										}
									}
								},
								{
									"title": "Reverted Common receipt properties",
									"description": "Common properties for a transaction receipt that was reverted",
									"type": "object",
									"required": [
										"execution_status",
										"revert_reason"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"REVERTED"
											],
											"description": "The execution status of the transaction"
										},
										"revert_reason": {
											"title": "Revert reason",
											"description": "The revert reason for the failed execution",
											"type": "string"
										}
									}
								}
							],
							"properties": {
								"type": {
									"title": "Type",
									"type": "string",
									"enum": [
										"L1_HANDLER"
									]
								},
								"message_hash": {
									"title": "Message hash",
									"description": "The message hash as it appears on the L1 core contract",
									"type": "string",
									"pattern": "^0x[a-fA-F0-9]+$"
								},
								"transaction_hash": {
									"title": "Transaction hash",
									"description": "The hash identifying the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"actual_fee": {
									"title": "Actual fee",
									"description": "The fee that was charged by the sequencer",
									"type": "object",
									"required": [
										"amount",
										"unit"
									],
									"properties": {
										"amount": {
											"title": "Amount",
											"description": "Amount paid",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"unit": {
											"title": "Fee unit",
											"type": "string",
											"enum": [
												"WEI",
												"FRI"
											],
											"description": "Units in which the fee is given"
										}
									}
								},
								"finality_status": {
									"title": "Finality status",
									"description": "Finality status of the transaction",
									"type": "string",
									"enum": [
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1"
									]
								},
								"messages_sent": {
									"title": "Messages sent",
									"type": "array",
									"items": {
										"title": "Message to L1",
										"type": "object",
										"required": [
											"from_address",
											"to_address",
											"payload"
										],
										"properties": {
											"from_address": {
												"title": "Field element",
												"description": "The address of the L2 contract sending the message",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"to_address": {
												"title": "To address",
												"description": "The target L1 address the message is sent to",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"payload": {
												"title": "Payload",
												"description": "The payload of the message",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"events": {
									"title": "Events",
									"description": "The events emitted as part of this transaction",
									"type": "array",
									"items": {
										"title": "Event",
										"description": "A StarkNet event",
										"type": "object",
										"required": [
											"data",
											"from_address",
											"keys"
										],
										"properties": {
											"from_address": {
												"title": "From address",
												"description": "A contract address",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"keys": {
												"title": "Keys",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											},
											"data": {
												"title": "Data",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"execution_resources": {
									"type": "object",
									"title": "Execution resources",
									"description": "The resources consumed by the transaction",
									"required": [
										"data_availability",
										"steps"
									],
									"properties": {
										"steps": {
											"title": "Steps",
											"description": "The number of Cairo steps used",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"memory_holes": {
											"title": "Memory holes",
											"description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"range_check_builtin_applications": {
											"title": "Range check applications",
											"description": "The number of RANGE_CHECK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"pedersen_builtin_applications": {
											"title": "Pedersen applications",
											"description": "The number of Pedersen builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"poseidon_builtin_applications": {
											"title": "Poseidon applications",
											"description": "The number of Poseidon builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ec_op_builtin_applications": {
											"title": "EC_OP applications",
											"description": "The number of EC_OP builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ecdsa_builtin_applications": {
											"title": "ECDSA applications",
											"description": "The number of ECDSA builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"bitwise_builtin_applications": {
											"title": "BITWISE applications",
											"description": "The number of BITWISE builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"keccak_builtin_applications": {
											"title": "Keccak applications",
											"description": "The number of KECCAK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"segment_arena_builtin": {
											"title": "Segment arena",
											"description": "The number of accesses to the segment arena",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"data_availability": {
											"type": "object",
											"required": [
												"l1_gas",
												"l1_data_gas"
											],
											"properties": {
												"l1_gas": {
													"title": "L1 Gas",
													"description": "The gas consumed by this transaction's data, 0 if it uses data gas for DA\n",
													"type": "integer"
												},
												"l1_data_gas": {
													"title": "L1 Data Gas",
													"description": "The data gas consumed by this transaction's data, 0 if it uses gas for DA\n",
													"type": "integer"
												}
											}
										}
									}
								}
							}
						},
						{
							"title": "Declare Transaction Receipt",
							"type": "object",
							"required": [
								"actual_fee",
								"events",
								"execution_resources",
								"finality_status",
								"messages_sent",
								"transaction_hash",
								"type"
							],
							"description": "Common properties for a transaction receipt",
							"oneOf": [
								{
									"title": "Successful Common receipt properties",
									"description": "Common properties for a transaction receipt that was executed successfully",
									"type": "object",
									"required": [
										"execution_status"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"SUCCEEDED"
											],
											"description": "The execution status of the transaction"
										}
									}
								},
								{
									"title": "Reverted Common receipt properties",
									"description": "Common properties for a transaction receipt that was reverted",
									"type": "object",
									"required": [
										"execution_status",
										"revert_reason"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"REVERTED"
											],
											"description": "The execution status of the transaction"
										},
										"revert_reason": {
											"title": "Revert reason",
											"description": "The revert reason for the failed execution",
											"type": "string"
										}
									}
								}
							],
							"properties": {
								"type": {
									"title": "Declare",
									"type": "string",
									"enum": [
										"DECLARE"
									]
								},
								"transaction_hash": {
									"title": "Transaction hash",
									"description": "The hash identifying the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"actual_fee": {
									"title": "Actual fee",
									"description": "The fee that was charged by the sequencer",
									"type": "object",
									"required": [
										"amount",
										"unit"
									],
									"properties": {
										"amount": {
											"title": "Amount",
											"description": "Amount paid",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"unit": {
											"title": "Fee unit",
											"type": "string",
											"enum": [
												"WEI",
												"FRI"
											],
											"description": "Units in which the fee is given"
										}
									}
								},
								"finality_status": {
									"title": "Finality status",
									"description": "Finality status of the transaction",
									"type": "string",
									"enum": [
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1"
									]
								},
								"messages_sent": {
									"title": "Messages sent",
									"type": "array",
									"items": {
										"title": "Message to L1",
										"type": "object",
										"required": [
											"from_address",
											"to_address",
											"payload"
										],
										"properties": {
											"from_address": {
												"title": "Field element",
												"description": "The address of the L2 contract sending the message",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"to_address": {
												"title": "To address",
												"description": "The target L1 address the message is sent to",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"payload": {
												"title": "Payload",
												"description": "The payload of the message",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"events": {
									"title": "Events",
									"description": "The events emitted as part of this transaction",
									"type": "array",
									"items": {
										"title": "Event",
										"description": "A StarkNet event",
										"type": "object",
										"required": [
											"data",
											"from_address",
											"keys"
										],
										"properties": {
											"from_address": {
												"title": "From address",
												"description": "A contract address",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"keys": {
												"title": "Keys",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											},
											"data": {
												"title": "Data",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"execution_resources": {
									"type": "object",
									"title": "Execution resources",
									"description": "The resources consumed by the transaction",
									"required": [
										"data_availability",
										"steps"
									],
									"properties": {
										"steps": {
											"title": "Steps",
											"description": "The number of Cairo steps used",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"memory_holes": {
											"title": "Memory holes",
											"description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"range_check_builtin_applications": {
											"title": "Range check applications",
											"description": "The number of RANGE_CHECK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"pedersen_builtin_applications": {
											"title": "Pedersen applications",
											"description": "The number of Pedersen builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"poseidon_builtin_applications": {
											"title": "Poseidon applications",
											"description": "The number of Poseidon builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ec_op_builtin_applications": {
											"title": "EC_OP applications",
											"description": "The number of EC_OP builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ecdsa_builtin_applications": {
											"title": "ECDSA applications",
											"description": "The number of ECDSA builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"bitwise_builtin_applications": {
											"title": "BITWISE applications",
											"description": "The number of BITWISE builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"keccak_builtin_applications": {
											"title": "Keccak applications",
											"description": "The number of KECCAK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"segment_arena_builtin": {
											"title": "Segment arena",
											"description": "The number of accesses to the segment arena",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"data_availability": {
											"type": "object",
											"required": [
												"l1_gas",
												"l1_data_gas"
											],
											"properties": {
												"l1_gas": {
													"title": "L1 Gas",
													"description": "The gas consumed by this transaction's data, 0 if it uses data gas for DA\n",
													"type": "integer"
												},
												"l1_data_gas": {
													"title": "L1 Data Gas",
													"description": "The data gas consumed by this transaction's data, 0 if it uses gas for DA\n",
													"type": "integer"
												}
											}
										}
									}
								}
							}
						},
						{
							"title": "Deploy Transaction Receipt",
							"description": "Common properties for a transaction receipt",
							"type": "object",
							"required": [
								"actual_fee",
								"contract_address",
								"events",
								"execution_resources",
								"finality_status",
								"messages_sent",
								"transaction_hash",
								"type"
							],
							"oneOf": [
								{
									"title": "Successful Common receipt properties",
									"description": "Common properties for a transaction receipt that was executed successfully",
									"type": "object",
									"required": [
										"execution_status"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"SUCCEEDED"
											],
											"description": "The execution status of the transaction"
										}
									}
								},
								{
									"title": "Reverted Common receipt properties",
									"description": "Common properties for a transaction receipt that was reverted",
									"type": "object",
									"required": [
										"execution_status",
										"revert_reason"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"REVERTED"
											],
											"description": "The execution status of the transaction"
										},
										"revert_reason": {
											"title": "Revert reason",
											"description": "The revert reason for the failed execution",
											"type": "string"
										}
									}
								}
							],
							"properties": {
								"transaction_hash": {
									"title": "Transaction hash",
									"description": "The hash identifying the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"actual_fee": {
									"title": "Actual fee",
									"description": "The fee that was charged by the sequencer",
									"type": "object",
									"required": [
										"amount",
										"unit"
									],
									"properties": {
										"amount": {
											"title": "Amount",
											"description": "Amount paid",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"unit": {
											"title": "Fee unit",
											"type": "string",
											"enum": [
												"WEI",
												"FRI"
											],
											"description": "Units in which the fee is given"
										}
									}
								},
								"finality_status": {
									"title": "Finality status",
									"description": "Finality status of the transaction",
									"type": "string",
									"enum": [
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1"
									]
								},
								"messages_sent": {
									"title": "Messages sent",
									"type": "array",
									"items": {
										"title": "Message to L1",
										"type": "object",
										"required": [
											"from_address",
											"to_address",
											"payload"
										],
										"properties": {
											"from_address": {
												"title": "Field element",
												"description": "The address of the L2 contract sending the message",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"to_address": {
												"title": "To address",
												"description": "The target L1 address the message is sent to",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"payload": {
												"title": "Payload",
												"description": "The payload of the message",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"events": {
									"title": "Events",
									"description": "The events emitted as part of this transaction",
									"type": "array",
									"items": {
										"title": "Event",
										"description": "A StarkNet event",
										"type": "object",
										"required": [
											"data",
											"from_address",
											"keys"
										],
										"properties": {
											"from_address": {
												"title": "From address",
												"description": "A contract address",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"keys": {
												"title": "Keys",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											},
											"data": {
												"title": "Data",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"execution_resources": {
									"type": "object",
									"title": "Execution resources",
									"description": "The resources consumed by the transaction",
									"required": [
										"data_availability",
										"steps"
									],
									"properties": {
										"steps": {
											"title": "Steps",
											"description": "The number of Cairo steps used",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"memory_holes": {
											"title": "Memory holes",
											"description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"range_check_builtin_applications": {
											"title": "Range check applications",
											"description": "The number of RANGE_CHECK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"pedersen_builtin_applications": {
											"title": "Pedersen applications",
											"description": "The number of Pedersen builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"poseidon_builtin_applications": {
											"title": "Poseidon applications",
											"description": "The number of Poseidon builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ec_op_builtin_applications": {
											"title": "EC_OP applications",
											"description": "The number of EC_OP builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ecdsa_builtin_applications": {
											"title": "ECDSA applications",
											"description": "The number of ECDSA builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"bitwise_builtin_applications": {
											"title": "BITWISE applications",
											"description": "The number of BITWISE builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"keccak_builtin_applications": {
											"title": "Keccak applications",
											"description": "The number of KECCAK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"segment_arena_builtin": {
											"title": "Segment arena",
											"description": "The number of accesses to the segment arena",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"data_availability": {
											"type": "object",
											"required": [
												"l1_gas",
												"l1_data_gas"
											],
											"properties": {
												"l1_gas": {
													"title": "L1 Gas",
													"description": "The gas consumed by this transaction's data, 0 if it uses data gas for DA\n",
													"type": "integer"
												},
												"l1_data_gas": {
													"title": "L1 Data Gas",
													"description": "The data gas consumed by this transaction's data, 0 if it uses gas for DA\n",
													"type": "integer"
												}
											}
										}
									}
								},
								"type": {
									"title": "Deploy",
									"type": "string",
									"enum": [
										"DEPLOY"
									]
								},
								"contract_address": {
									"title": "Contract address",
									"description": "The address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						},
						{
							"title": "Deploy Account Transaction Receipt",
							"description": "Common properties for a transaction receipt",
							"type": "object",
							"required": [
								"actual_fee",
								"contract_address",
								"events",
								"execution_resources",
								"finality_status",
								"messages_sent",
								"transaction_hash",
								"type"
							],
							"oneOf": [
								{
									"title": "Successful Common receipt properties",
									"description": "Common properties for a transaction receipt that was executed successfully",
									"type": "object",
									"required": [
										"execution_status"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"SUCCEEDED"
											],
											"description": "The execution status of the transaction"
										}
									}
								},
								{
									"title": "Reverted Common receipt properties",
									"description": "Common properties for a transaction receipt that was reverted",
									"type": "object",
									"required": [
										"execution_status",
										"revert_reason"
									],
									"properties": {
										"execution_status": {
											"title": "Execution status",
											"type": "string",
											"enum": [
												"REVERTED"
											],
											"description": "The execution status of the transaction"
										},
										"revert_reason": {
											"title": "Revert reason",
											"description": "The revert reason for the failed execution",
											"type": "string"
										}
									}
								}
							],
							"properties": {
								"transaction_hash": {
									"title": "Transaction hash",
									"description": "The hash identifying the transaction",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"actual_fee": {
									"title": "Actual fee",
									"description": "The fee that was charged by the sequencer",
									"type": "object",
									"required": [
										"amount",
										"unit"
									],
									"properties": {
										"amount": {
											"title": "Amount",
											"description": "Amount paid",
											"type": "string",
											"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
										},
										"unit": {
											"title": "Fee unit",
											"type": "string",
											"enum": [
												"WEI",
												"FRI"
											],
											"description": "Units in which the fee is given"
										}
									}
								},
								"finality_status": {
									"title": "Finality status",
									"description": "Finality status of the transaction",
									"type": "string",
									"enum": [
										"ACCEPTED_ON_L2",
										"ACCEPTED_ON_L1"
									]
								},
								"messages_sent": {
									"title": "Messages sent",
									"type": "array",
									"items": {
										"title": "Message to L1",
										"type": "object",
										"required": [
											"from_address",
											"to_address",
											"payload"
										],
										"properties": {
											"from_address": {
												"title": "Field element",
												"description": "The address of the L2 contract sending the message",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"to_address": {
												"title": "To address",
												"description": "The target L1 address the message is sent to",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"payload": {
												"title": "Payload",
												"description": "The payload of the message",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"events": {
									"title": "Events",
									"description": "The events emitted as part of this transaction",
									"type": "array",
									"items": {
										"title": "Event",
										"description": "A StarkNet event",
										"type": "object",
										"required": [
											"data",
											"from_address",
											"keys"
										],
										"properties": {
											"from_address": {
												"title": "From address",
												"description": "A contract address",
												"type": "string",
												"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
											},
											"keys": {
												"title": "Keys",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											},
											"data": {
												"title": "Data",
												"type": "array",
												"items": {
													"title": "Field element",
													"description": "A field element. Represented by at most 63 hex digits",
													"type": "string",
													"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
												}
											}
										}
									}
								},
								"execution_resources": {
									"type": "object",
									"title": "Execution resources",
									"description": "The resources consumed by the transaction",
									"required": [
										"data_availability",
										"steps"
									],
									"properties": {
										"steps": {
											"title": "Steps",
											"description": "The number of Cairo steps used",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"memory_holes": {
											"title": "Memory holes",
											"description": "The number of unused memory cells (each cell is roughly equivalent to a step)",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"range_check_builtin_applications": {
											"title": "Range check applications",
											"description": "The number of RANGE_CHECK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"pedersen_builtin_applications": {
											"title": "Pedersen applications",
											"description": "The number of Pedersen builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"poseidon_builtin_applications": {
											"title": "Poseidon applications",
											"description": "The number of Poseidon builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ec_op_builtin_applications": {
											"title": "EC_OP applications",
											"description": "The number of EC_OP builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"ecdsa_builtin_applications": {
											"title": "ECDSA applications",
											"description": "The number of ECDSA builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"bitwise_builtin_applications": {
											"title": "BITWISE applications",
											"description": "The number of BITWISE builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"keccak_builtin_applications": {
											"title": "Keccak applications",
											"description": "The number of KECCAK builtin instances",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"segment_arena_builtin": {
											"title": "Segment arena",
											"description": "The number of accesses to the segment arena",
											"type": "integer",
											"not": {
												"anyOf": [
													{
														"anyOf": [
															{
																"anyOf": [
																	{
																		"anyOf": [
																			{
																				"anyOf": [
																					{
																						"const": 0
																					}
																				]
																			}
																		]
																	}
																]
															}
														]
													}
												]
											}
										},
										"data_availability": {
											"type": "object",
											"required": [
												"l1_gas",
												"l1_data_gas"
											],
											"properties": {
												"l1_gas": {
													"title": "L1 Gas",
													"description": "The gas consumed by this transaction's data, 0 if it uses data gas for DA\n",
													"type": "integer"
												},
												"l1_data_gas": {
													"title": "L1 Data Gas",
													"description": "The data gas consumed by this transaction's data, 0 if it uses gas for DA\n",
													"type": "integer"
												}
											}
										}
									}
								},
								"type": {
									"title": "Deploy account",
									"type": "string",
									"enum": [
										"DEPLOY_ACCOUNT"
									]
								},
								"contract_address": {
									"title": "Contract address",
									"description": "The address of the deployed contract",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								}
							}
						}
					],
					"type": "object",
					"properties": {
						"block_hash": {
							"title": "Block hash",
							"description": "If this field is missing, it means the receipt belongs to the pending block",
							"type": "string",
							"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
						},
						"block_number": {
							"title": "Block number",
							"description": "If this field is missing, it means the receipt belongs to the pending block",
							"type": "integer",
							"minimum": 0
						}
					}
				}
			}
		},
		{
			"name": "starknet_syncing",
			"summary": "Returns an object about the sync status, or false if the node is not syncing",
			"params": [],
			"result": {
				"name": "syncing",
				"summary": "The state of the synchronization, or false if the node is not synchronizing\n",
				"description": "The status of the node, if it is currently synchronizing state. FALSE otherwise\n",
				"schema": {
					"title": "SyncingStatus",
					"oneOf": [
						{
							"type": "boolean",
							"title": "False",
							"description": "Only legal value is FALSE here"
						},
						{
							"title": "Sync status",
							"type": "object",
							"description": "An object describing the node synchronization status",
							"required": [
								"starting_block_hash",
								"starting_block_num",
								"current_block_hash",
								"current_block_num",
								"highest_block_hash",
								"highest_block_num"
							],
							"properties": {
								"starting_block_hash": {
									"title": "Starting block hash",
									"description": "The hash of the block from which the sync started",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"starting_block_num": {
									"title": "Starting block number",
									"description": "The number (height) of the block from which the sync started",
									"type": "integer",
									"minimum": 0
								},
								"current_block_hash": {
									"title": "Current block hash",
									"description": "The hash of the current block being synchronized",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"current_block_num": {
									"title": "Current block number",
									"description": "The number (height) of the current block being synchronized",
									"type": "integer",
									"minimum": 0
								},
								"highest_block_hash": {
									"title": "Highest block hash",
									"description": "The hash of the estimated highest block to be synchronized",
									"type": "string",
									"pattern": "^0x(0|[a-fA-F1-9]{1}[a-fA-F0-9]{0,62})$"
								},
								"highest_block_num": {
									"title": "Highest block number",
									"description": "The number (height) of the estimated highest block to be synchronized",
									"type": "integer",
									"minimum": 0
								}
							}
						}
					]
				}
			}
		}
	]
}